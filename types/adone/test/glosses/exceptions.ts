namespace ExcetpionsTests {
    { const a: Error = new adone.exception.Exception(); }
    { const a: Error = new adone.exception.Exception("message"); }
    { const a: Error = new adone.exception.Exception(new Error()); }
    { const a: Error = new adone.exception.Exception(new Error(), true); }
    { const a: adone.exception.Exception = new adone.exception.Runtime(); }
    { const a: adone.exception.Exception = new adone.exception.IncompleteBufferError(); }
    { const a: adone.exception.Exception = new adone.exception.NotImplemented(); }
    { const a: adone.exception.Exception = new adone.exception.IllegalState(); }
    { const a: adone.exception.Exception = new adone.exception.NotValid(); }
    { const a: adone.exception.Exception = new adone.exception.Unknown(); }
    { const a: adone.exception.Exception = new adone.exception.NotExists(); }
    { const a: adone.exception.Exception = new adone.exception.Exists(); }
    { const a: adone.exception.Exception = new adone.exception.Empty(); }
    { const a: adone.exception.Exception = new adone.exception.InvalidAccess(); }
    { const a: adone.exception.Exception = new adone.exception.NotSupported(); }
    { const a: adone.exception.Exception = new adone.exception.InvalidArgument(); }
    { const a: adone.exception.Exception = new adone.exception.InvalidNumberOfArguments(); }
    { const a: adone.exception.Exception = new adone.exception.NotFound(); }
    { const a: adone.exception.Exception = new adone.exception.Timeout(); }
    { const a: adone.exception.Exception = new adone.exception.Incorrect(); }
    { const a: adone.exception.Exception = new adone.exception.NotAllowed(); }
    { const a: adone.exception.Exception = new adone.exception.LimitExceeded(); }
    { const a: adone.exception.Exception = new adone.exception.Encoding(); }
    { const a: adone.exception.Exception = new adone.exception.Network(); }
    { const a: adone.exception.Exception = new adone.exception.Bind(); }
    { const a: adone.exception.Exception = new adone.exception.Connect(); }
    { const a: adone.exception.Exception = new adone.exception.Database(); }
    { const a: adone.exception.Exception = new adone.exception.DatabaseInitialization(); }
    { const a: adone.exception.Exception = new adone.exception.DatabaseOpen(); }
    { const a: adone.exception.Exception = new adone.exception.DatabaseRead(); }
    { const a: adone.exception.Exception = new adone.exception.DatabaseWrite(); }
    { const a: adone.exception.Exception = new adone.exception.NetronIllegalState(); }
    { const a: adone.exception.Exception = new adone.exception.NetronPeerDisconnected(); }
    { const a: adone.exception.Exception = new adone.exception.NetronTimeout(); }
}
