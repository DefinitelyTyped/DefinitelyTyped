// Type definitions for broken-link-checker 0.7
// Project: https://github.com/stevenvachon/broken-link-checker
// Definitions by: Anh Le <https://github.com/Haizzz>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

export interface Options {
    acceptedSchemes?: string[];
    cacheExpiryTime?: number;
    cacheResponses?: boolean;
    excludedKeywords?: string[];
    excludedSchemes?: string[];
    excludeExternalLinks?: boolean;
    excludeInternalLinks?: boolean;
    excludeLinksToSamePage?: boolean;
    filterLevel?: 0 | 1 | 2 | 3;
    honorRobotExclusions?: boolean;
    maxSockets?: number;
    maxSocketsPerHost?: number;
    rateLimit?: number;
    requestMethod?: string;
    retry405Head?: boolean;
    userAgent?: string;
}
/** Declaration file generated by dts-gen */

export class HtmlChecker {
    constructor(
        options: Options,
        handlers: {
            html?: (tree: any, robots: any) => void;
            junk?: (result: any) => void;
            link?: (result: any) => void;
            complete?: () => void;
        },
    );

    clearCache(): any;

    numActiveLinks(): any;

    numQueuedLinks(): any;

    pause(): any;

    resume(): any;

    scan(html: any, baseUrl: any, robots: any): any;
}

export class HtmlUrlChecker {
    constructor(
        options: Options,
        handlers: {
            html?: (tree: any, robots: any) => void;
            junk?: (result: any) => void;
            link?: (result: any) => void;
            page?: (error: any, pageUrl: any, customData: any) => void;
            end?: () => void;
        },
    );

    clearCache(): any;

    dequeue(id: any): any;

    enqueue(pageUrl: any, customData: any): any;

    numActiveLinks(): any;

    numPages(): any;

    numQueuedLinks(): any;

    pause(): any;

    resume(): any;
}

export class SiteChecker {
    constructor(
        options: Options,
        handlers: {
            robots?: (robots: any, customData: any) => void;
            html?: (tree: any, robots: any) => void;
            junk?: (result: any) => void;
            link?: (result: any) => void;
            page?: (error: any, pageUrl: any, customData: any) => void;
            site?: (error: any, siteUrl: any, customData: any) => void;
            end?: () => void;
        },
    );

    clearCache(): any;

    dequeue(id: any): any;

    enqueue(firstPageUrl: any, customData: any): any;

    numActiveLinks(): any;

    numPages(): any;

    numQueuedLinks(): any;

    numSites(): any;

    pause(): any;

    resume(): any;
}

export class UrlChecker {
    constructor(
        options: Options,
        handlers: {
            link?: (result: any) => void;
            end?: () => void;
        },
    );

    clearCache(): any;

    dequeue(id: any): any;

    enqueue(url: any, baseUrl: any, customData: any): any;

    numActiveLinks(): any;

    numQueuedLinks(): any;

    pause(): any;

    resume(): any;
}

export const BLC_EXTERNAL: string;

export const BLC_HTML: string;

export const BLC_INTERNAL: string;

export const BLC_INVALID: string;

export const BLC_KEYWORD: string;

export const BLC_ROBOTS: string;

export const BLC_SAMEPAGE: string;

export const BLC_SCHEME: string;

export const BLC_UNKNOWN: string;

export const ERRNO_EACCES: string;

export const ERRNO_EADDRINFO: string;

export const ERRNO_EADDRINUSE: string;

export const ERRNO_EADDRNOTAVAIL: string;

export const ERRNO_EAFNOSUPPORT: string;

export const ERRNO_EAGAIN: string;

export const ERRNO_EAIFAMNOSUPPORT: string;

export const ERRNO_EAISERVICE: string;

export const ERRNO_EAISOCKTYPE: string;

export const ERRNO_EALREADY: string;

export const ERRNO_EBADF: string;

export const ERRNO_EBUSY: string;

export const ERRNO_ECANCELED: string;

export const ERRNO_ECHARSET: string;

export const ERRNO_ECONNABORTED: string;

export const ERRNO_ECONNREFUSED: string;

export const ERRNO_ECONNRESET: string;

export const ERRNO_EDESTADDRREQ: string;

export const ERRNO_EEXIST: string;

export const ERRNO_EFAULT: string;

export const ERRNO_EHOSTUNREACH: string;

export const ERRNO_EINTR: string;

export const ERRNO_EINVAL: string;

export const ERRNO_EIO: string;

export const ERRNO_EISCONN: string;

export const ERRNO_EISDIR: string;

export const ERRNO_ELOOP: string;

export const ERRNO_EMFILE: string;

export const ERRNO_EMSGSIZE: string;

export const ERRNO_ENAMETOOLONG: string;

export const ERRNO_ENETDOWN: string;

export const ERRNO_ENETUNREACH: string;

export const ERRNO_ENFILE: string;

export const ERRNO_ENOBUFS: string;

export const ERRNO_ENODEV: string;

export const ERRNO_ENOENT: string;

export const ERRNO_ENOMEM: string;

export const ERRNO_ENONET: string;

export const ERRNO_ENOSPC: string;

export const ERRNO_ENOSYS: string;

export const ERRNO_ENOTCONN: string;

export const ERRNO_ENOTDIR: string;

export const ERRNO_ENOTEMPTY: string;

export const ERRNO_ENOTFOUND: string;

export const ERRNO_ENOTSOCK: string;

export const ERRNO_ENOTSUP: string;

export const ERRNO_EOF: string;

export const ERRNO_EPERM: string;

export const ERRNO_EPIPE: string;

export const ERRNO_EPROTO: string;

export const ERRNO_EPROTONOSUPPORT: string;

export const ERRNO_EPROTOTYPE: string;

export const ERRNO_EROFS: string;

export const ERRNO_ESHUTDOWN: string;

export const ERRNO_ESPIPE: string;

export const ERRNO_ESRCH: string;

export const ERRNO_ETIMEDOUT: string;

export const ERRNO_EXDEV: string;

export const ERRNO_OK: string;

export const ERRNO_UNKNOWN: string;

export const HTTP_100: string;

export const HTTP_101: string;

export const HTTP_102: string;

export const HTTP_103: string;

export const HTTP_200: string;

export const HTTP_201: string;

export const HTTP_202: string;

export const HTTP_203: string;

export const HTTP_204: string;

export const HTTP_205: string;

export const HTTP_206: string;

export const HTTP_207: string;

export const HTTP_208: string;

export const HTTP_226: string;

export const HTTP_300: string;

export const HTTP_301: string;

export const HTTP_302: string;

export const HTTP_303: string;

export const HTTP_304: string;

export const HTTP_305: string;

export const HTTP_307: string;

export const HTTP_308: string;

export const HTTP_400: string;

export const HTTP_401: string;

export const HTTP_402: string;

export const HTTP_403: string;

export const HTTP_404: string;

export const HTTP_405: string;

export const HTTP_406: string;

export const HTTP_407: string;

export const HTTP_408: string;

export const HTTP_409: string;

export const HTTP_410: string;

export const HTTP_411: string;

export const HTTP_412: string;

export const HTTP_413: string;

export const HTTP_414: string;

export const HTTP_415: string;

export const HTTP_416: string;

export const HTTP_417: string;

export const HTTP_418: string;

export const HTTP_421: string;

export const HTTP_422: string;

export const HTTP_423: string;

export const HTTP_424: string;

export const HTTP_425: string;

export const HTTP_426: string;

export const HTTP_428: string;

export const HTTP_429: string;

export const HTTP_431: string;

export const HTTP_451: string;

export const HTTP_500: string;

export const HTTP_501: string;

export const HTTP_502: string;

export const HTTP_503: string;

export const HTTP_504: string;

export const HTTP_505: string;

export const HTTP_506: string;

export const HTTP_507: string;

export const HTTP_508: string;

export const HTTP_509: string;

export const HTTP_510: string;

export const HTTP_511: string;
