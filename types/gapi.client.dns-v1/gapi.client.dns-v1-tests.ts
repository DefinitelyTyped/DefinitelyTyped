/* This is stub file for gapi.client.dns definition tests */
/* IMPORTANT. 
 * This file was automatically generated by https://github.com/Bolisov/google-api-typings-generator. Please do not edit it manually.
 * In case of any problems please post issue to https://github.com/Bolisov/google-api-typings-generator    
 **/

gapi.load('client', () => { 
    // now we can use gapi.client
    
    gapi.client.load('dns', 'v1', () => {
        // now we can use gapi.client.dns
   
        // don't forget to authenticate your client before sending any request to resources:     
        // declare client_id registered in Google Developers Console
        const client_id = '<<PUT YOUR CLIENT ID HERE>>';
        const scope = [     
                // View and manage your data across Google Cloud Platform services
                'https://www.googleapis.com/auth/cloud-platform',
            
                // View your data across Google Cloud Platform services
                'https://www.googleapis.com/auth/cloud-platform.read-only',
            
                // View your DNS records hosted by Google Cloud DNS
                'https://www.googleapis.com/auth/ndev.clouddns.readonly',
            
                // View and manage your DNS records hosted by Google Cloud DNS
                'https://www.googleapis.com/auth/ndev.clouddns.readwrite',
            ];
        const immediate = true;

        gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
            if (authResult && !authResult.error) {
                /* handle succesfull authorization */
                run();
            } else {
                /* handle authorization error */
            }
        }); 
    });

    async function run() {  
        
        // Atomically update the ResourceRecordSet collection.
        await gapi.client.changes.create({ managedZone: "managedZone", project: "project",  }); 
        
        // Fetch the representation of an existing Change.
        await gapi.client.changes.get({ changeId: "changeId", managedZone: "managedZone", project: "project",  }); 
        
        // Enumerate Changes to a ResourceRecordSet collection.
        await gapi.client.changes.list({ managedZone: "managedZone", project: "project",  }); 
        
        // Create a new ManagedZone.
        await gapi.client.managedZones.create({ project: "project",  }); 
        
        // Delete a previously created ManagedZone.
        await gapi.client.managedZones.delete({ managedZone: "managedZone", project: "project",  }); 
        
        // Fetch the representation of an existing ManagedZone.
        await gapi.client.managedZones.get({ managedZone: "managedZone", project: "project",  }); 
        
        // Enumerate ManagedZones that have been created but not yet deleted.
        await gapi.client.managedZones.list({ project: "project",  }); 
        
        // Fetch the representation of an existing Project.
        await gapi.client.projects.get({ project: "project",  }); 
        
        // Enumerate ResourceRecordSets that have been created but not yet deleted.
        await gapi.client.resourceRecordSets.list({ managedZone: "managedZone", project: "project",  });
    }
});
