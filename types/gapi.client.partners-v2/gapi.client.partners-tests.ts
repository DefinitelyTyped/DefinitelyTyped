/* This is stub file for gapi.client.partners definition tests */
/* IMPORTANT. 
 * This file was automatically generated by https://github.com/Bolisov/google-api-typings-generator. Please do not edit it manually.
 * In case of any problems please post issue to https://github.com/Bolisov/google-api-typings-generator    
 **/

gapi.load('client', () => { 
    // now we can use gapi.client
    
    gapi.client.load('partners', 'v2', () => {
        // now we can use gapi.client.partners
  
        run();

    });

    async function run() {  
    
        /* 
        Lists the Offers available for the current user  
        */
        await gapi.client.offers.list({  }); 
    
        /* 
        Lists states for current user.  
        */
        await gapi.client.userStates.list({  }); 
    
        /* 
        Lists analytics data for a user's associated company.
Should only be called within the context of an authorized logged in user.  
        */
        await gapi.client.analytics.list({  }); 
    
        /* 
        Updates the specified lead.  
        */
        await gapi.client.v2.updateLeads({  }); 
    
        /* 
        Update company.
Should only be called within the context of an authorized logged in user.  
        */
        await gapi.client.v2.updateCompanies({  }); 
    
        /* 
        Gets Partners Status of the logged in user's agency.
Should only be called if the logged in user is the admin of the agency.  
        */
        await gapi.client.v2.getPartnersstatus({  }); 
    
        /* 
        Deletes a user's company relation. Unaffiliaites the user from a company.  
        */
        await gapi.client.users.deleteCompanyRelation({ userId: "userId",  }); 
    
        /* 
        Creates a user's company relation. Affiliates the user to a company.  
        */
        await gapi.client.users.createCompanyRelation({ userId: "userId",  }); 
    
        /* 
        Gets a user.  
        */
        await gapi.client.users.get({ userId: "userId",  }); 
    
        /* 
        Updates a user's profile. A user can only update their own profile and
should only be called within the context of a logged in user.  
        */
        await gapi.client.users.updateProfile({  }); 
    
        /* 
        Lists companies.  
        */
        await gapi.client.companies.list({  }); 
    
        /* 
        Gets a company.  
        */
        await gapi.client.companies.get({ companyId: "companyId",  }); 
    
        /* 
        Logs a user event.  
        */
        await gapi.client.userEvents.log({  }); 
    
        /* 
        Logs a generic message from the client, such as
`Failed to render component`, `Profile page is running slow`,
`More than 500 users have accessed this result.`, etc.  
        */
        await gapi.client.clientMessages.log({  }); 
    
        /* 
        Gets an Exam Token for a Partner's user to take an exam in the Exams System  
        */
        await gapi.client.exams.getToken({ examType: "examType",  }); 
    
        /* 
        Lists advertiser leads for a user's associated company.
Should only be called within the context of an authorized logged in user.  
        */
        await gapi.client.leads.list({  });
    }
});
