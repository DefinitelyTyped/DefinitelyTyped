/* This is stub file for gapi.client.{{=it.name}} definition tests */
/* IMPORTANT.
* This file was automatically generated by https://github.com/Bolisov/google-api-typings-generator. Please do not edit it manually.
* In case of any problems please post issue to https://github.com/Bolisov/google-api-typings-generator
**/
gapi.load('client', () => {
    /** now we can use gapi.client */
    gapi.client.load('resourceviews', 'v1beta2', () => {
        /** now we can use gapi.client.resourceviews */

        /** don't forget to authenticate your client before sending any request to resources: */
        /** declare client_id registered in Google Developers Console */
        const client_id = '<<PUT YOUR CLIENT ID HERE>>';
        const scope = [
            /** View and manage your data across Google Cloud Platform services */
            'https://www.googleapis.com/auth/cloud-platform',
            /** View your data across Google Cloud Platform services */
            'https://www.googleapis.com/auth/cloud-platform.read-only',
            /** View and manage your Google Compute Engine resources */
            'https://www.googleapis.com/auth/compute',
            /** View your Google Compute Engine resources */
            'https://www.googleapis.com/auth/compute.readonly',
            /** View and manage your Google Cloud Platform management resources and deployment status information */
            'https://www.googleapis.com/auth/ndev.cloudman',
            /** View your Google Cloud Platform management resources and deployment status information */
            'https://www.googleapis.com/auth/ndev.cloudman.readonly',
        ];
        const immediate = true;
        gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
            if (authResult && !authResult.error) {
                /** handle succesfull authorization */
                run();
            } else {
                /** handle authorization error */
            }
        });
        run();
    });

    async function run() {
        /** Retrieves the specified zone-specific operation resource. */
        await gapi.client.zoneOperations.get({
            operation: "operation",
            project: "project",
            zone: "zone",
        });
        /** Retrieves the list of operation resources contained within the specified zone. */
        await gapi.client.zoneOperations.list({
            filter: "filter",
            maxResults: 2,
            pageToken: "pageToken",
            project: "project",
            zone: "zone",
        });
        /** Add resources to the view. */
        await gapi.client.zoneViews.addResources({
            project: "project",
            resourceView: "resourceView",
            zone: "zone",
        });
        /** Delete a resource view. */
        await gapi.client.zoneViews.delete({
            project: "project",
            resourceView: "resourceView",
            zone: "zone",
        });
        /** Get the information of a zonal resource view. */
        await gapi.client.zoneViews.get({
            project: "project",
            resourceView: "resourceView",
            zone: "zone",
        });
        /** Get the service information of a resource view or a resource. */
        await gapi.client.zoneViews.getService({
            project: "project",
            resourceName: "resourceName",
            resourceView: "resourceView",
            zone: "zone",
        });
        /** Create a resource view. */
        await gapi.client.zoneViews.insert({
            project: "project",
            zone: "zone",
        });
        /** List resource views. */
        await gapi.client.zoneViews.list({
            maxResults: 1,
            pageToken: "pageToken",
            project: "project",
            zone: "zone",
        });
        /** List the resources of the resource view. */
        await gapi.client.zoneViews.listResources({
            format: "format",
            listState: "listState",
            maxResults: 3,
            pageToken: "pageToken",
            project: "project",
            resourceView: "resourceView",
            serviceName: "serviceName",
            zone: "zone",
        });
        /** Remove resources from the view. */
        await gapi.client.zoneViews.removeResources({
            project: "project",
            resourceView: "resourceView",
            zone: "zone",
        });
        /** Update the service information of a resource view or a resource. */
        await gapi.client.zoneViews.setService({
            project: "project",
            resourceView: "resourceView",
            zone: "zone",
        });
    }
});
