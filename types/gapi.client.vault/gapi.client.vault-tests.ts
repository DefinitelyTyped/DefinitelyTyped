/* This is stub file for gapi.client.{{=it.name}} definition tests */
/* IMPORTANT.
* This file was automatically generated by https://github.com/Bolisov/google-api-typings-generator. Please do not edit it manually.
* In case of any problems please post issue to https://github.com/Bolisov/google-api-typings-generator
**/
gapi.load('client', () => {
    /** now we can use gapi.client */
    gapi.client.load('vault', 'v1', () => {
        /** now we can use gapi.client.vault */

        /** don't forget to authenticate your client before sending any request to resources: */
        /** declare client_id registered in Google Developers Console */
        const client_id = '<<PUT YOUR CLIENT ID HERE>>';
        const scope = [
            /** Manage your eDiscovery data */
            'https://www.googleapis.com/auth/ediscovery',
            /** View your eDiscovery data */
            'https://www.googleapis.com/auth/ediscovery.readonly',
        ];
        const immediate = true;
        gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
            if (authResult && !authResult.error) {
                /** handle succesfull authorization */
                run();
            } else {
                /** handle authorization error */
            }
        });
        run();
    });

    async function run() {
        /** Adds an account as a matter collaborator. */
        await gapi.client.matters.addPermissions({
            matterId: "matterId",
        });
        /** Closes the specified matter. Returns matter with updated state. */
        await gapi.client.matters.close({
            matterId: "matterId",
        });
        /**
         * Creates a new matter with the given name and description. The initial state
         * is open, and the owner is the method caller. Returns the created matter
         * with default view.
         */
        await gapi.client.matters.create({
        });
        /** Deletes the specified matter. Returns matter with updated state. */
        await gapi.client.matters.delete({
            matterId: "matterId",
        });
        /** Gets the specified matter. */
        await gapi.client.matters.get({
            matterId: "matterId",
            view: "view",
        });
        /** Lists matters the user has access to. */
        await gapi.client.matters.list({
            pageSize: 1,
            pageToken: "pageToken",
            state: "state",
            view: "view",
        });
        /** Removes an account as a matter collaborator. */
        await gapi.client.matters.removePermissions({
            matterId: "matterId",
        });
        /** Reopens the specified matter. Returns matter with updated state. */
        await gapi.client.matters.reopen({
            matterId: "matterId",
        });
        /** Undeletes the specified matter. Returns matter with updated state. */
        await gapi.client.matters.undelete({
            matterId: "matterId",
        });
        /**
         * Updates the specified matter.
         * This updates only the name and description of the matter, identified by
         * matter id. Changes to any other fields are ignored.
         * Returns the default view of the matter.
         */
        await gapi.client.matters.update({
            matterId: "matterId",
        });
    }
});
