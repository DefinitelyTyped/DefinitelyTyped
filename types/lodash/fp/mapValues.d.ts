import _ = require("../index");

declare namespace Lodash {
    interface MapValues {
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        (): MapValues;
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        <T extends object, TResult>(callback: _.ObjectIterator<T, TResult>): MapValues1x1<T, TResult>;
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        <T extends object, TResult>(callback: _.ObjectIterator<T, TResult>, obj: T | null | undefined): { [P in keyof T]: TResult };
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        (iteratee: object): MapValues2x1;
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        <T extends object>(iteratee: object, obj: T | null | undefined): { [P in keyof T]: boolean };
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        <TKey extends keyof T>(iteratee: TKey): MapValues3x1<TKey>;
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        <T, TKey extends keyof T>(iteratee: TKey, obj: _.Dictionary<T> | null | undefined): _.Dictionary<T[TKey]>;
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        (iteratee: string): MapValues4x1;
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        <T extends object, TKey extends keyof T>(iteratee: string, obj: T | null | undefined): { [P in keyof T]: any };
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        <TResult>(callback: _.StringIterator<TResult>): MapValues5x1<TResult>;
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        <TResult>(callback: _.StringIterator<TResult>, obj: string | null | undefined): _.NumericDictionary<TResult>;
    }
    interface MapValues1x1<T extends object, TResult> {
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        (): MapValues1x1<T, TResult>;
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        (obj: T | null | undefined): { [P in keyof T]: TResult };
    }
    interface MapValues2x1 {
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        (): MapValues2x1;
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        <T extends object>(obj: T | null | undefined): { [P in keyof T]: boolean };
    }
    interface MapValues3x1<TKey extends keyof T> {
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        (): MapValues3x1<TKey>;
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        <T>(obj: _.Dictionary<T> | null | undefined): _.Dictionary<T[TKey]>;
    }
    interface MapValues4x1 {
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        (): MapValues4x1;
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        <T extends object, TKey extends keyof T>(obj: T | null | undefined): { [P in keyof T]: any };
    }
    interface MapValues5x1<TResult> {
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        (): MapValues5x1<TResult>;
        /**
        * Creates an object with the same keys as object and values generated by running each own
        * enumerable property of object through iteratee. The iteratee function is bound to thisArg
        * and invoked with three arguments: (value, key, object).
        *
        * If a property name is provided iteratee the created "_.property" style callback returns
        * the property value of the given element.
        *
        * If a value is also provided for thisArg the creted "_.matchesProperty" style callback returns
        * true for elements that have a matching property value, else false;.
        *
        * If an object is provided for iteratee the created "_.matches" style callback returns true
        * for elements that have the properties of the given object, else false.
        *
        * @param object The object to iterate over.
        * @param [iteratee=_.identity]  The function invoked per iteration.
        * @param [thisArg] The `this` binding of `iteratee`.
        * @return Returns the new mapped object.
        */
        (obj: string | null | undefined): _.NumericDictionary<TResult>;
    }
}

declare const mapValues: Lodash.MapValues;
export = mapValues;
