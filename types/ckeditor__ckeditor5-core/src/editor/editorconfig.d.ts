import Plugin from "../plugin";
// import {Alignment} from "@ckeditor/ckeditor5-alignment/src/alignment"
type Alignment = any;
// import {AutosaveConfig} from "@ckeditor/ckeditor5-autosave/src/autosave"
type AutosaveConfig = any;
// import {CKFinderConfig} from "@ckeditor/ckeditor5-ckfinder/src/ckfinder";
type CKFinderConfig = any;
// import {CloudServicesConfig} from "@ckeditor/ckeditor5-cloud-services/src/cloudservices";
type CloudServicesConfig = any;
// import {CodeBlockConfig} from "@ckeditor/ckeditor5-code-block/src/codeblock";
type CodeBlockConfig = any;
// import {RealTimeCollaborationConfig} from "@ckeditor/ckeditor5-real-time-collaboration/src/realtimecollaborativeediting";
type RealTimeCollaborationConfig = any;
// import {CommentsConfig} from "@ckeditor/ckeditor5-comments/src/comments";
type CommentsConfig = any;
// import {ExportPdfConfig} from "@ckeditor/ckeditor5-export-pdf/src/exportpdf";
type ExportPdfConfig = any;
// import {ExportWordConfig} from "@ckeditor/ckeditor5-export-word/src/exportword";
type ExportWordConfig = any;
// import {FontBackgroundColorConfig} from "@ckeditor/ckeditor5-font/src/fontbackgroundcolor";
type FontBackgroundColorConfig = any;
// import {FontColorConfig} from "@ckeditor/ckeditor5-font/src/fontcolor";
type FontColorConfig = any;
// import {FontFamilyConfig} from "@ckeditor/ckeditor5-font/src/fontfamily";
type FontFamilyConfig = any;
// import {FontSizeConfig} from "@ckeditor/ckeditor5-font/src/fontsize";
type FontSizeConfig = any;
// import {HeadingConfig} from "@ckeditor/ckeditor5-heading/src/heading";
type HeadingConfig = any;
// import {HighlightConfig} from "@ckeditor/ckeditor5-highlight/src/highlight";
type HighlightConfig = any;
// import {ImageConfig} from "@ckeditor/ckeditor5-image/src/image";
type ImageConfig = any;
// import {IndentBlockConfig} from "@ckeditor/ckeditor5-indent/src/indentblock";
type IndentBlockConfig = any;
// import {LinkConfig} from "@ckeditor/ckeditor5-link/src/link";
type LinkConfig = any;
// import {MediaEmbedConfig} from "@ckeditor/ckeditor5-media-embed/src/mediaembed";
type MediaEmbedConfig = any;
// import {MentionConfig} from "@ckeditor/ckeditor5-mention/src/mention";
type MentionConfig = any;
// import {PaginationConfig} from "@ckeditor/ckeditor5-pagination/src/pagination";
type PaginationConfig = any;
// import {RestrictedEditingModeConfig} from "@ckeditor/ckeditor5-restricted-editing/src/restrictededitingmode";
type RestrictedEditingModeConfig = any;
// import {SidebarConfig} from "@ckeditor/ckeditor5-comments/src/annotations/sidebar";
type SidebarConfig = any;
// import {SimpleUploadConfig} from "@ckeditor/ckeditor5-upload/src/adapters/simpleuploadadapter";
type SimpleUploadConfig = any;
// import {TableConfig} from "@ckeditor/ckeditor5-table/src/table";
type TableConfig = any;
// import {TitleConfig} from "@ckeditor/ckeditor5-heading/src/title";
type TitleConfig = any;
// import {TrackChangesConfig} from "@ckeditor/ckeditor5-track-changes/src/trackchanges";
type TrackChangesConfig = any;
// import {TypingConfig} from "@ckeditor/ckeditor5-typing/src/typing";
type TypingConfig = any;
// import {WordCountConfig} from "@ckeditor/ckeditor5-word-count/src/wordcount";
type WordCountConfig = any;
// import {TextPartLanguageOption} from "@ckeditor/ckeditor5-language/src/textpartlanguage";
type TextPartLanguageOption = any;

export interface EditorConfig {
    alignment: Alignment;
    autosave: AutosaveConfig;
    balloonToolbar: string[] | { items: string[]; shouldNotGroupWhenFull?: boolean };
    blockToolbar: string[] | { items: string[]; shouldNotGroupWhenFull?: boolean };
    ckfinder: CKFinderConfig;
    cloudServices: CloudServicesConfig;
    codeBlock: CodeBlockConfig;
    collaboration: RealTimeCollaborationConfig;
    comments: CommentsConfig;
    exportPdf: ExportPdfConfig;
    exportWord: ExportWordConfig;
    extraPlugins: Array<typeof Plugin>;
    fontBackgroundColor: FontBackgroundColorConfig;
    fontColor: FontColorConfig;
    fontFamily: FontFamilyConfig;
    fontSize: FontSizeConfig;
    heading: HeadingConfig;
    highlight: HighlightConfig;
    image: ImageConfig;
    indentBlock: IndentBlockConfig;
    initialData: string;
    language: string | LanguageConfig;
    licenseKey: string;
    link: LinkConfig;
    mediaEmbed: MediaEmbedConfig;
    mention: MentionConfig;
    pagination: PaginationConfig;
    placeholder: string;
    plugins: Array<string | typeof Plugin>;
    removePlugins: Array<string | typeof Plugin>;
    restrictedEditing: RestrictedEditingModeConfig;
    sidebar: SidebarConfig;
    simpleUpload: SimpleUploadConfig;
    table: TableConfig;
    title: TitleConfig;
    toolbar: string[] | { items: string[]; viewportTopOffset?: number; shouldNotGroupWhenFull?: boolean };
    trackChanges: TrackChangesConfig;
    typing: TypingConfig;
    wordCount: WordCountConfig;
}

export interface LanguageConfig {
    content: string;
    textPartLanguage: TextPartLanguageOption[];
    ui: string;
}

export {};
