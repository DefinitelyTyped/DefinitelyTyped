/* This is stub file for gapi.client.{{=it.name}} definition tests */
/* IMPORTANT.
* This file was automatically generated by https://github.com/Bolisov/google-api-typings-generator. Please do not edit it manually.
* In case of any problems please post issue to https://github.com/Bolisov/google-api-typings-generator
**/
gapi.load('client', () => {
    /** now we can use gapi.client */
    gapi.client.load('storagetransfer', 'v1', () => {
        /** now we can use gapi.client.storagetransfer */

        /** don't forget to authenticate your client before sending any request to resources: */
        /** declare client_id registered in Google Developers Console */
        const client_id = '<<PUT YOUR CLIENT ID HERE>>';
        const scope = [
            /** View and manage your data across Google Cloud Platform services */
            'https://www.googleapis.com/auth/cloud-platform',
        ];
        const immediate = true;
        gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
            if (authResult && !authResult.error) {
                /** handle succesfull authorization */
                run();
            } else {
                /** handle authorization error */
            }
        });
        run();
    });

    async function run() {
        /**
         * Returns the Google service account that is used by Storage Transfer
         * Service to access buckets in the project where transfers
         * run or in other projects. Each Google service account is associated
         * with one Google Cloud Platform Console project. Users
         * should add this service account to the Google Cloud Storage bucket
         * ACLs to grant access to Storage Transfer Service. This service
         * account is created and owned by Storage Transfer Service and can
         * only be used by Storage Transfer Service.
         */
        await gapi.client.googleServiceAccounts.get({
            projectId: "projectId",
        });
        /** Creates a transfer job that runs periodically. */
        await gapi.client.transferJobs.create({
        });
        /** Gets a transfer job. */
        await gapi.client.transferJobs.get({
            jobName: "jobName",
            projectId: "projectId",
        });
        /** Lists transfer jobs. */
        await gapi.client.transferJobs.list({
            filter: "filter",
            pageSize: 2,
            pageToken: "pageToken",
        });
        /**
         * Updates a transfer job. Updating a job's transfer spec does not affect
         * transfer operations that are running already. Updating the scheduling
         * of a job is not allowed.
         */
        await gapi.client.transferJobs.patch({
            jobName: "jobName",
        });
        /** Cancels a transfer. Use the get method to check whether the cancellation succeeded or whether the operation completed despite cancellation. */
        await gapi.client.transferOperations.cancel({
            name: "name",
        });
        /** This method is not supported and the server returns `UNIMPLEMENTED`. */
        await gapi.client.transferOperations.delete({
            name: "name",
        });
        /**
         * Gets the latest state of a long-running operation.  Clients can use this
         * method to poll the operation result at intervals as recommended by the API
         * service.
         */
        await gapi.client.transferOperations.get({
            name: "name",
        });
        /**
         * Lists operations that match the specified filter in the request. If the
         * server doesn't support this method, it returns `UNIMPLEMENTED`.
         *
         * NOTE: the `name` binding allows API services to override the binding
         * to use different resource name schemes, such as `users/&#42;/operations`. To
         * override the binding, API services can add a binding such as
         * `"/v1/{name=users/&#42;}/operations"` to their service configuration.
         * For backwards compatibility, the default name includes the operations
         * collection id, however overriding users must ensure the name binding
         * is the parent resource, without the operations collection id.
         */
        await gapi.client.transferOperations.list({
            filter: "filter",
            name: "name",
            pageSize: 3,
            pageToken: "pageToken",
        });
        /** Pauses a transfer operation. */
        await gapi.client.transferOperations.pause({
            name: "name",
        });
        /** Resumes a transfer operation that is paused. */
        await gapi.client.transferOperations.resume({
            name: "name",
        });
    }
});
