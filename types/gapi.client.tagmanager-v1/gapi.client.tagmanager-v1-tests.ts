/* This is stub file for gapi.client.tagmanager definition tests */
/* IMPORTANT. 
 * This file was automatically generated by https://github.com/Bolisov/google-api-typings-generator. Please do not edit it manually.
 * In case of any problems please post issue to https://github.com/Bolisov/google-api-typings-generator    
 **/

gapi.load('client', () => { 
    // now we can use gapi.client
    
    gapi.client.load('tagmanager', 'v1', () => {
        // now we can use gapi.client.tagmanager
   
        // don't forget to authenticate your client before sending any request to resources:     
        // declare client_id registered in Google Developers Console
        const client_id = '<<PUT YOUR CLIENT ID HERE>>';
        const scope = [     
                // Delete your Google Tag Manager containers
                'https://www.googleapis.com/auth/tagmanager.delete.containers',
            
                // Manage your Google Tag Manager container and its subcomponents, excluding versioning and publishing
                'https://www.googleapis.com/auth/tagmanager.edit.containers',
            
                // Manage your Google Tag Manager container versions
                'https://www.googleapis.com/auth/tagmanager.edit.containerversions',
            
                // View and manage your Google Tag Manager accounts
                'https://www.googleapis.com/auth/tagmanager.manage.accounts',
            
                // Manage user permissions of your Google Tag Manager account and container
                'https://www.googleapis.com/auth/tagmanager.manage.users',
            
                // Publish your Google Tag Manager container versions
                'https://www.googleapis.com/auth/tagmanager.publish',
            
                // View your Google Tag Manager container and its subcomponents
                'https://www.googleapis.com/auth/tagmanager.readonly',
            ];
        const immediate = true;

        gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
            if (authResult && !authResult.error) {
                /* handle succesfull authorization */
                run();
            } else {
                /* handle authorization error */
            }
        }); 
    });

    async function run() {  
        
        // Gets a GTM Account.
        await gapi.client.accounts.get({ accountId: "accountId",  }); 
        
        // Lists all GTM Accounts that a user has access to.
        await gapi.client.accounts.list({  }); 
        
        // Updates a GTM Account.
        await gapi.client.accounts.update({ accountId: "accountId",  });
    }
});
