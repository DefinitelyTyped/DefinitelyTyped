import * as tmicon from "@trendmicro/tmicon";
import path from "path";
import fs from "fs";

const outFile = path.resolve("index.d.ts");

function kebabCaseToCapitalizedCamelCase(str: string) {
  return str
    .split('-')
    .map((part) => part.charAt(0).toUpperCase() + part.slice(1))
    .join('');
}

interface TmiconDefinition {
  name: string;
};

const iconDefinitions = tmicon.icons.reduce((acc: Record<string, TmiconDefinition>, { name }: TmiconDefinition) => {
  return {
    ...acc,
    [name]: {
      name: `${kebabCaseToCapitalizedCamelCase(name)}Icon`,
    },
  };
}, {} as Record<string, TmiconDefinition>);

const header = fs.readFileSync(path.resolve(path.join("src", "header.ts")), "utf-8");
const iconTemplate = fs.readFileSync(path.resolve(path.join("src", "template.ts")), "utf-8");

const icons = Object.keys(iconDefinitions).map((icon) => {
  let template = iconTemplate.replace(/__ICON__/g, iconDefinitions[icon].name)
  template = template.replace(/declare/g, "export");
  return template;
}).join("\n");

// clean previous file
try {
  fs.unlinkSync(outFile);
} catch {}

fs.writeFileSync(outFile, `
// This file is generated by scripts/generate-definitions.ts
// Do not modify this file manually

${header}

${icons}
`.trimStart());