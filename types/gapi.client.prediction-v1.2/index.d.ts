// Type definitions for 'Google Prediction API' 1.2
// Project: https://developers.google.com/prediction/docs/developer-guide
// Definitions by: Bolisov Alexey <https://github.com/Bolisov>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.3

// IMPORTANT. 
// This file was generated by https://github.com/Bolisov/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Bolisov/google-api-typings-generator
// Generated from: https://www.googleapis.com/discovery/v1/apis/prediction/v1.2/rest

/// <reference types="gapi.client" />

declare namespace gapi.client.prediction {
    
    interface Input {
        // 
        input?: {        
            // 
            csvInstance?: any[];
        };        
    }
    
    interface Output {
        // 
        id?: string;
        // 
        kind?: string;
        // 
        outputLabel?: string;
        // 
        outputMulti?: Array<{        
            // 
            label?: string;
            // 
            score?: number;
        }>;        
        // 
        outputValue?: number;
        // 
        selfLink?: string;
    }
    
    interface Training {
        // 
        id?: string;
        // 
        kind?: string;
        // 
        modelInfo?: {        
            // 
            classificationAccuracy?: number;
            // 
            meanSquaredError?: number;
            // 
            modelType?: string;
        };        
        // 
        selfLink?: string;
        // 
        trainingStatus?: string;
    }
    
    interface Update {
        // The true class label of this instance
        classLabel?: string;
        // The input features for this instance
        csvInstance?: any[];
    }
    
    interface HostedmodelsResource {
        // Submit input and request an output against a hosted model
        predict(request: {        
            // Data format for the response.
            alt?: string;
            // Selector specifying which fields to include in a partial response.
            fields?: string;
            // API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
            key?: string;
            // OAuth 2.0 token for the current user.
            oauth_token?: string;
            // Returns response with indentations and line breaks.
            prettyPrint?: boolean;
            // Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
            quotaUser?: string;
            // IP address of the site where the request originates. Use this if you want to enforce per-user limits.
            userIp?: string;
            // The name of a hosted model
            hostedModelName: string;
        }): gapi.client.Request<Output>;        
        
    }
    
    interface TrainingResource {
        // Delete a trained model
        delete(request: {        
            // Data format for the response.
            alt?: string;
            // Selector specifying which fields to include in a partial response.
            fields?: string;
            // API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
            key?: string;
            // OAuth 2.0 token for the current user.
            oauth_token?: string;
            // Returns response with indentations and line breaks.
            prettyPrint?: boolean;
            // Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
            quotaUser?: string;
            // IP address of the site where the request originates. Use this if you want to enforce per-user limits.
            userIp?: string;
            // mybucket/mydata resource in Google Storage
            data: string;
        }): gapi.client.Request<void>;        
        
        // Check training status of your model
        get(request: {        
            // Data format for the response.
            alt?: string;
            // Selector specifying which fields to include in a partial response.
            fields?: string;
            // API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
            key?: string;
            // OAuth 2.0 token for the current user.
            oauth_token?: string;
            // Returns response with indentations and line breaks.
            prettyPrint?: boolean;
            // Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
            quotaUser?: string;
            // IP address of the site where the request originates. Use this if you want to enforce per-user limits.
            userIp?: string;
            // mybucket/mydata resource in Google Storage
            data: string;
        }): gapi.client.Request<Training>;        
        
        // Begin training your model
        insert(request: {        
            // Data format for the response.
            alt?: string;
            // Selector specifying which fields to include in a partial response.
            fields?: string;
            // API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
            key?: string;
            // OAuth 2.0 token for the current user.
            oauth_token?: string;
            // Returns response with indentations and line breaks.
            prettyPrint?: boolean;
            // Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
            quotaUser?: string;
            // IP address of the site where the request originates. Use this if you want to enforce per-user limits.
            userIp?: string;
            // mybucket/mydata resource in Google Storage
            data?: string;
        }): gapi.client.Request<Training>;        
        
        // Add new data to a trained model
        update(request: {        
            // Data format for the response.
            alt?: string;
            // Selector specifying which fields to include in a partial response.
            fields?: string;
            // API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
            key?: string;
            // OAuth 2.0 token for the current user.
            oauth_token?: string;
            // Returns response with indentations and line breaks.
            prettyPrint?: boolean;
            // Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
            quotaUser?: string;
            // IP address of the site where the request originates. Use this if you want to enforce per-user limits.
            userIp?: string;
            // mybucket/mydata resource in Google Storage
            data: string;
        }): gapi.client.Request<Training>;        
        
    }
}

declare namespace gapi.client {
    // Load Prediction API v1.2
    function load(name: "prediction", version: "v1.2"): PromiseLike<void>;    
    function load(name: "prediction", version: "v1.2", callback: () => any): void;    
    
    const hostedmodels: gapi.client.prediction.HostedmodelsResource; 
    
    const training: gapi.client.prediction.TrainingResource; 
    
}
