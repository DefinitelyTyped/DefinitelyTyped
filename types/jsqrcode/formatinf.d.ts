declare const FORMAT_INFO_MASK_QR: 0x5412;
declare const FORMAT_INFO_DECODE_LOOKUP: [[0x5412, 0x00], [0x5125, 0x01], [0x5E7C, 0x02], [0x5B4B, 0x03], [0x45F9, 0x04], [0x40CE, 0x05], [0x4F97, 0x06], [0x4AA0, 0x07], [0x77C4, 0x08], [0x72F3, 0x09], [0x7DAA, 0x0A], [0x789D, 0x0B], [0x662F, 0x0C], [0x6318, 0x0D], [0x6C41, 0x0E], [0x6976, 0x0F], [0x1689, 0x10], [0x13BE, 0x11], [0x1CE7, 0x12], [0x19D0, 0x13], [0x0762, 0x14], [0x0255, 0x15], [0x0D0C, 0x16], [0x083B, 0x17], [0x355F, 0x18], [0x3068, 0x19], [0x3F31, 0x1A], [0x3A06, 0x1B], [0x24B4, 0x1C], [0x2183, 0x1D], [0x2EDA, 0x1E], [0x2BED, 0x1F]];
declare const BITS_SET_IN_HALF_BYTE: [ 0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4 ];

declare class FormatInformation {
	static numBitsDiffering(a: number, b: [ number, number ]): number;
	static decodeFormatInformation(maskedFormatInfo: number): FormatInformation;
	private static doDecodeFormatInformation(maskedFormatInfo: number): FormatInformation;

	private errorCorrectionLevel: ErrorCorrectionLevel;
	private dataMask: any;

	readonly ErrorCorrectionLevel: ErrorCorrectionLevel;
	readonly DataMask: any;

	GetHashCode(): number;
	Equals(other: FormatInformation): boolean;
}
