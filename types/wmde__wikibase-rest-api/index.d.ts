/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1/openapi.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve the OpenAPI document */
        get: operations["getOpenApiDoc"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/property-data-types": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve the map of Property data types to value types */
        get: operations["getPropertyDataTypes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/entities/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create a Wikibase Item */
        post: operations["addItem"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/entities/items/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve a single Wikibase Item by ID */
        get: operations["getItem"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Change a single Wikibase Item by ID */
        patch: operations["patchItem"];
        trace?: never;
    };
    "/v1/entities/items/{item_id}/sitelinks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve an Item's Sitelinks */
        get: operations["getSitelinks"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Change an Item's Sitelinks */
        patch: operations["patchSitelinks"];
        trace?: never;
    };
    "/v1/entities/items/{item_id}/sitelinks/{site_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve an Item's Sitelink */
        get: operations["getSitelink"];
        /** Add / Replace an Item's Sitelink */
        put: operations["setSitelink"];
        post?: never;
        /** Delete an Item's Sitelink */
        delete: operations["deleteSitelink"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/entities/properties": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create a Wikibase Property */
        post: operations["addProperty"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/entities/properties/{property_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve a single Wikibase Property by ID */
        get: operations["getProperty"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Change a single Wikibase Property by ID */
        patch: operations["patchProperty"];
        trace?: never;
    };
    "/v1/entities/items/{item_id}/descriptions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve an Item's descriptions */
        get: operations["getItemDescriptions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Change an Item's descriptions */
        patch: operations["patchItemDescriptions"];
        trace?: never;
    };
    "/v1/entities/properties/{property_id}/descriptions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve a Property's descriptions */
        get: operations["getPropertyDescriptions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Change a Property's descriptions */
        patch: operations["patchPropertyDescriptions"];
        trace?: never;
    };
    "/v1/entities/items/{item_id}/descriptions/{language_code}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve an Item's description in a specific language */
        get: operations["getItemDescription"];
        /** Add / Replace an Item's description in a specific language */
        put: operations["replaceItemDescription"];
        post?: never;
        /** Delete an Item's description in a specific language */
        delete: operations["deleteItemDescription"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/entities/items/{item_id}/descriptions_with_language_fallback/{language_code}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve an Item's description in a specific language, with language fallback
         * @description If a description is defined in the requested language, the API responds with a 200 status code and includes the description in the response payload. If a description only exists in a fallback language, the API returns a 307 status code and provides the location of the description.
         */
        get: operations["getItemDescriptionWithFallback"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/entities/properties/{property_id}/descriptions/{language_code}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve a Property's description in a specific language */
        get: operations["getPropertyDescription"];
        /** Add / Replace a Property's description in a specific language */
        put: operations["setPropertyDescription"];
        post?: never;
        /** Delete a Property's description in a specific language */
        delete: operations["deletePropertyDescription"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/entities/properties/{property_id}/descriptions_with_language_fallback/{language_code}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve a Property's description in a specific language, with language fallback
         * @description If a description is defined in the requested language, the API responds with a 200 status code and includes the description in the response payload. If a description only exists in a fallback language, the API returns a 307 status code and provides the location of the description.
         */
        get: operations["getPropertyDescriptionWithFallback"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/entities/items/{item_id}/statements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve Statements from an Item */
        get: operations["getItemStatements"];
        put?: never;
        /** Add a new Statement to an Item */
        post: operations["addItemStatement"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/entities/items/{item_id}/statements/{statement_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve a single Statement from an Item
         * @description This endpoint is also accessible through `/statements/{statement_id}`
         */
        get: operations["getItemStatement"];
        /**
         * Replace a single Statement of an Item
         * @description This endpoint is also accessible through `/statements/{statement_id}`
         */
        put: operations["replaceItemStatement"];
        post?: never;
        /**
         * Delete a single Statement from an Item
         * @description This endpoint is also accessible through `/statements/{statement_id}`
         */
        delete: operations["deleteItemStatement"];
        options?: never;
        head?: never;
        /**
         * Change elements of a single Statement of an Item
         * @description This endpoint is also accessible through `/statements/{statement_id}`.
         */
        patch: operations["patchItemStatement"];
        trace?: never;
    };
    "/v1/entities/items/{item_id}/labels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve an Item's labels */
        get: operations["getItemLabels"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Change an Item's Labels */
        patch: operations["patchItemLabels"];
        trace?: never;
    };
    "/v1/entities/properties/{property_id}/labels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve a Property's labels */
        get: operations["getPropertyLabels"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Change a Property's Labels */
        patch: operations["patchPropertyLabels"];
        trace?: never;
    };
    "/v1/entities/items/{item_id}/labels/{language_code}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve an Item's label in a specific language */
        get: operations["getItemLabel"];
        /** Add / Replace an Item's label in a specific language */
        put: operations["replaceItemLabel"];
        post?: never;
        /** Delete an Item's label in a specific language */
        delete: operations["deleteItemLabel"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/entities/items/{item_id}/labels_with_language_fallback/{language_code}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve an Item's label in a specific language, with language fallback
         * @description If a label is defined in the requested language, the API responds with a 200 status code and includes the label in the response payload. If a label only exists in a fallback language, the API returns a 307 status code and provides the location of the label.
         */
        get: operations["getItemLabelWithFallback"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/entities/properties/{property_id}/labels/{language_code}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve a Property's label in a specific language */
        get: operations["getPropertyLabel"];
        /** Add / Replace a Property's label in a specific language */
        put: operations["replacePropertyLabel"];
        post?: never;
        /** Delete a Property's label in a specific language */
        delete: operations["deletePropertyLabel"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/entities/properties/{property_id}/labels_with_language_fallback/{language_code}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve a Property's label in a specific language, with language fallback
         * @description If a label is defined in the requested language, the API responds with a 200 status code and includes the label in the response payload. If a label only exists in a fallback language, the API returns a 307 status code and provides the location of the label.
         */
        get: operations["getPropertyLabelWithFallback"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/entities/items/{item_id}/aliases": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve an Item's aliases */
        get: operations["getItemAliases"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Change an Item's aliases */
        patch: operations["patchItemAliases"];
        trace?: never;
    };
    "/v1/entities/properties/{property_id}/aliases": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve a Property's aliases */
        get: operations["getPropertyAliases"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Change a Property's aliases */
        patch: operations["patchPropertyAliases"];
        trace?: never;
    };
    "/v1/entities/items/{item_id}/aliases/{language_code}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve an Item's aliases in a specific language */
        get: operations["getItemAliasesInLanguage"];
        put?: never;
        /** Create / Add an Item's aliases in a specific language */
        post: operations["addItemAliasesInLanguage"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/entities/properties/{property_id}/aliases/{language_code}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve a Property's aliases in a specific language */
        get: operations["getPropertyAliasesInLanguage"];
        put?: never;
        /** Create / Add a Property's aliases in a specific language */
        post: operations["addPropertyAliasesInLanguage"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/entities/properties/{property_id}/statements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve Statements from a Property */
        get: operations["getPropertyStatements"];
        put?: never;
        /** Add a new Statement to a Property */
        post: operations["addPropertyStatement"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/entities/properties/{property_id}/statements/{statement_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve a single Statement from a Property
         * @description This endpoint is also accessible through `/statements/{statement_id}`
         */
        get: operations["getPropertyStatement"];
        /**
         * Replace a single Statement of a Property
         * @description This endpoint is also accessible through `/statements/{statement_id}`
         */
        put: operations["replacePropertyStatement"];
        post?: never;
        /**
         * Delete a single Statement from a Property
         * @description This endpoint is also accessible through `/statements/{statement_id}`.
         */
        delete: operations["deletePropertyStatement"];
        options?: never;
        head?: never;
        /**
         * Change elements of a single Statement of a Property
         * @description This endpoint is also accessible through `/statements/{statement_id}`.
         */
        patch: operations["patchPropertyStatement"];
        trace?: never;
    };
    "/v1/statements/{statement_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve a single Statement
         * @description This endpoint is also accessible through `/entities/items/{item_id}/statements/{statement_id}` and `/entities/properties/{property_id}/statements/{statement_id}`
         */
        get: operations["getStatement"];
        /**
         * Replace a single Statement
         * @description This endpoint is also accessible through `/entities/items/{item_id}/statements/{statement_id}` and `/entities/properties/{property_id}/statements/{statement_id}`
         */
        put: operations["replaceStatement"];
        post?: never;
        /**
         * Delete a single Statement
         * @description This endpoint is also accessible through `/entities/items/{item_id}/statements/{statement_id}` and `/entities/properties/{property_id}/statements/{statement_id}`
         */
        delete: operations["deleteStatement"];
        options?: never;
        head?: never;
        /**
         * Change elements of a single Statement
         * @description This endpoint is also accessible through `/entities/items/{item_id}/statements/{statement_id}` and `/entities/properties/{property_id}/statements/{statement_id}`
         */
        patch: operations["patchStatement"];
        trace?: never;
    };
    "/v0/search/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * [WIP] Simple Item search by label and aliases
         * @description This endpoint is currently in development and is not recommended for production use
         */
        get: operations["simpleItemSearch"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v0/search/properties": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * [WIP] Simple Property search by label and aliases
         * @description This endpoint is currently in development and is not recommended for production use
         */
        get: operations["simplePropertySearch"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Labels: {
            [key: string]: string;
        };
        Descriptions: {
            [key: string]: string;
        };
        Aliases: {
            [key: string]: string[];
        };
        Sitelink: {
            title: string;
            badges?: string[];
            readonly url?: string;
        };
        Reference: {
            /** @description Hash of the Reference */
            readonly hash?: string;
            parts?: {
                property?: {
                    /** @description The ID of the Property */
                    id?: string;
                    /** @description The data type of the Property */
                    readonly data_type?: string | null;
                };
                value?: {
                    /** @description The value, if type == "value", otherwise omitted */
                    content?: unknown;
                    /**
                     * @description The value type
                     * @enum {string}
                     */
                    type?: "value" | "somevalue" | "novalue";
                };
            }[];
        };
        Statement: {
            /** @description The globally unique identifier for this Statement */
            readonly id?: string;
            /**
             * @description The rank of the Statement
             * @default normal
             * @enum {string}
             */
            rank: "deprecated" | "normal" | "preferred";
        } & {
            property?: {
                /** @description The ID of the Property */
                id?: string;
                /** @description The data type of the Property */
                readonly data_type?: string | null;
            };
            value?: {
                /** @description The value, if type == "value", otherwise omitted */
                content?: unknown;
                /**
                 * @description The value type
                 * @enum {string}
                 */
                type?: "value" | "somevalue" | "novalue";
            };
        } & {
            /** @default [] */
            qualifiers: {
                property?: {
                    /** @description The ID of the Property */
                    id?: string;
                    /** @description The data type of the Property */
                    readonly data_type?: string | null;
                };
                value?: {
                    /** @description The value, if type == "value", otherwise omitted */
                    content?: unknown;
                    /**
                     * @description The value type
                     * @enum {string}
                     */
                    type?: "value" | "somevalue" | "novalue";
                };
            }[];
            /** @default [] */
            references: {
                /** @description Hash of the Reference */
                readonly hash?: string;
                parts?: {
                    property?: {
                        /** @description The ID of the Property */
                        id?: string;
                        /** @description The data type of the Property */
                        readonly data_type?: string | null;
                    };
                    value?: {
                        /** @description The value, if type == "value", otherwise omitted */
                        content?: unknown;
                        /**
                         * @description The value type
                         * @enum {string}
                         */
                        type?: "value" | "somevalue" | "novalue";
                    };
                }[];
            }[];
        };
        Item: {
            readonly id?: string;
            /** @constant */
            readonly type?: "item";
            labels?: {
                [key: string]: string;
            };
            descriptions?: {
                [key: string]: string;
            };
            aliases?: {
                [key: string]: string[];
            };
            sitelinks?: {
                [key: string]: {
                    title: string;
                    badges?: string[];
                    readonly url?: string;
                };
            };
            statements?: {
                [key: string]: ({
                    /** @description The globally unique identifier for this Statement */
                    readonly id?: string;
                    /**
                     * @description The rank of the Statement
                     * @default normal
                     * @enum {string}
                     */
                    rank: "deprecated" | "normal" | "preferred";
                } & {
                    property?: {
                        /** @description The ID of the Property */
                        id?: string;
                        /** @description The data type of the Property */
                        readonly data_type?: string | null;
                    };
                    value?: {
                        /** @description The value, if type == "value", otherwise omitted */
                        content?: unknown;
                        /**
                         * @description The value type
                         * @enum {string}
                         */
                        type?: "value" | "somevalue" | "novalue";
                    };
                } & {
                    /** @default [] */
                    qualifiers: {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    }[];
                    /** @default [] */
                    references: {
                        /** @description Hash of the Reference */
                        readonly hash?: string;
                        parts?: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                    }[];
                })[];
            };
        };
        Property: {
            readonly id?: string;
            /** @constant */
            readonly type?: "property";
            data_type: string;
            labels?: {
                [key: string]: string;
            };
            descriptions?: {
                [key: string]: string;
            };
            aliases?: {
                [key: string]: string[];
            };
            statements?: {
                [key: string]: ({
                    /** @description The globally unique identifier for this Statement */
                    readonly id?: string;
                    /**
                     * @description The rank of the Statement
                     * @default normal
                     * @enum {string}
                     */
                    rank: "deprecated" | "normal" | "preferred";
                } & {
                    property?: {
                        /** @description The ID of the Property */
                        id?: string;
                        /** @description The data type of the Property */
                        readonly data_type?: string | null;
                    };
                    value?: {
                        /** @description The value, if type == "value", otherwise omitted */
                        content?: unknown;
                        /**
                         * @description The value type
                         * @enum {string}
                         */
                        type?: "value" | "somevalue" | "novalue";
                    };
                } & {
                    /** @default [] */
                    qualifiers: {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    }[];
                    /** @default [] */
                    references: {
                        /** @description Hash of the Reference */
                        readonly hash?: string;
                        parts?: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                    }[];
                })[];
            };
        };
        Qualifier: {
            property?: {
                /** @description The ID of the Property */
                id?: string;
                /** @description The data type of the Property */
                readonly data_type?: string | null;
            };
            value?: {
                /** @description The value, if type == "value", otherwise omitted */
                content?: unknown;
                /**
                 * @description The value type
                 * @enum {string}
                 */
                type?: "value" | "somevalue" | "novalue";
            };
        };
    };
    responses: {
        /** @description A single Wikibase Item */
        Item: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                /** @description Last modified date */
                "Last-Modified": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "id": "Q24",
                 *       "type": "item",
                 *       "labels": {
                 *         "en": "Jane Doe",
                 *         "ru": "Джейн Доу"
                 *       },
                 *       "descriptions": {
                 *         "en": "famous person",
                 *         "ru": "известная личность"
                 *       },
                 *       "aliases": {
                 *         "en": [
                 *           "Jane M. Doe",
                 *           "JD"
                 *         ],
                 *         "ru": [
                 *           "Джейн М. Доу"
                 *         ]
                 *       },
                 *       "statements": {
                 *         "P694": [
                 *           {
                 *             "id": "Q24$BB728546-A400-4116-A772-16D54B62AC2B",
                 *             "rank": "normal",
                 *             "property": {
                 *               "id": "P694",
                 *               "data_type": "wikibase-item"
                 *             },
                 *             "value": {
                 *               "type": "value",
                 *               "content": "Q626683"
                 *             },
                 *             "qualifiers": [],
                 *             "references": []
                 *           }
                 *         ],
                 *         "P476": [
                 *           {
                 *             "id": "Q24$F3B2F956-B6AB-4984-8D89-BEE0FFFA3385",
                 *             "rank": "normal",
                 *             "property": {
                 *               "id": "P476",
                 *               "data_type": "time"
                 *             },
                 *             "value": {
                 *               "type": "value",
                 *               "content": {
                 *                 "time": "+1986-01-27T00:00:00Z",
                 *                 "precision": 11,
                 *                 "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                 *               }
                 *             },
                 *             "qualifiers": [],
                 *             "references": []
                 *           }
                 *         ],
                 *         "P17": [
                 *           {
                 *             "id": "Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA",
                 *             "rank": "normal",
                 *             "property": {
                 *               "id": "P17",
                 *               "data_type": "string"
                 *             },
                 *             "value": {
                 *               "type": "value",
                 *               "content": "Senior Team Supervisor"
                 *             },
                 *             "qualifiers": [
                 *               {
                 *                 "property": {
                 *                   "id": "P706",
                 *                   "data_type": "time"
                 *                 },
                 *                 "value": {
                 *                   "type": "value",
                 *                   "content": {
                 *                     "time": "+2023-06-13T00:00:00Z",
                 *                     "precision": 11,
                 *                     "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                 *                   }
                 *                 }
                 *               }
                 *             ],
                 *             "references": [
                 *               {
                 *                 "hash": "7ccd777f870b71a4c5056c7fd2a83a22cc39be6d",
                 *                 "parts": [
                 *                   {
                 *                     "property": {
                 *                       "id": "P709",
                 *                       "data_type": "url"
                 *                     },
                 *                     "value": {
                 *                       "type": "value",
                 *                       "content": "https://news.example.org"
                 *                     }
                 *                   }
                 *                 ]
                 *               }
                 *             ]
                 *           }
                 *         ]
                 *       },
                 *       "sitelinks": {
                 *         "enwiki": {
                 *           "title": "Jane Doe",
                 *           "badges": [],
                 *           "url": "https://enwiki.example.org/wiki/Jane_Doe"
                 *         },
                 *         "ruwiki": {
                 *           "title": "Джейн Доу",
                 *           "badges": [],
                 *           "url": "https://ruwiki.example.org/wiki/Джейн_Доу"
                 *         }
                 *       }
                 *     } */
                "application/json": {
                    readonly id?: string;
                    /** @constant */
                    readonly type?: "item";
                    labels?: {
                        [key: string]: string;
                    };
                    descriptions?: {
                        [key: string]: string;
                    };
                    aliases?: {
                        [key: string]: string[];
                    };
                    sitelinks?: {
                        [key: string]: {
                            title: string;
                            badges?: string[];
                            readonly url?: string;
                        };
                    };
                    statements?: {
                        [key: string]: ({
                            /** @description The globally unique identifier for this Statement */
                            readonly id?: string;
                            /**
                             * @description The rank of the Statement
                             * @default normal
                             * @enum {string}
                             */
                            rank: "deprecated" | "normal" | "preferred";
                        } & {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        } & {
                            /** @default [] */
                            qualifiers: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                            /** @default [] */
                            references: {
                                /** @description Hash of the Reference */
                                readonly hash?: string;
                                parts?: {
                                    property?: {
                                        /** @description The ID of the Property */
                                        id?: string;
                                        /** @description The data type of the Property */
                                        readonly data_type?: string | null;
                                    };
                                    value?: {
                                        /** @description The value, if type == "value", otherwise omitted */
                                        content?: unknown;
                                        /**
                                         * @description The value type
                                         * @enum {string}
                                         */
                                        type?: "value" | "somevalue" | "novalue";
                                    };
                                }[];
                            }[];
                        })[];
                    };
                } & {
                    sitelinks: {
                        [key: string]: unknown;
                    };
                    statements: {
                        [key: string]: unknown;
                    };
                };
            };
        };
        /** @description The request cannot be processed */
        InvalidNewItemInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The access to resource was denied */
        PermissionDenied: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The edit request violates data policy */
        DataPolicyViolation: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description Too many requests */
        RequestLimitReached: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description An unexpected error has occurred */
        UnexpectedError: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "code": "unexpected-error",
                 *       "message": "Unexpected Error"
                 *     } */
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The specified resource has not been modified since last provided revision number or date */
        NotModified: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                [name: string]: unknown;
            };
            content?: never;
        };
        /** @description The specified resource has permanently moved to the indicated location */
        MovedPermanently: {
            headers: {
                /** @description The URL to which the requested resource has been moved */
                Location: string;
                [name: string]: unknown;
            };
            content?: never;
        };
        /** @description The request cannot be processed */
        InvalidGetItemInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The specified resource was not found */
        ResourceNotFound: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The condition defined by a conditional request header is not fulfilled */
        PreconditionFailedError: {
            headers: {
                [name: string]: unknown;
            };
            content?: never;
        };
        /** @description The provided JSON Patch request is invalid */
        InvalidPatch: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The provided JSON Patch cannot be applied */
        CannotApplyItemPatch: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description Applying the provided JSON Patch results in an invalid Property */
        InvalidPatchedItem: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description A list of Sitelinks by Item id */
        Sitelinks: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                /** @description Last modified date */
                "Last-Modified": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "enwiki": {
                 *         "title": "Jane Doe",
                 *         "badges": [],
                 *         "url": "https://enwiki.example.org/wiki/Jane_Doe"
                 *       },
                 *       "ruwiki": {
                 *         "title": "Джейн Доу",
                 *         "badges": [],
                 *         "url": "https://ruwiki.example.org/wiki/Джейн_Доу"
                 *       }
                 *     } */
                "application/json": {
                    [key: string]: {
                        title: string;
                        badges?: string[];
                        readonly url?: string;
                    };
                };
            };
        };
        /** @description The request cannot be processed */
        InvalidEntityIdInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description Applying the provided JSON Patch results in invalid Sitelinks */
        InvalidPatchedItemSitelinks: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description A Sitelink by Item id */
        Sitelink: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                /** @description Last modified date */
                "Last-Modified": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "title": "Jane Doe",
                 *       "badges": [],
                 *       "url": "https://enwiki.example.org/wiki/Jane_Doe"
                 *     } */
                "application/json": {
                    title: string;
                    badges?: string[];
                    readonly url?: string;
                };
            };
        };
        /** @description The request cannot be processed */
        InvalidGetSitelinkInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The request cannot be processed */
        InvalidSetSitelinkInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The specified Item was redirected */
        ItemRedirected: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The resource was deleted */
        SitelinkDeleted: {
            headers: {
                /** @description Language code of the language in which response is provided */
                "Content-Language": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example Sitelink deleted */
                "application/json": string;
            };
        };
        /** @description The request cannot be processed */
        InvalidRemoveSitelinkInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description A single Wikibase Property */
        Property: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                /** @description Last modified date */
                "Last-Modified": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "id": "P694",
                 *       "type": "property",
                 *       "data_type": "wikibase-item",
                 *       "labels": {
                 *         "en": "instance of",
                 *         "ru": "это частный случай понятия"
                 *       },
                 *       "descriptions": {
                 *         "en": "the subject is a concrete object (instance) of this class, category, or object group",
                 *         "ru": "данный элемент представляет собой конкретный объект (экземпляр / частный случай) класса, категории."
                 *       },
                 *       "aliases": {
                 *         "en": [
                 *           "is a",
                 *           "is an"
                 *         ],
                 *         "ru": [
                 *           "представляет собой",
                 *           "является"
                 *         ]
                 *       },
                 *       "statements": {
                 *         "P1628": [
                 *           {
                 *             "id": "P694$B4C349A2-C504-4FC5-B7D5-8B781C719D71",
                 *             "rank": "normal",
                 *             "property": {
                 *               "id": "P1628",
                 *               "data_type": "url"
                 *             },
                 *             "value": {
                 *               "type": "value",
                 *               "content": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
                 *             },
                 *             "qualifiers": [],
                 *             "references": []
                 *           }
                 *         ]
                 *       }
                 *     } */
                "application/json": {
                    readonly id?: string;
                    /** @constant */
                    readonly type?: "property";
                    data_type: string;
                    labels?: {
                        [key: string]: string;
                    };
                    descriptions?: {
                        [key: string]: string;
                    };
                    aliases?: {
                        [key: string]: string[];
                    };
                    statements?: {
                        [key: string]: ({
                            /** @description The globally unique identifier for this Statement */
                            readonly id?: string;
                            /**
                             * @description The rank of the Statement
                             * @default normal
                             * @enum {string}
                             */
                            rank: "deprecated" | "normal" | "preferred";
                        } & {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        } & {
                            /** @default [] */
                            qualifiers: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                            /** @default [] */
                            references: {
                                /** @description Hash of the Reference */
                                readonly hash?: string;
                                parts?: {
                                    property?: {
                                        /** @description The ID of the Property */
                                        id?: string;
                                        /** @description The data type of the Property */
                                        readonly data_type?: string | null;
                                    };
                                    value?: {
                                        /** @description The value, if type == "value", otherwise omitted */
                                        content?: unknown;
                                        /**
                                         * @description The value type
                                         * @enum {string}
                                         */
                                        type?: "value" | "somevalue" | "novalue";
                                    };
                                }[];
                            }[];
                        })[];
                    };
                } & {
                    statements: {
                        [key: string]: unknown;
                    };
                };
            };
        };
        /** @description The request cannot be processed */
        InvalidNewPropertyInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The request cannot be processed */
        InvalidGetPropertyInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The provided JSON Patch cannot be applied */
        CannotApplyPropertyPatch: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description Applying the provided JSON Patch results in an invalid Property */
        InvalidPatchedProperty: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description Item's descriptions by language */
        ItemDescriptions: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                /** @description Last modified date */
                "Last-Modified": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "en": "famous person",
                 *       "ru": "известная личность"
                 *     } */
                "application/json": {
                    [key: string]: string;
                };
            };
        };
        /** @description Applying the provided JSON Patch results in invalid descriptions */
        InvalidPatchedDescriptions: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description Property's descriptions by language */
        PropertyDescriptions: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                /** @description Last modified date */
                "Last-Modified": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "en": "the subject is a concrete object (instance) of this class, category, or object group",
                 *       "ru": "данный элемент представляет собой конкретный объект (экземпляр / частный случай) класса, категории"
                 *     } */
                "application/json": {
                    [key: string]: string;
                };
            };
        };
        /** @description Item's description in a specific language */
        ItemDescription: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                /** @description Last modified date */
                "Last-Modified": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example famous person */
                "application/json": string;
            };
        };
        /** @description The request cannot be processed */
        InvalidTermByLanguageInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The request cannot be processed */
        InvalidSetDescriptionInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The description was deleted */
        DescriptionDeleted: {
            headers: {
                /** @description Language code of the language in which response is provided */
                "Content-Language": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example Description deleted */
                "application/json": string;
            };
        };
        /** @description The request cannot be processed */
        InvalidRemoveDescriptionInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description A description in a fallback language exists at the indicated location */
        DescriptionMovedTemporarily: {
            headers: {
                /** @description The URL to which the requested resource has been moved */
                Location: string;
                [name: string]: unknown;
            };
            content?: never;
        };
        /** @description Property's description in a specific language */
        PropertyDescription: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                /** @description Last modified date */
                "Last-Modified": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example the subject is a concrete object (instance) of this class, category, or object group */
                "application/json": string;
            };
        };
        /** @description The Statements of an Item */
        ItemStatements: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                /** @description Last modified date */
                "Last-Modified": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "P694": [
                 *         {
                 *           "id": "Q24$BB728546-A400-4116-A772-16D54B62AC2B",
                 *           "rank": "normal",
                 *           "property": {
                 *             "id": "P694",
                 *             "data_type": "wikibase-item"
                 *           },
                 *           "value": {
                 *             "type": "value",
                 *             "content": "Q626683"
                 *           },
                 *           "qualifiers": [],
                 *           "references": []
                 *         }
                 *       ],
                 *       "P476": [
                 *         {
                 *           "id": "Q24$F3B2F956-B6AB-4984-8D89-BEE0FFFA3385",
                 *           "rank": "normal",
                 *           "property": {
                 *             "id": "P476",
                 *             "data_type": "time"
                 *           },
                 *           "value": {
                 *             "type": "value",
                 *             "content": {
                 *               "time": "+1986-01-27T00:00:00Z",
                 *               "precision": 11,
                 *               "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                 *             }
                 *           },
                 *           "qualifiers": [],
                 *           "references": []
                 *         }
                 *       ],
                 *       "P17": [
                 *         {
                 *           "id": "Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA",
                 *           "rank": "normal",
                 *           "property": {
                 *             "id": "P17",
                 *             "data_type": "string"
                 *           },
                 *           "value": {
                 *             "type": "value",
                 *             "content": "Senior Team Supervisor"
                 *           },
                 *           "qualifiers": [
                 *             {
                 *               "property": {
                 *                 "id": "P706",
                 *                 "data_type": "time"
                 *               },
                 *               "value": {
                 *                 "type": "value",
                 *                 "content": {
                 *                   "time": "+2023-06-13T00:00:00Z",
                 *                   "precision": 11,
                 *                   "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                 *                 }
                 *               }
                 *             }
                 *           ],
                 *           "references": [
                 *             {
                 *               "hash": "7ccd777f870b71a4c5056c7fd2a83a22cc39be6d",
                 *               "parts": [
                 *                 {
                 *                   "property": {
                 *                     "id": "P709",
                 *                     "data_type": "url"
                 *                   },
                 *                   "value": {
                 *                     "type": "value",
                 *                     "content": "https://news.example.org"
                 *                   }
                 *                 }
                 *               ]
                 *             }
                 *           ]
                 *         }
                 *       ]
                 *     } */
                "application/json": {
                    [key: string]: (({
                        /** @description The globally unique identifier for this Statement */
                        readonly id?: string;
                        /**
                         * @description The rank of the Statement
                         * @default normal
                         * @enum {string}
                         */
                        rank: "deprecated" | "normal" | "preferred";
                    } & {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    } & {
                        /** @default [] */
                        qualifiers: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                        /** @default [] */
                        references: {
                            /** @description Hash of the Reference */
                            readonly hash?: string;
                            parts?: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                        }[];
                    }) & ({
                        property: unknown;
                        value: unknown;
                    } & {
                        qualifiers: unknown;
                        references: unknown;
                    }))[];
                };
            };
        };
        /** @description The request cannot be processed */
        InvalidRetrieveStatementsInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The request cannot be processed */
        InvalidNewStatementInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description A Wikibase Statement. Please note that the value of the `ETag` header field refers to the Item's revision ID. */
        ItemStatement: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                /** @description Last modified date */
                "Last-Modified": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "id": "Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA",
                 *       "rank": "normal",
                 *       "property": {
                 *         "id": "P17",
                 *         "data_type": "string"
                 *       },
                 *       "value": {
                 *         "type": "value",
                 *         "content": "Senior Team Supervisor"
                 *       },
                 *       "qualifiers": [
                 *         {
                 *           "property": {
                 *             "id": "P706",
                 *             "data_type": "time"
                 *           },
                 *           "value": {
                 *             "type": "value",
                 *             "content": {
                 *               "time": "+2023-06-13T00:00:00Z",
                 *               "precision": 11,
                 *               "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                 *             }
                 *           }
                 *         }
                 *       ],
                 *       "references": [
                 *         {
                 *           "hash": "7ccd777f870b71a4c5056c7fd2a83a22cc39be6d",
                 *           "parts": [
                 *             {
                 *               "property": {
                 *                 "id": "P709",
                 *                 "data_type": "url"
                 *               },
                 *               "value": {
                 *                 "type": "value",
                 *                 "content": "https://news.example.org"
                 *               }
                 *             }
                 *           ]
                 *         }
                 *       ]
                 *     } */
                "application/json": ({
                    /** @description The globally unique identifier for this Statement */
                    readonly id?: string;
                    /**
                     * @description The rank of the Statement
                     * @default normal
                     * @enum {string}
                     */
                    rank: "deprecated" | "normal" | "preferred";
                } & {
                    property?: {
                        /** @description The ID of the Property */
                        id?: string;
                        /** @description The data type of the Property */
                        readonly data_type?: string | null;
                    };
                    value?: {
                        /** @description The value, if type == "value", otherwise omitted */
                        content?: unknown;
                        /**
                         * @description The value type
                         * @enum {string}
                         */
                        type?: "value" | "somevalue" | "novalue";
                    };
                } & {
                    /** @default [] */
                    qualifiers: {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    }[];
                    /** @default [] */
                    references: {
                        /** @description Hash of the Reference */
                        readonly hash?: string;
                        parts?: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                    }[];
                }) & ({
                    property: unknown;
                    value: unknown;
                } & {
                    qualifiers: unknown;
                    references: unknown;
                });
            };
        };
        /** @description The request cannot be processed */
        InvalidRetrieveItemStatementInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The request cannot be processed */
        InvalidReplaceItemStatementInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The requested Statement was deleted */
        StatementDeleted: {
            headers: {
                /** @description Language code of the language in which response is provided */
                "Content-Language": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example Statement deleted */
                "application/json": string;
            };
        };
        /** @description The request cannot be processed */
        InvalidRemoveItemStatementInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The provided JSON Patch is invalid */
        InvalidItemStatementPatch: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The provided JSON Patch cannot be applied */
        CannotApplyStatementPatch: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description Applying the provided JSON Patch results in an invalid Statement */
        InvalidPatchedStatement: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description Item's labels by language */
        ItemLabels: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                /** @description Last modified date */
                "Last-Modified": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "en": "Jane Doe",
                 *       "ru": "Джейн Доу"
                 *     } */
                "application/json": {
                    [key: string]: string;
                };
            };
        };
        /** @description Applying the provided JSON Patch results in invalid Labels */
        InvalidPatchedLabels: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description Property's labels by language */
        PropertyLabels: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                /** @description Last modified date */
                "Last-Modified": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "en": "instance of",
                 *       "ru": "это частный случай понятия"
                 *     } */
                "application/json": {
                    [key: string]: string;
                };
            };
        };
        /** @description A label in a specific language */
        ItemLabel: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                /** @description Last modified date */
                "Last-Modified": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example Jane Doe */
                "application/json": string;
            };
        };
        /** @description The request cannot be processed */
        InvalidSetLabelInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The resource was deleted */
        LabelDeleted: {
            headers: {
                /** @description Language code of the language in which response is provided */
                "Content-Language": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example Label deleted */
                "application/json": string;
            };
        };
        /** @description The request cannot be processed */
        InvalidRemoveLabelInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description A label in a fallback language exists at the indicated location */
        LabelMovedTemporarily: {
            headers: {
                /** @description The URL to which the requested resource has been moved */
                Location: string;
                [name: string]: unknown;
            };
            content?: never;
        };
        /** @description A label in a specific language */
        PropertyLabel: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                /** @description Last modified date */
                "Last-Modified": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example instance of */
                "application/json": string;
            };
        };
        /** @description Item's aliases by language */
        ItemAliases: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                /** @description Last modified date */
                "Last-Modified": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "en": [
                 *         "Jane M. Doe",
                 *         "JD"
                 *       ],
                 *       "ru": [
                 *         "Джейн М. Доу"
                 *       ]
                 *     } */
                "application/json": {
                    [key: string]: string[];
                };
            };
        };
        /** @description Applying the provided JSON Patch results in invalid Aliases */
        InvalidPatchedAliases: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description Property's aliases by language */
        PropertyAliases: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                /** @description Last modified date */
                "Last-Modified": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "en": [
                 *         "is a",
                 *         "is an"
                 *       ],
                 *       "ru": [
                 *         "представляет собой",
                 *         "является"
                 *       ]
                 *     } */
                "application/json": {
                    [key: string]: string[];
                };
            };
        };
        /** @description Item's aliases in a specific language */
        ItemAliasesInLanguage: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                /** @description Last modified date */
                "Last-Modified": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example [
                 *       "Jane M. Doe",
                 *       "JD"
                 *     ] */
                "application/json": string[];
            };
        };
        /** @description The request cannot be processed */
        InvalidAddAliasesInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description Property's aliases in a specific language */
        PropertyAliasesInLanguage: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                /** @description Last modified date */
                "Last-Modified": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example [
                 *       "is a",
                 *       "is an"
                 *     ] */
                "application/json": string[];
            };
        };
        /** @description The Statements of a Property */
        PropertyStatements: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                /** @description Last modified date */
                "Last-Modified": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "P1628": [
                 *         {
                 *           "id": "P694$B4C349A2-C504-4FC5-B7D5-8B781C719D71",
                 *           "rank": "normal",
                 *           "property": {
                 *             "id": "P1628",
                 *             "data_type": "url"
                 *           },
                 *           "value": {
                 *             "type": "value",
                 *             "content": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
                 *           },
                 *           "qualifiers": [],
                 *           "references": []
                 *         }
                 *       ]
                 *     } */
                "application/json": {
                    [key: string]: (({
                        /** @description The globally unique identifier for this Statement */
                        readonly id?: string;
                        /**
                         * @description The rank of the Statement
                         * @default normal
                         * @enum {string}
                         */
                        rank: "deprecated" | "normal" | "preferred";
                    } & {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    } & {
                        /** @default [] */
                        qualifiers: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                        /** @default [] */
                        references: {
                            /** @description Hash of the Reference */
                            readonly hash?: string;
                            parts?: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                        }[];
                    }) & ({
                        property: unknown;
                        value: unknown;
                    } & {
                        qualifiers: unknown;
                        references: unknown;
                    }))[];
                };
            };
        };
        /** @description A Wikibase Statement. Please note that the value of the `ETag` header field refers to the Property's revision ID. */
        PropertyStatement: {
            headers: {
                /** @description Last entity revision number */
                ETag: string;
                /** @description Last modified date */
                "Last-Modified": string;
                /** @description Optional username of the user making the request */
                "X-Authenticated-User"?: string;
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "id": "P694$B4C349A2-C504-4FC5-B7D5-8B781C719D71",
                 *       "rank": "normal",
                 *       "property": {
                 *         "id": "P1628",
                 *         "data_type": "url"
                 *       },
                 *       "value": {
                 *         "type": "value",
                 *         "content": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
                 *       },
                 *       "qualifiers": [],
                 *       "references": []
                 *     } */
                "application/json": ({
                    /** @description The globally unique identifier for this Statement */
                    readonly id?: string;
                    /**
                     * @description The rank of the Statement
                     * @default normal
                     * @enum {string}
                     */
                    rank: "deprecated" | "normal" | "preferred";
                } & {
                    property?: {
                        /** @description The ID of the Property */
                        id?: string;
                        /** @description The data type of the Property */
                        readonly data_type?: string | null;
                    };
                    value?: {
                        /** @description The value, if type == "value", otherwise omitted */
                        content?: unknown;
                        /**
                         * @description The value type
                         * @enum {string}
                         */
                        type?: "value" | "somevalue" | "novalue";
                    };
                } & {
                    /** @default [] */
                    qualifiers: {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    }[];
                    /** @default [] */
                    references: {
                        /** @description Hash of the Reference */
                        readonly hash?: string;
                        parts?: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                    }[];
                }) & ({
                    property: unknown;
                    value: unknown;
                } & {
                    qualifiers: unknown;
                    references: unknown;
                });
            };
        };
        /** @description The request cannot be processed */
        InvalidRetrievePropertyStatementInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The request cannot be processed */
        InvalidReplacePropertyStatementInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The request cannot be processed */
        InvalidRemovePropertyStatementInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The provided JSON Patch is invalid */
        InvalidPropertyStatementPatch: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The request cannot be processed */
        InvalidRetrieveStatementInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The request cannot be processed */
        InvalidReplaceStatementInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description The request cannot be processed */
        InvalidRemoveStatementInput: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description A list of search results */
        SearchItemSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "results": [
                 *         {
                 *           "id": "Q123",
                 *           "display-label": {
                 *             "language": "en",
                 *             "value": "potato"
                 *           },
                 *           "description": {
                 *             "language": "en",
                 *             "value": "staple food"
                 *           },
                 *           "match": {
                 *             "type": "label",
                 *             "language": "en",
                 *             "text": "potato"
                 *           }
                 *         },
                 *         {
                 *           "id": "Q234",
                 *           "display-label": {
                 *             "language": "en",
                 *             "value": "potato"
                 *           },
                 *           "description": {
                 *             "language": "en",
                 *             "value": "species of plant"
                 *           },
                 *           "match": {
                 *             "type": "label",
                 *             "language": "en",
                 *             "text": "potato"
                 *           }
                 *         }
                 *       ]
                 *     } */
                "application/json": {
                    results: {
                        id: string;
                        "display-label": {
                            language: string;
                            value: string;
                        } | null;
                        description: {
                            language: string;
                            value: string;
                        } | null;
                        match: {
                            type: string;
                            language: string;
                            text: string;
                        };
                    }[];
                };
            };
        };
        /** @description The request cannot be processed */
        BadRequest: {
            headers: {
                /** @description Language code of the language in which error message is provided */
                "Content-Language": string;
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    code: string;
                    message: string;
                    context?: Record<string, never>;
                };
            };
        };
        /** @description A list of search results */
        SearchPropertySuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "results": [
                 *         {
                 *           "id": "P123",
                 *           "display-label": {
                 *             "language": "en",
                 *             "value": "taxon name"
                 *           },
                 *           "description": {
                 *             "language": "en",
                 *             "value": "scientific name of a taxon"
                 *           },
                 *           "match": {
                 *             "type": "label",
                 *             "language": "en",
                 *             "text": "taxon"
                 *           }
                 *         },
                 *         {
                 *           "id": "P234",
                 *           "display-label": {
                 *             "language": "en",
                 *             "value": "taxon rank"
                 *           },
                 *           "description": {
                 *             "language": "en",
                 *             "value": "level in a taxonomic hierarchy"
                 *           },
                 *           "match": {
                 *             "type": "label",
                 *             "language": "en",
                 *             "text": "taxon"
                 *           }
                 *         }
                 *       ]
                 *     } */
                "application/json": {
                    results: {
                        id: string;
                        "display-label": {
                            language: string;
                            value: string;
                        } | null;
                        description: {
                            language: string;
                            value: string;
                        } | null;
                        match: {
                            type: string;
                            language: string;
                            text: string;
                        };
                    }[];
                };
            };
        };
    };
    parameters: {
        /**
         * @description Make authenticated request using a provided bearer token
         * @example Bearer mF_9.B5f-4.1JqM
         */
        Authorization: string;
        /**
         * @description The ID of the required Item
         * @example Q24
         */
        ItemId: string;
        /** @description Comma-separated list of fields to include in each response object. */
        ItemFields: ("type" | "labels" | "descriptions" | "aliases" | "statements" | "sitelinks")[];
        /**
         * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
         * @example [
         *       "\"1276705620\""
         *     ]
         */
        IfNoneMatch: string[];
        /**
         * @description Conditionally perform the request only if the resource has been modified after the specified date
         * @example Sat, 06 Jun 2020 16:38:47 GMT
         */
        IfModifiedSince: string;
        /**
         * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
         * @example [
         *       "\"1276705620\""
         *     ]
         */
        IfMatch: string[];
        /**
         * @description Conditionally perform the request only if the resource has not been modified after the specified date
         * @example Sat, 06 Jun 2020 16:38:47 GMT
         */
        IfUnmodifiedSince: string;
        /**
         * @description The ID of the required Site
         * @example enwiki
         */
        SiteId: string;
        /**
         * @description The ID of the required Property
         * @example P694
         */
        PropertyId: string;
        /** @description Comma-separated list of fields to include in each response object. */
        PropertyFields: ("type" | "data_type" | "labels" | "descriptions" | "aliases" | "statements")[];
        /**
         * @description The requested resource language
         * @example en
         */
        LanguageCode: string;
        /**
         * @description Single Property ID to filter Statements by.
         * @example P1628
         */
        PropertyFilter: string;
        /**
         * @description The ID of a Statement on an Item
         * @example Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA
         */
        ItemStatementId: string;
        /**
         * @description The ID of a Statement on a Property
         * @example P694$B4C349A2-C504-4FC5-B7D5-8B781C719D71
         */
        PropertyStatementId: string;
        /**
         * @description The ID of a Statement
         * @example Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA
         */
        StatementId: string;
        /** @description The term to search labels by */
        SearchQuery: string;
        /**
         * @description The language to search labels in
         * @example en
         */
        SearchLanguage: string;
        /**
         * @description The number of items to show in the results
         * @example 20
         */
        Limit: number;
        /**
         * @description The index to start showing results from
         * @example 4
         */
        Offset: number;
    };
    requestBodies: {
        /** @description Payload containing a Wikibase Item and edit metadata */
        Item: {
            content: {
                /** @example {
                 *       "item": {
                 *         "labels": {
                 *           "en": "Jane Doe",
                 *           "ru": "Джейн Доу"
                 *         },
                 *         "descriptions": {
                 *           "en": "famous person",
                 *           "ru": "известная личность"
                 *         },
                 *         "aliases": {
                 *           "en": [
                 *             "Jane M. Doe",
                 *             "JD"
                 *           ],
                 *           "ru": [
                 *             "Джейн М. Доу"
                 *           ]
                 *         },
                 *         "statements": {
                 *           "P694": [
                 *             {
                 *               "property": {
                 *                 "id": "P694"
                 *               },
                 *               "value": {
                 *                 "type": "value",
                 *                 "content": "Q626683"
                 *               }
                 *             }
                 *           ],
                 *           "P476": [
                 *             {
                 *               "property": {
                 *                 "id": "P476"
                 *               },
                 *               "value": {
                 *                 "type": "value",
                 *                 "content": {
                 *                   "time": "+1986-01-27T00:00:00Z",
                 *                   "precision": 11,
                 *                   "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                 *                 }
                 *               }
                 *             }
                 *           ],
                 *           "P17": [
                 *             {
                 *               "property": {
                 *                 "id": "P17"
                 *               },
                 *               "value": {
                 *                 "type": "value",
                 *                 "content": "Senior Team Supervisor"
                 *               },
                 *               "qualifiers": [
                 *                 {
                 *                   "property": {
                 *                     "id": "P706"
                 *                   },
                 *                   "value": {
                 *                     "type": "value",
                 *                     "content": {
                 *                       "time": "+2023-06-13T00:00:00Z",
                 *                       "precision": 11,
                 *                       "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                 *                     }
                 *                   }
                 *                 }
                 *               ],
                 *               "references": [
                 *                 {
                 *                   "parts": [
                 *                     {
                 *                       "property": {
                 *                         "id": "P709"
                 *                       },
                 *                       "value": {
                 *                         "type": "value",
                 *                         "content": "https://news.example.org"
                 *                       }
                 *                     }
                 *                   ]
                 *                 }
                 *               ]
                 *             }
                 *           ]
                 *         },
                 *         "sitelinks": {
                 *           "enwiki": {
                 *             "title": "Jane Doe"
                 *           },
                 *           "ruwiki": {
                 *             "title": "Джейн Доу"
                 *           }
                 *         }
                 *       },
                 *       "comment": "Create an Item for Jane Doe"
                 *     } */
                "application/json": {
                    item: {
                        readonly id?: string;
                        /** @constant */
                        readonly type?: "item";
                        labels?: {
                            [key: string]: string;
                        };
                        descriptions?: {
                            [key: string]: string;
                        };
                        aliases?: {
                            [key: string]: string[];
                        };
                        sitelinks?: {
                            [key: string]: {
                                title: string;
                                badges?: string[];
                                readonly url?: string;
                            };
                        };
                        statements?: {
                            [key: string]: ({
                                /** @description The globally unique identifier for this Statement */
                                readonly id?: string;
                                /**
                                 * @description The rank of the Statement
                                 * @default normal
                                 * @enum {string}
                                 */
                                rank?: "deprecated" | "normal" | "preferred";
                            } & {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            } & {
                                /** @default [] */
                                qualifiers?: {
                                    property?: {
                                        /** @description The ID of the Property */
                                        id?: string;
                                        /** @description The data type of the Property */
                                        readonly data_type?: string | null;
                                    };
                                    value?: {
                                        /** @description The value, if type == "value", otherwise omitted */
                                        content?: unknown;
                                        /**
                                         * @description The value type
                                         * @enum {string}
                                         */
                                        type?: "value" | "somevalue" | "novalue";
                                    };
                                }[];
                                /** @default [] */
                                references?: {
                                    /** @description Hash of the Reference */
                                    readonly hash?: string;
                                    parts?: {
                                        property?: {
                                            /** @description The ID of the Property */
                                            id?: string;
                                            /** @description The data type of the Property */
                                            readonly data_type?: string | null;
                                        };
                                        value?: {
                                            /** @description The value, if type == "value", otherwise omitted */
                                            content?: unknown;
                                            /**
                                             * @description The value type
                                             * @enum {string}
                                             */
                                            type?: "value" | "somevalue" | "novalue";
                                        };
                                    }[];
                                }[];
                            })[];
                        };
                    };
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        PatchItem: {
            content: {
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "replace",
                 *           "path": "/labels/en",
                 *           "value": "Jane Doe"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Update the English label"
                 *     } */
                "application/json-patch+json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "replace",
                 *           "path": "/labels/en",
                 *           "value": "Jane Doe"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Update the English label"
                 *     } */
                "application/json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        PatchSitelinks: {
            content: {
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "add",
                 *           "path": "/ruwiki/title",
                 *           "value": "Джейн Доу"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Add sitelink to ruwiki"
                 *     } */
                "application/json-patch+json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "add",
                 *           "path": "/ruwiki/title",
                 *           "value": "Джейн Доу"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Add sitelink to ruwiki"
                 *     } */
                "application/json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        /** @description Payload containing a Wikibase Sitelink object and edit metadata */
        Sitelink: {
            content: {
                /** @example {
                 *       "sitelink": {
                 *         "title": "Jane Doe",
                 *         "badges": []
                 *       },
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Add enwiki sitelink"
                 *     } */
                "application/json": {
                    sitelink: {
                        title: string;
                        badges?: string[];
                        readonly url?: string;
                    };
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        /** @description Edit payload containing edit metadata */
        Delete: {
            content: {
                /** @example {
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Example edit using the Wikibase REST API"
                 *     } */
                "application/json": {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        /** @description Payload containing a Wikibase Property and edit metadata */
        Property: {
            content: {
                /** @example {
                 *       "property": {
                 *         "data_type": "wikibase-item",
                 *         "labels": {
                 *           "en": "instance of",
                 *           "ru": "это частный случай понятия"
                 *         },
                 *         "descriptions": {
                 *           "en": "the subject is a concrete object (instance) of this class, category, or object group",
                 *           "ru": "данный элемент представляет собой конкретный объект (экземпляр / частный случай) класса, категории"
                 *         },
                 *         "aliases": {
                 *           "en": [
                 *             "is a",
                 *             "is an"
                 *           ],
                 *           "ru": [
                 *             "представляет собой",
                 *             "является"
                 *           ]
                 *         },
                 *         "statements": {
                 *           "P1628": [
                 *             {
                 *               "property": {
                 *                 "id": "P1628"
                 *               },
                 *               "value": {
                 *                 "type": "value",
                 *                 "content": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
                 *               }
                 *             }
                 *           ]
                 *         }
                 *       }
                 *     } */
                "application/json": {
                    property: {
                        readonly id?: string;
                        /** @constant */
                        readonly type?: "property";
                        data_type: string;
                        labels?: {
                            [key: string]: string;
                        };
                        descriptions?: {
                            [key: string]: string;
                        };
                        aliases?: {
                            [key: string]: string[];
                        };
                        statements?: {
                            [key: string]: ({
                                /** @description The globally unique identifier for this Statement */
                                readonly id?: string;
                                /**
                                 * @description The rank of the Statement
                                 * @default normal
                                 * @enum {string}
                                 */
                                rank?: "deprecated" | "normal" | "preferred";
                            } & {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            } & {
                                /** @default [] */
                                qualifiers?: {
                                    property?: {
                                        /** @description The ID of the Property */
                                        id?: string;
                                        /** @description The data type of the Property */
                                        readonly data_type?: string | null;
                                    };
                                    value?: {
                                        /** @description The value, if type == "value", otherwise omitted */
                                        content?: unknown;
                                        /**
                                         * @description The value type
                                         * @enum {string}
                                         */
                                        type?: "value" | "somevalue" | "novalue";
                                    };
                                }[];
                                /** @default [] */
                                references?: {
                                    /** @description Hash of the Reference */
                                    readonly hash?: string;
                                    parts?: {
                                        property?: {
                                            /** @description The ID of the Property */
                                            id?: string;
                                            /** @description The data type of the Property */
                                            readonly data_type?: string | null;
                                        };
                                        value?: {
                                            /** @description The value, if type == "value", otherwise omitted */
                                            content?: unknown;
                                            /**
                                             * @description The value type
                                             * @enum {string}
                                             */
                                            type?: "value" | "somevalue" | "novalue";
                                        };
                                    }[];
                                }[];
                            })[];
                        };
                    };
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        PatchProperty: {
            content: {
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "add",
                 *           "path": "/aliases/en/-",
                 *           "value": "is an"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "add 'is an' as an English alias"
                 *     } */
                "application/json-patch+json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "add",
                 *           "path": "/aliases/en/-",
                 *           "value": "is an"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "add 'is an' as an English alias"
                 *     } */
                "application/json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        /** @description Payload containing a Wikibase Statement object and edit metadata */
        ItemStatement: {
            content: {
                /** @example {
                 *       "statement": {
                 *         "property": {
                 *           "id": "P17"
                 *         },
                 *         "value": {
                 *           "type": "value",
                 *           "content": "Senior Team Supervisor"
                 *         },
                 *         "qualifiers": [
                 *           {
                 *             "property": {
                 *               "id": "P706"
                 *             },
                 *             "value": {
                 *               "type": "value",
                 *               "content": {
                 *                 "time": "+2023-06-13T00:00:00Z",
                 *                 "precision": 11,
                 *                 "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                 *               }
                 *             }
                 *           }
                 *         ],
                 *         "references": [
                 *           {
                 *             "parts": [
                 *               {
                 *                 "property": {
                 *                   "id": "P709"
                 *                 },
                 *                 "value": {
                 *                   "type": "value",
                 *                   "content": "https://news.example.org"
                 *                 }
                 *               }
                 *             ]
                 *           }
                 *         ]
                 *       },
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Example edit using the Wikibase REST API"
                 *     } */
                "application/json": {
                    statement: ({
                        /** @description The globally unique identifier for this Statement */
                        readonly id?: string;
                        /**
                         * @description The rank of the Statement
                         * @default normal
                         * @enum {string}
                         */
                        rank?: "deprecated" | "normal" | "preferred";
                    } & {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    } & {
                        /** @default [] */
                        qualifiers?: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                        /** @default [] */
                        references?: {
                            /** @description Hash of the Reference */
                            readonly hash?: string;
                            parts?: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                        }[];
                    }) & ({
                        property: unknown;
                        value: unknown;
                    } & {
                        qualifiers?: unknown;
                        references?: unknown;
                    });
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        /** @description Payload containing a JSON Patch document to be applied to the Statement and edit metadata */
        PatchItemStatement: {
            content: {
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "add",
                 *           "path": "/references/-",
                 *           "value": {
                 *             "parts": [
                 *               {
                 *                 "property": {
                 *                   "id": "P709"
                 *                 },
                 *                 "value": {
                 *                   "type": "value",
                 *                   "content": "https://news.example.org"
                 *                 }
                 *               }
                 *             ]
                 *           }
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Add reference to Statement"
                 *     } */
                "application/json-patch+json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "add",
                 *           "path": "/references/-",
                 *           "value": {
                 *             "parts": [
                 *               {
                 *                 "property": {
                 *                   "id": "P709"
                 *                 },
                 *                 "value": {
                 *                   "type": "value",
                 *                   "content": "https://news.example.org"
                 *                 }
                 *               }
                 *             ]
                 *           }
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Add reference to Statement"
                 *     } */
                "application/json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        /** @description Payload containing a JSON Patch document to be applied to Labels and edit metadata */
        PatchItemLabels: {
            content: {
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "replace",
                 *           "path": "/en",
                 *           "value": "Jane Doe"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "replace English label"
                 *     } */
                "application/json-patch+json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "replace",
                 *           "path": "/en",
                 *           "value": "Jane Doe"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "replace English label"
                 *     } */
                "application/json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        /** @description Payload containing a JSON Patch document to be applied to Labels and edit metadata */
        PatchPropertyLabels: {
            content: {
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "replace",
                 *           "path": "/en",
                 *           "value": "instance of"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "replace English label"
                 *     } */
                "application/json-patch+json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "replace",
                 *           "path": "/en",
                 *           "value": "instance of"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "replace English label"
                 *     } */
                "application/json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        /** @description Payload containing an Item label in the specified language and edit metadata */
        ItemLabel: {
            content: {
                /** @example {
                 *       "label": "Jane Doe",
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Update the English label"
                 *     } */
                "application/json": {
                    label: string;
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        /** @description Payload containing a Property label in the specified language and edit metadata */
        PropertyLabel: {
            content: {
                /** @example {
                 *       "label": "instance of",
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Update the English label"
                 *     } */
                "application/json": {
                    label: string;
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        /** @description Payload containing a Wikibase Statement object and edit metadata */
        PropertyStatement: {
            content: {
                /** @example {
                 *       "statement": {
                 *         "property": {
                 *           "id": "P1628"
                 *         },
                 *         "value": {
                 *           "type": "value",
                 *           "content": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
                 *         }
                 *       },
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Example edit using the Wikibase REST API"
                 *     } */
                "application/json": {
                    statement: ({
                        /** @description The globally unique identifier for this Statement */
                        readonly id?: string;
                        /**
                         * @description The rank of the Statement
                         * @default normal
                         * @enum {string}
                         */
                        rank?: "deprecated" | "normal" | "preferred";
                    } & {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    } & {
                        /** @default [] */
                        qualifiers?: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                        /** @default [] */
                        references?: {
                            /** @description Hash of the Reference */
                            readonly hash?: string;
                            parts?: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                        }[];
                    }) & ({
                        property: unknown;
                        value: unknown;
                    } & {
                        qualifiers?: unknown;
                        references?: unknown;
                    });
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        /** @description Payload containing a JSON Patch document to be applied to the Statement and edit metadata */
        PatchPropertyStatement: {
            content: {
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "replace",
                 *           "path": "/value/content",
                 *           "value": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Update value of the 'equivalent property' Statement"
                 *     } */
                "application/json-patch+json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "replace",
                 *           "path": "/value/content",
                 *           "value": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Update value of the 'equivalent property' Statement"
                 *     } */
                "application/json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
    };
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getOpenApiDoc: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OpenAPI document */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "openapi": "...",
                     *       "info": {
                     *         "title": "Wikibase REST API",
                     *         "version": "...",
                     *         "description": "OpenAPI definition of Wikibase REST API"
                     *       },
                     *       "paths": "..."
                     *     } */
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    getPropertyDataTypes: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The map of Property data types to value types */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "data-type": "value-type"
                     *     } */
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
        };
    };
    addItem: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        /** @description Payload containing a Wikibase Item and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "item": {
                 *         "labels": {
                 *           "en": "Jane Doe",
                 *           "ru": "Джейн Доу"
                 *         },
                 *         "descriptions": {
                 *           "en": "famous person",
                 *           "ru": "известная личность"
                 *         },
                 *         "aliases": {
                 *           "en": [
                 *             "Jane M. Doe",
                 *             "JD"
                 *           ],
                 *           "ru": [
                 *             "Джейн М. Доу"
                 *           ]
                 *         },
                 *         "statements": {
                 *           "P694": [
                 *             {
                 *               "property": {
                 *                 "id": "P694"
                 *               },
                 *               "value": {
                 *                 "type": "value",
                 *                 "content": "Q626683"
                 *               }
                 *             }
                 *           ],
                 *           "P476": [
                 *             {
                 *               "property": {
                 *                 "id": "P476"
                 *               },
                 *               "value": {
                 *                 "type": "value",
                 *                 "content": {
                 *                   "time": "+1986-01-27T00:00:00Z",
                 *                   "precision": 11,
                 *                   "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                 *                 }
                 *               }
                 *             }
                 *           ],
                 *           "P17": [
                 *             {
                 *               "property": {
                 *                 "id": "P17"
                 *               },
                 *               "value": {
                 *                 "type": "value",
                 *                 "content": "Senior Team Supervisor"
                 *               },
                 *               "qualifiers": [
                 *                 {
                 *                   "property": {
                 *                     "id": "P706"
                 *                   },
                 *                   "value": {
                 *                     "type": "value",
                 *                     "content": {
                 *                       "time": "+2023-06-13T00:00:00Z",
                 *                       "precision": 11,
                 *                       "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                 *                     }
                 *                   }
                 *                 }
                 *               ],
                 *               "references": [
                 *                 {
                 *                   "parts": [
                 *                     {
                 *                       "property": {
                 *                         "id": "P709"
                 *                       },
                 *                       "value": {
                 *                         "type": "value",
                 *                         "content": "https://news.example.org"
                 *                       }
                 *                     }
                 *                   ]
                 *                 }
                 *               ]
                 *             }
                 *           ]
                 *         },
                 *         "sitelinks": {
                 *           "enwiki": {
                 *             "title": "Jane Doe"
                 *           },
                 *           "ruwiki": {
                 *             "title": "Джейн Доу"
                 *           }
                 *         }
                 *       },
                 *       "comment": "Create an Item for Jane Doe"
                 *     } */
                "application/json": {
                    item: {
                        readonly id?: string;
                        /** @constant */
                        readonly type?: "item";
                        labels?: {
                            [key: string]: string;
                        };
                        descriptions?: {
                            [key: string]: string;
                        };
                        aliases?: {
                            [key: string]: string[];
                        };
                        sitelinks?: {
                            [key: string]: {
                                title: string;
                                badges?: string[];
                                readonly url?: string;
                            };
                        };
                        statements?: {
                            [key: string]: ({
                                /** @description The globally unique identifier for this Statement */
                                readonly id?: string;
                                /**
                                 * @description The rank of the Statement
                                 * @default normal
                                 * @enum {string}
                                 */
                                rank?: "deprecated" | "normal" | "preferred";
                            } & {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            } & {
                                /** @default [] */
                                qualifiers?: {
                                    property?: {
                                        /** @description The ID of the Property */
                                        id?: string;
                                        /** @description The data type of the Property */
                                        readonly data_type?: string | null;
                                    };
                                    value?: {
                                        /** @description The value, if type == "value", otherwise omitted */
                                        content?: unknown;
                                        /**
                                         * @description The value type
                                         * @enum {string}
                                         */
                                        type?: "value" | "somevalue" | "novalue";
                                    };
                                }[];
                                /** @default [] */
                                references?: {
                                    /** @description Hash of the Reference */
                                    readonly hash?: string;
                                    parts?: {
                                        property?: {
                                            /** @description The ID of the Property */
                                            id?: string;
                                            /** @description The data type of the Property */
                                            readonly data_type?: string | null;
                                        };
                                        value?: {
                                            /** @description The value, if type == "value", otherwise omitted */
                                            content?: unknown;
                                            /**
                                             * @description The value type
                                             * @enum {string}
                                             */
                                            type?: "value" | "somevalue" | "novalue";
                                        };
                                    }[];
                                }[];
                            })[];
                        };
                    };
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description A single Wikibase Item */
            201: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "Q24",
                     *       "type": "item",
                     *       "labels": {
                     *         "en": "Jane Doe",
                     *         "ru": "Джейн Доу"
                     *       },
                     *       "descriptions": {
                     *         "en": "famous person",
                     *         "ru": "известная личность"
                     *       },
                     *       "aliases": {
                     *         "en": [
                     *           "Jane M. Doe",
                     *           "JD"
                     *         ],
                     *         "ru": [
                     *           "Джейн М. Доу"
                     *         ]
                     *       },
                     *       "statements": {
                     *         "P694": [
                     *           {
                     *             "id": "Q24$BB728546-A400-4116-A772-16D54B62AC2B",
                     *             "rank": "normal",
                     *             "property": {
                     *               "id": "P694",
                     *               "data_type": "wikibase-item"
                     *             },
                     *             "value": {
                     *               "type": "value",
                     *               "content": "Q626683"
                     *             },
                     *             "qualifiers": [],
                     *             "references": []
                     *           }
                     *         ],
                     *         "P476": [
                     *           {
                     *             "id": "Q24$F3B2F956-B6AB-4984-8D89-BEE0FFFA3385",
                     *             "rank": "normal",
                     *             "property": {
                     *               "id": "P476",
                     *               "data_type": "time"
                     *             },
                     *             "value": {
                     *               "type": "value",
                     *               "content": {
                     *                 "time": "+1986-01-27T00:00:00Z",
                     *                 "precision": 11,
                     *                 "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                     *               }
                     *             },
                     *             "qualifiers": [],
                     *             "references": []
                     *           }
                     *         ],
                     *         "P17": [
                     *           {
                     *             "id": "Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA",
                     *             "rank": "normal",
                     *             "property": {
                     *               "id": "P17",
                     *               "data_type": "string"
                     *             },
                     *             "value": {
                     *               "type": "value",
                     *               "content": "Senior Team Supervisor"
                     *             },
                     *             "qualifiers": [
                     *               {
                     *                 "property": {
                     *                   "id": "P706",
                     *                   "data_type": "time"
                     *                 },
                     *                 "value": {
                     *                   "type": "value",
                     *                   "content": {
                     *                     "time": "+2023-06-13T00:00:00Z",
                     *                     "precision": 11,
                     *                     "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                     *                   }
                     *                 }
                     *               }
                     *             ],
                     *             "references": [
                     *               {
                     *                 "hash": "7ccd777f870b71a4c5056c7fd2a83a22cc39be6d",
                     *                 "parts": [
                     *                   {
                     *                     "property": {
                     *                       "id": "P709",
                     *                       "data_type": "url"
                     *                     },
                     *                     "value": {
                     *                       "type": "value",
                     *                       "content": "https://news.example.org"
                     *                     }
                     *                   }
                     *                 ]
                     *               }
                     *             ]
                     *           }
                     *         ]
                     *       },
                     *       "sitelinks": {
                     *         "enwiki": {
                     *           "title": "Jane Doe",
                     *           "badges": [],
                     *           "url": "https://enwiki.example.org/wiki/Jane_Doe"
                     *         },
                     *         "ruwiki": {
                     *           "title": "Джейн Доу",
                     *           "badges": [],
                     *           "url": "https://ruwiki.example.org/wiki/Джейн_Доу"
                     *         }
                     *       }
                     *     } */
                    "application/json": {
                        readonly id?: string;
                        /** @constant */
                        readonly type?: "item";
                        labels?: {
                            [key: string]: string;
                        };
                        descriptions?: {
                            [key: string]: string;
                        };
                        aliases?: {
                            [key: string]: string[];
                        };
                        sitelinks?: {
                            [key: string]: {
                                title: string;
                                badges?: string[];
                                readonly url?: string;
                            };
                        };
                        statements?: {
                            [key: string]: ({
                                /** @description The globally unique identifier for this Statement */
                                readonly id?: string;
                                /**
                                 * @description The rank of the Statement
                                 * @default normal
                                 * @enum {string}
                                 */
                                rank: "deprecated" | "normal" | "preferred";
                            } & {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            } & {
                                /** @default [] */
                                qualifiers: {
                                    property?: {
                                        /** @description The ID of the Property */
                                        id?: string;
                                        /** @description The data type of the Property */
                                        readonly data_type?: string | null;
                                    };
                                    value?: {
                                        /** @description The value, if type == "value", otherwise omitted */
                                        content?: unknown;
                                        /**
                                         * @description The value type
                                         * @enum {string}
                                         */
                                        type?: "value" | "somevalue" | "novalue";
                                    };
                                }[];
                                /** @default [] */
                                references: {
                                    /** @description Hash of the Reference */
                                    readonly hash?: string;
                                    parts?: {
                                        property?: {
                                            /** @description The ID of the Property */
                                            id?: string;
                                            /** @description The data type of the Property */
                                            readonly data_type?: string | null;
                                        };
                                        value?: {
                                            /** @description The value, if type == "value", otherwise omitted */
                                            content?: unknown;
                                            /**
                                             * @description The value type
                                             * @enum {string}
                                             */
                                            type?: "value" | "somevalue" | "novalue";
                                        };
                                    }[];
                                }[];
                            })[];
                        };
                    } & {
                        sitelinks: {
                            [key: string]: unknown;
                        };
                        statements: {
                            [key: string]: unknown;
                        };
                    };
                };
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The edit request violates data policy */
            422: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getItem: {
        parameters: {
            query?: {
                /** @description Comma-separated list of fields to include in each response object. */
                _fields?: ("type" | "labels" | "descriptions" | "aliases" | "statements" | "sitelinks")[];
            };
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A single Wikibase Item */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "Q24",
                     *       "type": "item",
                     *       "labels": {
                     *         "en": "Jane Doe",
                     *         "ru": "Джейн Доу"
                     *       },
                     *       "descriptions": {
                     *         "en": "famous person",
                     *         "ru": "известная личность"
                     *       },
                     *       "aliases": {
                     *         "en": [
                     *           "Jane M. Doe",
                     *           "JD"
                     *         ],
                     *         "ru": [
                     *           "Джейн М. Доу"
                     *         ]
                     *       },
                     *       "statements": {
                     *         "P694": [
                     *           {
                     *             "id": "Q24$BB728546-A400-4116-A772-16D54B62AC2B",
                     *             "rank": "normal",
                     *             "property": {
                     *               "id": "P694",
                     *               "data_type": "wikibase-item"
                     *             },
                     *             "value": {
                     *               "type": "value",
                     *               "content": "Q626683"
                     *             },
                     *             "qualifiers": [],
                     *             "references": []
                     *           }
                     *         ],
                     *         "P476": [
                     *           {
                     *             "id": "Q24$F3B2F956-B6AB-4984-8D89-BEE0FFFA3385",
                     *             "rank": "normal",
                     *             "property": {
                     *               "id": "P476",
                     *               "data_type": "time"
                     *             },
                     *             "value": {
                     *               "type": "value",
                     *               "content": {
                     *                 "time": "+1986-01-27T00:00:00Z",
                     *                 "precision": 11,
                     *                 "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                     *               }
                     *             },
                     *             "qualifiers": [],
                     *             "references": []
                     *           }
                     *         ],
                     *         "P17": [
                     *           {
                     *             "id": "Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA",
                     *             "rank": "normal",
                     *             "property": {
                     *               "id": "P17",
                     *               "data_type": "string"
                     *             },
                     *             "value": {
                     *               "type": "value",
                     *               "content": "Senior Team Supervisor"
                     *             },
                     *             "qualifiers": [
                     *               {
                     *                 "property": {
                     *                   "id": "P706",
                     *                   "data_type": "time"
                     *                 },
                     *                 "value": {
                     *                   "type": "value",
                     *                   "content": {
                     *                     "time": "+2023-06-13T00:00:00Z",
                     *                     "precision": 11,
                     *                     "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                     *                   }
                     *                 }
                     *               }
                     *             ],
                     *             "references": [
                     *               {
                     *                 "hash": "7ccd777f870b71a4c5056c7fd2a83a22cc39be6d",
                     *                 "parts": [
                     *                   {
                     *                     "property": {
                     *                       "id": "P709",
                     *                       "data_type": "url"
                     *                     },
                     *                     "value": {
                     *                       "type": "value",
                     *                       "content": "https://news.example.org"
                     *                     }
                     *                   }
                     *                 ]
                     *               }
                     *             ]
                     *           }
                     *         ]
                     *       },
                     *       "sitelinks": {
                     *         "enwiki": {
                     *           "title": "Jane Doe",
                     *           "badges": [],
                     *           "url": "https://enwiki.example.org/wiki/Jane_Doe"
                     *         },
                     *         "ruwiki": {
                     *           "title": "Джейн Доу",
                     *           "badges": [],
                     *           "url": "https://ruwiki.example.org/wiki/Джейн_Доу"
                     *         }
                     *       }
                     *     } */
                    "application/json": {
                        readonly id?: string;
                        /** @constant */
                        readonly type?: "item";
                        labels?: {
                            [key: string]: string;
                        };
                        descriptions?: {
                            [key: string]: string;
                        };
                        aliases?: {
                            [key: string]: string[];
                        };
                        sitelinks?: {
                            [key: string]: {
                                title: string;
                                badges?: string[];
                                readonly url?: string;
                            };
                        };
                        statements?: {
                            [key: string]: ({
                                /** @description The globally unique identifier for this Statement */
                                readonly id?: string;
                                /**
                                 * @description The rank of the Statement
                                 * @default normal
                                 * @enum {string}
                                 */
                                rank: "deprecated" | "normal" | "preferred";
                            } & {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            } & {
                                /** @default [] */
                                qualifiers: {
                                    property?: {
                                        /** @description The ID of the Property */
                                        id?: string;
                                        /** @description The data type of the Property */
                                        readonly data_type?: string | null;
                                    };
                                    value?: {
                                        /** @description The value, if type == "value", otherwise omitted */
                                        content?: unknown;
                                        /**
                                         * @description The value type
                                         * @enum {string}
                                         */
                                        type?: "value" | "somevalue" | "novalue";
                                    };
                                }[];
                                /** @default [] */
                                references: {
                                    /** @description Hash of the Reference */
                                    readonly hash?: string;
                                    parts?: {
                                        property?: {
                                            /** @description The ID of the Property */
                                            id?: string;
                                            /** @description The data type of the Property */
                                            readonly data_type?: string | null;
                                        };
                                        value?: {
                                            /** @description The value, if type == "value", otherwise omitted */
                                            content?: unknown;
                                            /**
                                             * @description The value type
                                             * @enum {string}
                                             */
                                            type?: "value" | "somevalue" | "novalue";
                                        };
                                    }[];
                                }[];
                            })[];
                        };
                    } & {
                        sitelinks: {
                            [key: string]: unknown;
                        };
                        statements: {
                            [key: string]: unknown;
                        };
                    };
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The specified resource has permanently moved to the indicated location */
            308: {
                headers: {
                    /** @description The URL to which the requested resource has been moved */
                    Location: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    patchItem: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "replace",
                 *           "path": "/labels/en",
                 *           "value": "Jane Doe"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Update the English label"
                 *     } */
                "application/json-patch+json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "replace",
                 *           "path": "/labels/en",
                 *           "value": "Jane Doe"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Update the English label"
                 *     } */
                "application/json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description A single Wikibase Item */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "Q24",
                     *       "type": "item",
                     *       "labels": {
                     *         "en": "Jane Doe",
                     *         "ru": "Джейн Доу"
                     *       },
                     *       "descriptions": {
                     *         "en": "famous person",
                     *         "ru": "известная личность"
                     *       },
                     *       "aliases": {
                     *         "en": [
                     *           "Jane M. Doe",
                     *           "JD"
                     *         ],
                     *         "ru": [
                     *           "Джейн М. Доу"
                     *         ]
                     *       },
                     *       "statements": {
                     *         "P694": [
                     *           {
                     *             "id": "Q24$BB728546-A400-4116-A772-16D54B62AC2B",
                     *             "rank": "normal",
                     *             "property": {
                     *               "id": "P694",
                     *               "data_type": "wikibase-item"
                     *             },
                     *             "value": {
                     *               "type": "value",
                     *               "content": "Q626683"
                     *             },
                     *             "qualifiers": [],
                     *             "references": []
                     *           }
                     *         ],
                     *         "P476": [
                     *           {
                     *             "id": "Q24$F3B2F956-B6AB-4984-8D89-BEE0FFFA3385",
                     *             "rank": "normal",
                     *             "property": {
                     *               "id": "P476",
                     *               "data_type": "time"
                     *             },
                     *             "value": {
                     *               "type": "value",
                     *               "content": {
                     *                 "time": "+1986-01-27T00:00:00Z",
                     *                 "precision": 11,
                     *                 "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                     *               }
                     *             },
                     *             "qualifiers": [],
                     *             "references": []
                     *           }
                     *         ],
                     *         "P17": [
                     *           {
                     *             "id": "Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA",
                     *             "rank": "normal",
                     *             "property": {
                     *               "id": "P17",
                     *               "data_type": "string"
                     *             },
                     *             "value": {
                     *               "type": "value",
                     *               "content": "Senior Team Supervisor"
                     *             },
                     *             "qualifiers": [
                     *               {
                     *                 "property": {
                     *                   "id": "P706",
                     *                   "data_type": "time"
                     *                 },
                     *                 "value": {
                     *                   "type": "value",
                     *                   "content": {
                     *                     "time": "+2023-06-13T00:00:00Z",
                     *                     "precision": 11,
                     *                     "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                     *                   }
                     *                 }
                     *               }
                     *             ],
                     *             "references": [
                     *               {
                     *                 "hash": "7ccd777f870b71a4c5056c7fd2a83a22cc39be6d",
                     *                 "parts": [
                     *                   {
                     *                     "property": {
                     *                       "id": "P709",
                     *                       "data_type": "url"
                     *                     },
                     *                     "value": {
                     *                       "type": "value",
                     *                       "content": "https://news.example.org"
                     *                     }
                     *                   }
                     *                 ]
                     *               }
                     *             ]
                     *           }
                     *         ]
                     *       },
                     *       "sitelinks": {
                     *         "enwiki": {
                     *           "title": "Jane Doe",
                     *           "badges": [],
                     *           "url": "https://enwiki.example.org/wiki/Jane_Doe"
                     *         },
                     *         "ruwiki": {
                     *           "title": "Джейн Доу",
                     *           "badges": [],
                     *           "url": "https://ruwiki.example.org/wiki/Джейн_Доу"
                     *         }
                     *       }
                     *     } */
                    "application/json": {
                        readonly id?: string;
                        /** @constant */
                        readonly type?: "item";
                        labels?: {
                            [key: string]: string;
                        };
                        descriptions?: {
                            [key: string]: string;
                        };
                        aliases?: {
                            [key: string]: string[];
                        };
                        sitelinks?: {
                            [key: string]: {
                                title: string;
                                badges?: string[];
                                readonly url?: string;
                            };
                        };
                        statements?: {
                            [key: string]: ({
                                /** @description The globally unique identifier for this Statement */
                                readonly id?: string;
                                /**
                                 * @description The rank of the Statement
                                 * @default normal
                                 * @enum {string}
                                 */
                                rank: "deprecated" | "normal" | "preferred";
                            } & {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            } & {
                                /** @default [] */
                                qualifiers: {
                                    property?: {
                                        /** @description The ID of the Property */
                                        id?: string;
                                        /** @description The data type of the Property */
                                        readonly data_type?: string | null;
                                    };
                                    value?: {
                                        /** @description The value, if type == "value", otherwise omitted */
                                        content?: unknown;
                                        /**
                                         * @description The value type
                                         * @enum {string}
                                         */
                                        type?: "value" | "somevalue" | "novalue";
                                    };
                                }[];
                                /** @default [] */
                                references: {
                                    /** @description Hash of the Reference */
                                    readonly hash?: string;
                                    parts?: {
                                        property?: {
                                            /** @description The ID of the Property */
                                            id?: string;
                                            /** @description The data type of the Property */
                                            readonly data_type?: string | null;
                                        };
                                        value?: {
                                            /** @description The value, if type == "value", otherwise omitted */
                                            content?: unknown;
                                            /**
                                             * @description The value type
                                             * @enum {string}
                                             */
                                            type?: "value" | "somevalue" | "novalue";
                                        };
                                    }[];
                                }[];
                            })[];
                        };
                    } & {
                        sitelinks: {
                            [key: string]: unknown;
                        };
                        statements: {
                            [key: string]: unknown;
                        };
                    };
                };
            };
            /** @description The provided JSON Patch request is invalid */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The provided JSON Patch cannot be applied */
            409: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Applying the provided JSON Patch results in an invalid Property */
            422: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getSitelinks: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A list of Sitelinks by Item id */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "enwiki": {
                     *         "title": "Jane Doe",
                     *         "badges": [],
                     *         "url": "https://enwiki.example.org/wiki/Jane_Doe"
                     *       },
                     *       "ruwiki": {
                     *         "title": "Джейн Доу",
                     *         "badges": [],
                     *         "url": "https://ruwiki.example.org/wiki/Джейн_Доу"
                     *       }
                     *     } */
                    "application/json": {
                        [key: string]: {
                            title: string;
                            badges?: string[];
                            readonly url?: string;
                        };
                    };
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The specified resource has permanently moved to the indicated location */
            308: {
                headers: {
                    /** @description The URL to which the requested resource has been moved */
                    Location: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    patchSitelinks: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "add",
                 *           "path": "/ruwiki/title",
                 *           "value": "Джейн Доу"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Add sitelink to ruwiki"
                 *     } */
                "application/json-patch+json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "add",
                 *           "path": "/ruwiki/title",
                 *           "value": "Джейн Доу"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Add sitelink to ruwiki"
                 *     } */
                "application/json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description A list of Sitelinks by Item id */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "enwiki": {
                     *         "title": "Jane Doe",
                     *         "badges": [],
                     *         "url": "https://enwiki.example.org/wiki/Jane_Doe"
                     *       },
                     *       "ruwiki": {
                     *         "title": "Джейн Доу",
                     *         "badges": [],
                     *         "url": "https://ruwiki.example.org/wiki/Джейн_Доу"
                     *       }
                     *     } */
                    "application/json": {
                        [key: string]: {
                            title: string;
                            badges?: string[];
                            readonly url?: string;
                        };
                    };
                };
            };
            /** @description The provided JSON Patch request is invalid */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The provided JSON Patch cannot be applied */
            409: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Applying the provided JSON Patch results in invalid Sitelinks */
            422: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getSitelink: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
                /**
                 * @description The ID of the required Site
                 * @example enwiki
                 */
                site_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A Sitelink by Item id */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "title": "Jane Doe",
                     *       "badges": [],
                     *       "url": "https://enwiki.example.org/wiki/Jane_Doe"
                     *     } */
                    "application/json": {
                        title: string;
                        badges?: string[];
                        readonly url?: string;
                    };
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The specified resource has permanently moved to the indicated location */
            308: {
                headers: {
                    /** @description The URL to which the requested resource has been moved */
                    Location: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    setSitelink: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
                /**
                 * @description The ID of the required Site
                 * @example enwiki
                 */
                site_id: string;
            };
            cookie?: never;
        };
        /** @description Payload containing a Wikibase Sitelink object and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "sitelink": {
                 *         "title": "Jane Doe",
                 *         "badges": []
                 *       },
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Add enwiki sitelink"
                 *     } */
                "application/json": {
                    sitelink: {
                        title: string;
                        badges?: string[];
                        readonly url?: string;
                    };
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description The updated Sitelink */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "title": "Jane Doe",
                     *       "badges": [],
                     *       "url": "https://enwiki.example.org/wiki/Jane_Doe"
                     *     } */
                    "application/json": {
                        title: string;
                        badges?: string[];
                        readonly url?: string;
                    };
                };
            };
            /** @description The newly added Sitelink */
            201: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "title": "Jane Doe",
                     *       "badges": [],
                     *       "url": "https://enwiki.example.org/wiki/Jane_Doe"
                     *     } */
                    "application/json": {
                        title: string;
                        badges?: string[];
                        readonly url?: string;
                    };
                };
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified Item was redirected */
            409: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The edit request violates data policy */
            422: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    deleteSitelink: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
                /**
                 * @description The ID of the required Site
                 * @example enwiki
                 */
                site_id: string;
            };
            cookie?: never;
        };
        /** @description Edit payload containing edit metadata */
        requestBody?: {
            content: {
                /** @example {
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Example edit using the Wikibase REST API"
                 *     } */
                "application/json": {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description The resource was deleted */
            200: {
                headers: {
                    /** @description Language code of the language in which response is provided */
                    "Content-Language": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example Sitelink deleted */
                    "application/json": string;
                };
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified Item was redirected */
            409: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    addProperty: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        /** @description Payload containing a Wikibase Property and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "property": {
                 *         "data_type": "wikibase-item",
                 *         "labels": {
                 *           "en": "instance of",
                 *           "ru": "это частный случай понятия"
                 *         },
                 *         "descriptions": {
                 *           "en": "the subject is a concrete object (instance) of this class, category, or object group",
                 *           "ru": "данный элемент представляет собой конкретный объект (экземпляр / частный случай) класса, категории"
                 *         },
                 *         "aliases": {
                 *           "en": [
                 *             "is a",
                 *             "is an"
                 *           ],
                 *           "ru": [
                 *             "представляет собой",
                 *             "является"
                 *           ]
                 *         },
                 *         "statements": {
                 *           "P1628": [
                 *             {
                 *               "property": {
                 *                 "id": "P1628"
                 *               },
                 *               "value": {
                 *                 "type": "value",
                 *                 "content": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
                 *               }
                 *             }
                 *           ]
                 *         }
                 *       }
                 *     } */
                "application/json": {
                    property: {
                        readonly id?: string;
                        /** @constant */
                        readonly type?: "property";
                        data_type: string;
                        labels?: {
                            [key: string]: string;
                        };
                        descriptions?: {
                            [key: string]: string;
                        };
                        aliases?: {
                            [key: string]: string[];
                        };
                        statements?: {
                            [key: string]: ({
                                /** @description The globally unique identifier for this Statement */
                                readonly id?: string;
                                /**
                                 * @description The rank of the Statement
                                 * @default normal
                                 * @enum {string}
                                 */
                                rank?: "deprecated" | "normal" | "preferred";
                            } & {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            } & {
                                /** @default [] */
                                qualifiers?: {
                                    property?: {
                                        /** @description The ID of the Property */
                                        id?: string;
                                        /** @description The data type of the Property */
                                        readonly data_type?: string | null;
                                    };
                                    value?: {
                                        /** @description The value, if type == "value", otherwise omitted */
                                        content?: unknown;
                                        /**
                                         * @description The value type
                                         * @enum {string}
                                         */
                                        type?: "value" | "somevalue" | "novalue";
                                    };
                                }[];
                                /** @default [] */
                                references?: {
                                    /** @description Hash of the Reference */
                                    readonly hash?: string;
                                    parts?: {
                                        property?: {
                                            /** @description The ID of the Property */
                                            id?: string;
                                            /** @description The data type of the Property */
                                            readonly data_type?: string | null;
                                        };
                                        value?: {
                                            /** @description The value, if type == "value", otherwise omitted */
                                            content?: unknown;
                                            /**
                                             * @description The value type
                                             * @enum {string}
                                             */
                                            type?: "value" | "somevalue" | "novalue";
                                        };
                                    }[];
                                }[];
                            })[];
                        };
                    };
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description A single Wikibase Property */
            201: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "P694",
                     *       "type": "property",
                     *       "data_type": "wikibase-item",
                     *       "labels": {
                     *         "en": "instance of",
                     *         "ru": "это частный случай понятия"
                     *       },
                     *       "descriptions": {
                     *         "en": "the subject is a concrete object (instance) of this class, category, or object group",
                     *         "ru": "данный элемент представляет собой конкретный объект (экземпляр / частный случай) класса, категории."
                     *       },
                     *       "aliases": {
                     *         "en": [
                     *           "is a",
                     *           "is an"
                     *         ],
                     *         "ru": [
                     *           "представляет собой",
                     *           "является"
                     *         ]
                     *       },
                     *       "statements": {
                     *         "P1628": [
                     *           {
                     *             "id": "P694$B4C349A2-C504-4FC5-B7D5-8B781C719D71",
                     *             "rank": "normal",
                     *             "property": {
                     *               "id": "P1628",
                     *               "data_type": "url"
                     *             },
                     *             "value": {
                     *               "type": "value",
                     *               "content": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
                     *             },
                     *             "qualifiers": [],
                     *             "references": []
                     *           }
                     *         ]
                     *       }
                     *     } */
                    "application/json": {
                        readonly id?: string;
                        /** @constant */
                        readonly type?: "property";
                        data_type: string;
                        labels?: {
                            [key: string]: string;
                        };
                        descriptions?: {
                            [key: string]: string;
                        };
                        aliases?: {
                            [key: string]: string[];
                        };
                        statements?: {
                            [key: string]: ({
                                /** @description The globally unique identifier for this Statement */
                                readonly id?: string;
                                /**
                                 * @description The rank of the Statement
                                 * @default normal
                                 * @enum {string}
                                 */
                                rank: "deprecated" | "normal" | "preferred";
                            } & {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            } & {
                                /** @default [] */
                                qualifiers: {
                                    property?: {
                                        /** @description The ID of the Property */
                                        id?: string;
                                        /** @description The data type of the Property */
                                        readonly data_type?: string | null;
                                    };
                                    value?: {
                                        /** @description The value, if type == "value", otherwise omitted */
                                        content?: unknown;
                                        /**
                                         * @description The value type
                                         * @enum {string}
                                         */
                                        type?: "value" | "somevalue" | "novalue";
                                    };
                                }[];
                                /** @default [] */
                                references: {
                                    /** @description Hash of the Reference */
                                    readonly hash?: string;
                                    parts?: {
                                        property?: {
                                            /** @description The ID of the Property */
                                            id?: string;
                                            /** @description The data type of the Property */
                                            readonly data_type?: string | null;
                                        };
                                        value?: {
                                            /** @description The value, if type == "value", otherwise omitted */
                                            content?: unknown;
                                            /**
                                             * @description The value type
                                             * @enum {string}
                                             */
                                            type?: "value" | "somevalue" | "novalue";
                                        };
                                    }[];
                                }[];
                            })[];
                        };
                    } & {
                        statements: {
                            [key: string]: unknown;
                        };
                    };
                };
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The edit request violates data policy */
            422: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getProperty: {
        parameters: {
            query?: {
                /** @description Comma-separated list of fields to include in each response object. */
                _fields?: ("type" | "data_type" | "labels" | "descriptions" | "aliases" | "statements")[];
            };
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A single Wikibase Property */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "P694",
                     *       "type": "property",
                     *       "data_type": "wikibase-item",
                     *       "labels": {
                     *         "en": "instance of",
                     *         "ru": "это частный случай понятия"
                     *       },
                     *       "descriptions": {
                     *         "en": "the subject is a concrete object (instance) of this class, category, or object group",
                     *         "ru": "данный элемент представляет собой конкретный объект (экземпляр / частный случай) класса, категории."
                     *       },
                     *       "aliases": {
                     *         "en": [
                     *           "is a",
                     *           "is an"
                     *         ],
                     *         "ru": [
                     *           "представляет собой",
                     *           "является"
                     *         ]
                     *       },
                     *       "statements": {
                     *         "P1628": [
                     *           {
                     *             "id": "P694$B4C349A2-C504-4FC5-B7D5-8B781C719D71",
                     *             "rank": "normal",
                     *             "property": {
                     *               "id": "P1628",
                     *               "data_type": "url"
                     *             },
                     *             "value": {
                     *               "type": "value",
                     *               "content": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
                     *             },
                     *             "qualifiers": [],
                     *             "references": []
                     *           }
                     *         ]
                     *       }
                     *     } */
                    "application/json": {
                        readonly id?: string;
                        /** @constant */
                        readonly type?: "property";
                        data_type: string;
                        labels?: {
                            [key: string]: string;
                        };
                        descriptions?: {
                            [key: string]: string;
                        };
                        aliases?: {
                            [key: string]: string[];
                        };
                        statements?: {
                            [key: string]: ({
                                /** @description The globally unique identifier for this Statement */
                                readonly id?: string;
                                /**
                                 * @description The rank of the Statement
                                 * @default normal
                                 * @enum {string}
                                 */
                                rank: "deprecated" | "normal" | "preferred";
                            } & {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            } & {
                                /** @default [] */
                                qualifiers: {
                                    property?: {
                                        /** @description The ID of the Property */
                                        id?: string;
                                        /** @description The data type of the Property */
                                        readonly data_type?: string | null;
                                    };
                                    value?: {
                                        /** @description The value, if type == "value", otherwise omitted */
                                        content?: unknown;
                                        /**
                                         * @description The value type
                                         * @enum {string}
                                         */
                                        type?: "value" | "somevalue" | "novalue";
                                    };
                                }[];
                                /** @default [] */
                                references: {
                                    /** @description Hash of the Reference */
                                    readonly hash?: string;
                                    parts?: {
                                        property?: {
                                            /** @description The ID of the Property */
                                            id?: string;
                                            /** @description The data type of the Property */
                                            readonly data_type?: string | null;
                                        };
                                        value?: {
                                            /** @description The value, if type == "value", otherwise omitted */
                                            content?: unknown;
                                            /**
                                             * @description The value type
                                             * @enum {string}
                                             */
                                            type?: "value" | "somevalue" | "novalue";
                                        };
                                    }[];
                                }[];
                            })[];
                        };
                    } & {
                        statements: {
                            [key: string]: unknown;
                        };
                    };
                };
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    patchProperty: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "add",
                 *           "path": "/aliases/en/-",
                 *           "value": "is an"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "add 'is an' as an English alias"
                 *     } */
                "application/json-patch+json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "add",
                 *           "path": "/aliases/en/-",
                 *           "value": "is an"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "add 'is an' as an English alias"
                 *     } */
                "application/json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description A single Wikibase Property */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "P694",
                     *       "type": "property",
                     *       "data_type": "wikibase-item",
                     *       "labels": {
                     *         "en": "instance of",
                     *         "ru": "это частный случай понятия"
                     *       },
                     *       "descriptions": {
                     *         "en": "the subject is a concrete object (instance) of this class, category, or object group",
                     *         "ru": "данный элемент представляет собой конкретный объект (экземпляр / частный случай) класса, категории."
                     *       },
                     *       "aliases": {
                     *         "en": [
                     *           "is a",
                     *           "is an"
                     *         ],
                     *         "ru": [
                     *           "представляет собой",
                     *           "является"
                     *         ]
                     *       },
                     *       "statements": {
                     *         "P1628": [
                     *           {
                     *             "id": "P694$B4C349A2-C504-4FC5-B7D5-8B781C719D71",
                     *             "rank": "normal",
                     *             "property": {
                     *               "id": "P1628",
                     *               "data_type": "url"
                     *             },
                     *             "value": {
                     *               "type": "value",
                     *               "content": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
                     *             },
                     *             "qualifiers": [],
                     *             "references": []
                     *           }
                     *         ]
                     *       }
                     *     } */
                    "application/json": {
                        readonly id?: string;
                        /** @constant */
                        readonly type?: "property";
                        data_type: string;
                        labels?: {
                            [key: string]: string;
                        };
                        descriptions?: {
                            [key: string]: string;
                        };
                        aliases?: {
                            [key: string]: string[];
                        };
                        statements?: {
                            [key: string]: ({
                                /** @description The globally unique identifier for this Statement */
                                readonly id?: string;
                                /**
                                 * @description The rank of the Statement
                                 * @default normal
                                 * @enum {string}
                                 */
                                rank: "deprecated" | "normal" | "preferred";
                            } & {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            } & {
                                /** @default [] */
                                qualifiers: {
                                    property?: {
                                        /** @description The ID of the Property */
                                        id?: string;
                                        /** @description The data type of the Property */
                                        readonly data_type?: string | null;
                                    };
                                    value?: {
                                        /** @description The value, if type == "value", otherwise omitted */
                                        content?: unknown;
                                        /**
                                         * @description The value type
                                         * @enum {string}
                                         */
                                        type?: "value" | "somevalue" | "novalue";
                                    };
                                }[];
                                /** @default [] */
                                references: {
                                    /** @description Hash of the Reference */
                                    readonly hash?: string;
                                    parts?: {
                                        property?: {
                                            /** @description The ID of the Property */
                                            id?: string;
                                            /** @description The data type of the Property */
                                            readonly data_type?: string | null;
                                        };
                                        value?: {
                                            /** @description The value, if type == "value", otherwise omitted */
                                            content?: unknown;
                                            /**
                                             * @description The value type
                                             * @enum {string}
                                             */
                                            type?: "value" | "somevalue" | "novalue";
                                        };
                                    }[];
                                }[];
                            })[];
                        };
                    } & {
                        statements: {
                            [key: string]: unknown;
                        };
                    };
                };
            };
            /** @description The provided JSON Patch request is invalid */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The provided JSON Patch cannot be applied */
            409: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Applying the provided JSON Patch results in an invalid Property */
            422: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getItemDescriptions: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Item's descriptions by language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "en": "famous person",
                     *       "ru": "известная личность"
                     *     } */
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The specified resource has permanently moved to the indicated location */
            308: {
                headers: {
                    /** @description The URL to which the requested resource has been moved */
                    Location: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    patchItemDescriptions: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
            };
            cookie?: never;
        };
        /** @description Payload containing a JSON Patch document to be applied to an Item's descriptions and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "replace",
                 *           "path": "/en",
                 *           "value": "famous person"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "update English description"
                 *     } */
                "application/json-patch+json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "replace",
                 *           "path": "/en",
                 *           "value": "famous person"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "update English description"
                 *     } */
                "application/json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description Item's descriptions by language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "en": "famous person",
                     *       "ru": "известная личность"
                     *     } */
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description The provided JSON Patch request is invalid */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The provided JSON Patch cannot be applied */
            409: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Applying the provided JSON Patch results in invalid descriptions */
            422: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getPropertyDescriptions: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Property's descriptions by language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "en": "the subject is a concrete object (instance) of this class, category, or object group",
                     *       "ru": "данный элемент представляет собой конкретный объект (экземпляр / частный случай) класса, категории"
                     *     } */
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    patchPropertyDescriptions: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
            };
            cookie?: never;
        };
        /** @description Payload containing a JSON Patch document to be applied to a Property's descriptions and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "replace",
                 *           "path": "/en",
                 *           "value": "the subject is a concrete object (instance) of this class, category, or object group"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "update English description"
                 *     } */
                "application/json-patch+json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "replace",
                 *           "path": "/en",
                 *           "value": "the subject is a concrete object (instance) of this class, category, or object group"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "update English description"
                 *     } */
                "application/json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description Property's descriptions by language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "en": "the subject is a concrete object (instance) of this class, category, or object group",
                     *       "ru": "данный элемент представляет собой конкретный объект (экземпляр / частный случай) класса, категории"
                     *     } */
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description The provided JSON Patch request is invalid */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The provided JSON Patch cannot be applied */
            409: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Applying the provided JSON Patch results in invalid descriptions */
            422: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getItemDescription: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
                /**
                 * @description The requested resource language
                 * @example en
                 */
                language_code: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Item's description in a specific language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example famous person */
                    "application/json": string;
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The specified resource has permanently moved to the indicated location */
            308: {
                headers: {
                    /** @description The URL to which the requested resource has been moved */
                    Location: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    replaceItemDescription: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
                /**
                 * @description The requested resource language
                 * @example en
                 */
                language_code: string;
            };
            cookie?: never;
        };
        /** @description Payload containing Item description in the specified language and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "description": "famous person",
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "set English description"
                 *     } */
                "application/json": {
                    description: string;
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description The updated description */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example famous person */
                    "application/json": string;
                };
            };
            /** @description The newly added description */
            201: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example famous person */
                    "application/json": string;
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified Item was redirected */
            409: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The edit request violates data policy */
            422: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    deleteItemDescription: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
                /**
                 * @description The requested resource language
                 * @example en
                 */
                language_code: string;
            };
            cookie?: never;
        };
        /** @description Edit payload containing edit metadata */
        requestBody?: {
            content: {
                /** @example {
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Example edit using the Wikibase REST API"
                 *     } */
                "application/json": {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description The description was deleted */
            200: {
                headers: {
                    /** @description Language code of the language in which response is provided */
                    "Content-Language": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example Description deleted */
                    "application/json": string;
                };
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified Item was redirected */
            409: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getItemDescriptionWithFallback: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
                /**
                 * @description The requested resource language
                 * @example en
                 */
                language_code: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Item's description in a specific language. If a description only exists in a fallback language, the API returns a 307 status code and provides its location. */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example famous person */
                    "application/json": string;
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description A description in a fallback language exists at the indicated location */
            307: {
                headers: {
                    /** @description The URL to which the requested resource has been moved */
                    Location: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The specified resource has permanently moved to the indicated location */
            308: {
                headers: {
                    /** @description The URL to which the requested resource has been moved */
                    Location: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getPropertyDescription: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
                /**
                 * @description The requested resource language
                 * @example en
                 */
                language_code: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Property's description in a specific language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example the subject is a concrete object (instance) of this class, category, or object group */
                    "application/json": string;
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    setPropertyDescription: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
                /**
                 * @description The requested resource language
                 * @example en
                 */
                language_code: string;
            };
            cookie?: never;
        };
        /** @description Payload containing Property description in the specified language and edit metadata */
        requestBody?: {
            content: {
                /** @example {
                 *       "description": "the subject is a concrete object (instance) of this class, category, or object group",
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "set English description"
                 *     } */
                "application/json": {
                    description: string;
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description The updated description */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example the subject is a concrete object (instance) of this class, category, or object group */
                    "application/json": string;
                };
            };
            /** @description The newly added description */
            201: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example the subject is a concrete object (instance) of this class, category, or object group */
                    "application/json": string;
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The edit request violates data policy */
            422: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    deletePropertyDescription: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
                /**
                 * @description The requested resource language
                 * @example en
                 */
                language_code: string;
            };
            cookie?: never;
        };
        /** @description Edit payload containing edit metadata */
        requestBody?: {
            content: {
                /** @example {
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Example edit using the Wikibase REST API"
                 *     } */
                "application/json": {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description The description was deleted */
            200: {
                headers: {
                    /** @description Language code of the language in which response is provided */
                    "Content-Language": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example Description deleted */
                    "application/json": string;
                };
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getPropertyDescriptionWithFallback: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
                /**
                 * @description The requested resource language
                 * @example en
                 */
                language_code: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Property's description in a specific language. If a description only exists in a fallback language, the API returns a 307 status code and provides its location. */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example the subject is a concrete object (instance) of this class, category, or object group */
                    "application/json": string;
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description A description in a fallback language exists at the indicated location */
            307: {
                headers: {
                    /** @description The URL to which the requested resource has been moved */
                    Location: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getItemStatements: {
        parameters: {
            query?: {
                /**
                 * @description Single Property ID to filter Statements by.
                 * @example P1628
                 */
                property?: string;
            };
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The Statements of an Item */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "P694": [
                     *         {
                     *           "id": "Q24$BB728546-A400-4116-A772-16D54B62AC2B",
                     *           "rank": "normal",
                     *           "property": {
                     *             "id": "P694",
                     *             "data_type": "wikibase-item"
                     *           },
                     *           "value": {
                     *             "type": "value",
                     *             "content": "Q626683"
                     *           },
                     *           "qualifiers": [],
                     *           "references": []
                     *         }
                     *       ],
                     *       "P476": [
                     *         {
                     *           "id": "Q24$F3B2F956-B6AB-4984-8D89-BEE0FFFA3385",
                     *           "rank": "normal",
                     *           "property": {
                     *             "id": "P476",
                     *             "data_type": "time"
                     *           },
                     *           "value": {
                     *             "type": "value",
                     *             "content": {
                     *               "time": "+1986-01-27T00:00:00Z",
                     *               "precision": 11,
                     *               "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                     *             }
                     *           },
                     *           "qualifiers": [],
                     *           "references": []
                     *         }
                     *       ],
                     *       "P17": [
                     *         {
                     *           "id": "Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA",
                     *           "rank": "normal",
                     *           "property": {
                     *             "id": "P17",
                     *             "data_type": "string"
                     *           },
                     *           "value": {
                     *             "type": "value",
                     *             "content": "Senior Team Supervisor"
                     *           },
                     *           "qualifiers": [
                     *             {
                     *               "property": {
                     *                 "id": "P706",
                     *                 "data_type": "time"
                     *               },
                     *               "value": {
                     *                 "type": "value",
                     *                 "content": {
                     *                   "time": "+2023-06-13T00:00:00Z",
                     *                   "precision": 11,
                     *                   "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                     *                 }
                     *               }
                     *             }
                     *           ],
                     *           "references": [
                     *             {
                     *               "hash": "7ccd777f870b71a4c5056c7fd2a83a22cc39be6d",
                     *               "parts": [
                     *                 {
                     *                   "property": {
                     *                     "id": "P709",
                     *                     "data_type": "url"
                     *                   },
                     *                   "value": {
                     *                     "type": "value",
                     *                     "content": "https://news.example.org"
                     *                   }
                     *                 }
                     *               ]
                     *             }
                     *           ]
                     *         }
                     *       ]
                     *     } */
                    "application/json": {
                        [key: string]: (({
                            /** @description The globally unique identifier for this Statement */
                            readonly id?: string;
                            /**
                             * @description The rank of the Statement
                             * @default normal
                             * @enum {string}
                             */
                            rank: "deprecated" | "normal" | "preferred";
                        } & {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        } & {
                            /** @default [] */
                            qualifiers: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                            /** @default [] */
                            references: {
                                /** @description Hash of the Reference */
                                readonly hash?: string;
                                parts?: {
                                    property?: {
                                        /** @description The ID of the Property */
                                        id?: string;
                                        /** @description The data type of the Property */
                                        readonly data_type?: string | null;
                                    };
                                    value?: {
                                        /** @description The value, if type == "value", otherwise omitted */
                                        content?: unknown;
                                        /**
                                         * @description The value type
                                         * @enum {string}
                                         */
                                        type?: "value" | "somevalue" | "novalue";
                                    };
                                }[];
                            }[];
                        }) & ({
                            property: unknown;
                            value: unknown;
                        } & {
                            qualifiers: unknown;
                            references: unknown;
                        }))[];
                    };
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The specified resource has permanently moved to the indicated location */
            308: {
                headers: {
                    /** @description The URL to which the requested resource has been moved */
                    Location: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    addItemStatement: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
            };
            cookie?: never;
        };
        /** @description Payload containing a Wikibase Statement object and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "statement": {
                 *         "property": {
                 *           "id": "P17"
                 *         },
                 *         "value": {
                 *           "type": "value",
                 *           "content": "Senior Team Supervisor"
                 *         },
                 *         "qualifiers": [
                 *           {
                 *             "property": {
                 *               "id": "P706"
                 *             },
                 *             "value": {
                 *               "type": "value",
                 *               "content": {
                 *                 "time": "+2023-06-13T00:00:00Z",
                 *                 "precision": 11,
                 *                 "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                 *               }
                 *             }
                 *           }
                 *         ],
                 *         "references": [
                 *           {
                 *             "parts": [
                 *               {
                 *                 "property": {
                 *                   "id": "P709"
                 *                 },
                 *                 "value": {
                 *                   "type": "value",
                 *                   "content": "https://news.example.org"
                 *                 }
                 *               }
                 *             ]
                 *           }
                 *         ]
                 *       },
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Example edit using the Wikibase REST API"
                 *     } */
                "application/json": {
                    statement: ({
                        /** @description The globally unique identifier for this Statement */
                        readonly id?: string;
                        /**
                         * @description The rank of the Statement
                         * @default normal
                         * @enum {string}
                         */
                        rank?: "deprecated" | "normal" | "preferred";
                    } & {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    } & {
                        /** @default [] */
                        qualifiers?: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                        /** @default [] */
                        references?: {
                            /** @description Hash of the Reference */
                            readonly hash?: string;
                            parts?: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                        }[];
                    }) & ({
                        property: unknown;
                        value: unknown;
                    } & {
                        qualifiers?: unknown;
                        references?: unknown;
                    });
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description The newly created Statement. Please note that the value of the `ETag` header field refers to the Item's revision ID. */
            201: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description The URI of the newly created Statement */
                    Location: string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA",
                     *       "rank": "normal",
                     *       "property": {
                     *         "id": "P17",
                     *         "data_type": "string"
                     *       },
                     *       "value": {
                     *         "type": "value",
                     *         "content": "Senior Team Supervisor"
                     *       },
                     *       "qualifiers": [
                     *         {
                     *           "property": {
                     *             "id": "P706",
                     *             "data_type": "time"
                     *           },
                     *           "value": {
                     *             "type": "value",
                     *             "content": {
                     *               "time": "+2023-06-13T00:00:00Z",
                     *               "precision": 11,
                     *               "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                     *             }
                     *           }
                     *         }
                     *       ],
                     *       "references": [
                     *         {
                     *           "hash": "7ccd777f870b71a4c5056c7fd2a83a22cc39be6d",
                     *           "parts": [
                     *             {
                     *               "property": {
                     *                 "id": "P709",
                     *                 "data_type": "url"
                     *               },
                     *               "value": {
                     *                 "type": "value",
                     *                 "content": "https://news.example.org"
                     *               }
                     *             }
                     *           ]
                     *         }
                     *       ]
                     *     } */
                    "application/json": ({
                        /** @description The globally unique identifier for this Statement */
                        readonly id?: string;
                        /**
                         * @description The rank of the Statement
                         * @default normal
                         * @enum {string}
                         */
                        rank: "deprecated" | "normal" | "preferred";
                    } & {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    } & {
                        /** @default [] */
                        qualifiers: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                        /** @default [] */
                        references: {
                            /** @description Hash of the Reference */
                            readonly hash?: string;
                            parts?: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                        }[];
                    }) & ({
                        property: unknown;
                        value: unknown;
                    } & {
                        qualifiers: unknown;
                        references: unknown;
                    });
                };
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified Item was redirected */
            409: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getItemStatement: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
                /**
                 * @description The ID of a Statement on an Item
                 * @example Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA
                 */
                statement_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The requested Statement. Please note that the value of the `ETag` header field refers to the Item's revision ID. */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA",
                     *       "rank": "normal",
                     *       "property": {
                     *         "id": "P17",
                     *         "data_type": "string"
                     *       },
                     *       "value": {
                     *         "type": "value",
                     *         "content": "Senior Team Supervisor"
                     *       },
                     *       "qualifiers": [
                     *         {
                     *           "property": {
                     *             "id": "P706",
                     *             "data_type": "time"
                     *           },
                     *           "value": {
                     *             "type": "value",
                     *             "content": {
                     *               "time": "+2023-06-13T00:00:00Z",
                     *               "precision": 11,
                     *               "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                     *             }
                     *           }
                     *         }
                     *       ],
                     *       "references": [
                     *         {
                     *           "hash": "7ccd777f870b71a4c5056c7fd2a83a22cc39be6d",
                     *           "parts": [
                     *             {
                     *               "property": {
                     *                 "id": "P709",
                     *                 "data_type": "url"
                     *               },
                     *               "value": {
                     *                 "type": "value",
                     *                 "content": "https://news.example.org"
                     *               }
                     *             }
                     *           ]
                     *         }
                     *       ]
                     *     } */
                    "application/json": ({
                        /** @description The globally unique identifier for this Statement */
                        readonly id?: string;
                        /**
                         * @description The rank of the Statement
                         * @default normal
                         * @enum {string}
                         */
                        rank: "deprecated" | "normal" | "preferred";
                    } & {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    } & {
                        /** @default [] */
                        qualifiers: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                        /** @default [] */
                        references: {
                            /** @description Hash of the Reference */
                            readonly hash?: string;
                            parts?: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                        }[];
                    }) & ({
                        property: unknown;
                        value: unknown;
                    } & {
                        qualifiers: unknown;
                        references: unknown;
                    });
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    replaceItemStatement: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
                /**
                 * @description The ID of a Statement on an Item
                 * @example Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA
                 */
                statement_id: string;
            };
            cookie?: never;
        };
        /** @description Payload containing a Wikibase Statement object and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "statement": {
                 *         "property": {
                 *           "id": "P17"
                 *         },
                 *         "value": {
                 *           "type": "value",
                 *           "content": "Senior Team Supervisor"
                 *         },
                 *         "qualifiers": [
                 *           {
                 *             "property": {
                 *               "id": "P706"
                 *             },
                 *             "value": {
                 *               "type": "value",
                 *               "content": {
                 *                 "time": "+2023-06-13T00:00:00Z",
                 *                 "precision": 11,
                 *                 "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                 *               }
                 *             }
                 *           }
                 *         ],
                 *         "references": [
                 *           {
                 *             "parts": [
                 *               {
                 *                 "property": {
                 *                   "id": "P709"
                 *                 },
                 *                 "value": {
                 *                   "type": "value",
                 *                   "content": "https://news.example.org"
                 *                 }
                 *               }
                 *             ]
                 *           }
                 *         ]
                 *       },
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Example edit using the Wikibase REST API"
                 *     } */
                "application/json": {
                    statement: ({
                        /** @description The globally unique identifier for this Statement */
                        readonly id?: string;
                        /**
                         * @description The rank of the Statement
                         * @default normal
                         * @enum {string}
                         */
                        rank?: "deprecated" | "normal" | "preferred";
                    } & {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    } & {
                        /** @default [] */
                        qualifiers?: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                        /** @default [] */
                        references?: {
                            /** @description Hash of the Reference */
                            readonly hash?: string;
                            parts?: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                        }[];
                    }) & ({
                        property: unknown;
                        value: unknown;
                    } & {
                        qualifiers?: unknown;
                        references?: unknown;
                    });
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description A Wikibase Statement. Please note that the value of the `ETag` header field refers to the Item's revision ID. */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA",
                     *       "rank": "normal",
                     *       "property": {
                     *         "id": "P17",
                     *         "data_type": "string"
                     *       },
                     *       "value": {
                     *         "type": "value",
                     *         "content": "Senior Team Supervisor"
                     *       },
                     *       "qualifiers": [
                     *         {
                     *           "property": {
                     *             "id": "P706",
                     *             "data_type": "time"
                     *           },
                     *           "value": {
                     *             "type": "value",
                     *             "content": {
                     *               "time": "+2023-06-13T00:00:00Z",
                     *               "precision": 11,
                     *               "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                     *             }
                     *           }
                     *         }
                     *       ],
                     *       "references": [
                     *         {
                     *           "hash": "7ccd777f870b71a4c5056c7fd2a83a22cc39be6d",
                     *           "parts": [
                     *             {
                     *               "property": {
                     *                 "id": "P709",
                     *                 "data_type": "url"
                     *               },
                     *               "value": {
                     *                 "type": "value",
                     *                 "content": "https://news.example.org"
                     *               }
                     *             }
                     *           ]
                     *         }
                     *       ]
                     *     } */
                    "application/json": ({
                        /** @description The globally unique identifier for this Statement */
                        readonly id?: string;
                        /**
                         * @description The rank of the Statement
                         * @default normal
                         * @enum {string}
                         */
                        rank: "deprecated" | "normal" | "preferred";
                    } & {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    } & {
                        /** @default [] */
                        qualifiers: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                        /** @default [] */
                        references: {
                            /** @description Hash of the Reference */
                            readonly hash?: string;
                            parts?: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                        }[];
                    }) & ({
                        property: unknown;
                        value: unknown;
                    } & {
                        qualifiers: unknown;
                        references: unknown;
                    });
                };
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    deleteItemStatement: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
                /**
                 * @description The ID of a Statement on an Item
                 * @example Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA
                 */
                statement_id: string;
            };
            cookie?: never;
        };
        /** @description Edit payload containing edit metadata */
        requestBody?: {
            content: {
                /** @example {
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Example edit using the Wikibase REST API"
                 *     } */
                "application/json": {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description The requested Statement was deleted */
            200: {
                headers: {
                    /** @description Language code of the language in which response is provided */
                    "Content-Language": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example Statement deleted */
                    "application/json": string;
                };
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    patchItemStatement: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
                /**
                 * @description The ID of a Statement on an Item
                 * @example Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA
                 */
                statement_id: string;
            };
            cookie?: never;
        };
        /** @description Payload containing a JSON Patch document to be applied to the Statement and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "add",
                 *           "path": "/references/-",
                 *           "value": {
                 *             "parts": [
                 *               {
                 *                 "property": {
                 *                   "id": "P709"
                 *                 },
                 *                 "value": {
                 *                   "type": "value",
                 *                   "content": "https://news.example.org"
                 *                 }
                 *               }
                 *             ]
                 *           }
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Add reference to Statement"
                 *     } */
                "application/json-patch+json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "add",
                 *           "path": "/references/-",
                 *           "value": {
                 *             "parts": [
                 *               {
                 *                 "property": {
                 *                   "id": "P709"
                 *                 },
                 *                 "value": {
                 *                   "type": "value",
                 *                   "content": "https://news.example.org"
                 *                 }
                 *               }
                 *             ]
                 *           }
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Add reference to Statement"
                 *     } */
                "application/json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description A Wikibase Statement. Please note that the value of the `ETag` header field refers to the Item's revision ID. */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA",
                     *       "rank": "normal",
                     *       "property": {
                     *         "id": "P17",
                     *         "data_type": "string"
                     *       },
                     *       "value": {
                     *         "type": "value",
                     *         "content": "Senior Team Supervisor"
                     *       },
                     *       "qualifiers": [
                     *         {
                     *           "property": {
                     *             "id": "P706",
                     *             "data_type": "time"
                     *           },
                     *           "value": {
                     *             "type": "value",
                     *             "content": {
                     *               "time": "+2023-06-13T00:00:00Z",
                     *               "precision": 11,
                     *               "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                     *             }
                     *           }
                     *         }
                     *       ],
                     *       "references": [
                     *         {
                     *           "hash": "7ccd777f870b71a4c5056c7fd2a83a22cc39be6d",
                     *           "parts": [
                     *             {
                     *               "property": {
                     *                 "id": "P709",
                     *                 "data_type": "url"
                     *               },
                     *               "value": {
                     *                 "type": "value",
                     *                 "content": "https://news.example.org"
                     *               }
                     *             }
                     *           ]
                     *         }
                     *       ]
                     *     } */
                    "application/json": ({
                        /** @description The globally unique identifier for this Statement */
                        readonly id?: string;
                        /**
                         * @description The rank of the Statement
                         * @default normal
                         * @enum {string}
                         */
                        rank: "deprecated" | "normal" | "preferred";
                    } & {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    } & {
                        /** @default [] */
                        qualifiers: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                        /** @default [] */
                        references: {
                            /** @description Hash of the Reference */
                            readonly hash?: string;
                            parts?: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                        }[];
                    }) & ({
                        property: unknown;
                        value: unknown;
                    } & {
                        qualifiers: unknown;
                        references: unknown;
                    });
                };
            };
            /** @description The provided JSON Patch is invalid */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The provided JSON Patch cannot be applied */
            409: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Applying the provided JSON Patch results in an invalid Statement */
            422: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getItemLabels: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Item's labels by language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "en": "Jane Doe",
                     *       "ru": "Джейн Доу"
                     *     } */
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The specified resource has permanently moved to the indicated location */
            308: {
                headers: {
                    /** @description The URL to which the requested resource has been moved */
                    Location: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    patchItemLabels: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
            };
            cookie?: never;
        };
        /** @description Payload containing a JSON Patch document to be applied to Labels and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "replace",
                 *           "path": "/en",
                 *           "value": "Jane Doe"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "replace English label"
                 *     } */
                "application/json-patch+json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "replace",
                 *           "path": "/en",
                 *           "value": "Jane Doe"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "replace English label"
                 *     } */
                "application/json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description Item's labels by language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "en": "Jane Doe",
                     *       "ru": "Джейн Доу"
                     *     } */
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description The provided JSON Patch request is invalid */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The provided JSON Patch cannot be applied */
            409: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Applying the provided JSON Patch results in invalid Labels */
            422: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getPropertyLabels: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Property's labels by language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "en": "instance of",
                     *       "ru": "это частный случай понятия"
                     *     } */
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    patchPropertyLabels: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
            };
            cookie?: never;
        };
        /** @description Payload containing a JSON Patch document to be applied to Labels and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "replace",
                 *           "path": "/en",
                 *           "value": "instance of"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "replace English label"
                 *     } */
                "application/json-patch+json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "replace",
                 *           "path": "/en",
                 *           "value": "instance of"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "replace English label"
                 *     } */
                "application/json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description Property's labels by language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "en": "instance of",
                     *       "ru": "это частный случай понятия"
                     *     } */
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description The provided JSON Patch request is invalid */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The provided JSON Patch cannot be applied */
            409: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Applying the provided JSON Patch results in invalid Labels */
            422: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getItemLabel: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
                /**
                 * @description The requested resource language
                 * @example en
                 */
                language_code: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A label in a specific language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example Jane Doe */
                    "application/json": string;
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The specified resource has permanently moved to the indicated location */
            308: {
                headers: {
                    /** @description The URL to which the requested resource has been moved */
                    Location: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    replaceItemLabel: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
                /**
                 * @description The requested resource language
                 * @example en
                 */
                language_code: string;
            };
            cookie?: never;
        };
        /** @description Payload containing an Item label in the specified language and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "label": "Jane Doe",
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Update the English label"
                 *     } */
                "application/json": {
                    label: string;
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description The updated Label in a specific language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example Jane Doe */
                    "application/json": string;
                };
            };
            /** @description The newly added Label in a specific language */
            201: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example Jane Doe */
                    "application/json": string;
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified Item was redirected */
            409: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The edit request violates data policy */
            422: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    deleteItemLabel: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
                /**
                 * @description The requested resource language
                 * @example en
                 */
                language_code: string;
            };
            cookie?: never;
        };
        /** @description Edit payload containing edit metadata */
        requestBody?: {
            content: {
                /** @example {
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Example edit using the Wikibase REST API"
                 *     } */
                "application/json": {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description The resource was deleted */
            200: {
                headers: {
                    /** @description Language code of the language in which response is provided */
                    "Content-Language": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example Label deleted */
                    "application/json": string;
                };
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified Item was redirected */
            409: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getItemLabelWithFallback: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
                /**
                 * @description The requested resource language
                 * @example en
                 */
                language_code: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Item's label in a specific language. If a label only exists in a fallback language, the API returns a 307 status code and provides its location. */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example Jane Doe */
                    "application/json": string;
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description A label in a fallback language exists at the indicated location */
            307: {
                headers: {
                    /** @description The URL to which the requested resource has been moved */
                    Location: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The specified resource has permanently moved to the indicated location */
            308: {
                headers: {
                    /** @description The URL to which the requested resource has been moved */
                    Location: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getPropertyLabel: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
                /**
                 * @description The requested resource language
                 * @example en
                 */
                language_code: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A label in a specific language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example instance of */
                    "application/json": string;
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    replacePropertyLabel: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
                /**
                 * @description The requested resource language
                 * @example en
                 */
                language_code: string;
            };
            cookie?: never;
        };
        /** @description Payload containing a Property label in the specified language and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "label": "instance of",
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Update the English label"
                 *     } */
                "application/json": {
                    label: string;
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description The updated Label in a specific language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example instance of */
                    "application/json": string;
                };
            };
            /** @description The newly added Label in a specific language */
            201: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example instance of */
                    "application/json": string;
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The edit request violates data policy */
            422: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    deletePropertyLabel: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
                /**
                 * @description The requested resource language
                 * @example en
                 */
                language_code: string;
            };
            cookie?: never;
        };
        /** @description Edit payload containing edit metadata */
        requestBody?: {
            content: {
                /** @example {
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Example edit using the Wikibase REST API"
                 *     } */
                "application/json": {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description The resource was deleted */
            200: {
                headers: {
                    /** @description Language code of the language in which response is provided */
                    "Content-Language": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example Label deleted */
                    "application/json": string;
                };
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getPropertyLabelWithFallback: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
                /**
                 * @description The requested resource language
                 * @example en
                 */
                language_code: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Property's label in a specific language. If a label only exists in a fallback language, the API returns a 307 status code and provides its location. */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example instance of */
                    "application/json": string;
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description A label in a fallback language exists at the indicated location */
            307: {
                headers: {
                    /** @description The URL to which the requested resource has been moved */
                    Location: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getItemAliases: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Item's aliases by language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "en": [
                     *         "Jane M. Doe",
                     *         "JD"
                     *       ],
                     *       "ru": [
                     *         "Джейн М. Доу"
                     *       ]
                     *     } */
                    "application/json": {
                        [key: string]: string[];
                    };
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The specified resource has permanently moved to the indicated location */
            308: {
                headers: {
                    /** @description The URL to which the requested resource has been moved */
                    Location: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    patchItemAliases: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
            };
            cookie?: never;
        };
        /** @description Payload containing a JSON Patch document to be applied to an Item's aliases and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "add",
                 *           "path": "/en/-",
                 *           "value": "JD"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Add English alias"
                 *     } */
                "application/json-patch+json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "add",
                 *           "path": "/en/-",
                 *           "value": "JD"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Add English alias"
                 *     } */
                "application/json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description Item's aliases by language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "en": [
                     *         "Jane M. Doe",
                     *         "JD"
                     *       ],
                     *       "ru": [
                     *         "Джейн М. Доу"
                     *       ]
                     *     } */
                    "application/json": {
                        [key: string]: string[];
                    };
                };
            };
            /** @description The provided JSON Patch request is invalid */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The provided JSON Patch cannot be applied */
            409: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Applying the provided JSON Patch results in invalid Aliases */
            422: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getPropertyAliases: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Property's aliases by language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "en": [
                     *         "is a",
                     *         "is an"
                     *       ],
                     *       "ru": [
                     *         "представляет собой",
                     *         "является"
                     *       ]
                     *     } */
                    "application/json": {
                        [key: string]: string[];
                    };
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    patchPropertyAliases: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
            };
            cookie?: never;
        };
        /** @description Payload containing a JSON Patch document to be applied to a Property's aliases and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "add",
                 *           "path": "/en/-",
                 *           "value": "is an"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Add English alias"
                 *     } */
                "application/json-patch+json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "add",
                 *           "path": "/en/-",
                 *           "value": "is an"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Add English alias"
                 *     } */
                "application/json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description Property's aliases by language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "en": [
                     *         "is a",
                     *         "is an"
                     *       ],
                     *       "ru": [
                     *         "представляет собой",
                     *         "является"
                     *       ]
                     *     } */
                    "application/json": {
                        [key: string]: string[];
                    };
                };
            };
            /** @description The provided JSON Patch request is invalid */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The provided JSON Patch cannot be applied */
            409: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Applying the provided JSON Patch results in invalid Aliases */
            422: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getItemAliasesInLanguage: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
                /**
                 * @description The requested resource language
                 * @example en
                 */
                language_code: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Item's aliases in a specific language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example [
                     *       "Jane M. Doe",
                     *       "JD"
                     *     ] */
                    "application/json": string[];
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The specified resource has permanently moved to the indicated location */
            308: {
                headers: {
                    /** @description The URL to which the requested resource has been moved */
                    Location: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    addItemAliasesInLanguage: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Item
                 * @example Q24
                 */
                item_id: string;
                /**
                 * @description The requested resource language
                 * @example en
                 */
                language_code: string;
            };
            cookie?: never;
        };
        /** @description Payload containing a list of Item aliases in the specified language and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "aliases": [
                 *         "JD"
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Add English alias"
                 *     } */
                "application/json": {
                    aliases: string[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description The updated list of aliases in a specific language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example [
                     *       "Jane M. Doe",
                     *       "JD"
                     *     ] */
                    "application/json": string[];
                };
            };
            /** @description The newly created list of aliases in a specific language */
            201: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example [
                     *       "Jane M. Doe",
                     *       "JD"
                     *     ] */
                    "application/json": string[];
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified Item was redirected */
            409: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getPropertyAliasesInLanguage: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
                /**
                 * @description The requested resource language
                 * @example en
                 */
                language_code: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Property's aliases in a specific language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example [
                     *       "is a",
                     *       "is an"
                     *     ] */
                    "application/json": string[];
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    addPropertyAliasesInLanguage: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
                /**
                 * @description The requested resource language
                 * @example en
                 */
                language_code: string;
            };
            cookie?: never;
        };
        /** @description Payload containing a list of Wikibase aliases in the specified language and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "aliases": [
                 *         "is an"
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Add English alias"
                 *     } */
                "application/json": {
                    aliases: string[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description The updated list of aliases in a specific language */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example [
                     *       "is a",
                     *       "is an"
                     *     ] */
                    "application/json": string[];
                };
            };
            /** @description The newly created list of aliases in a specific language */
            201: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example [
                     *       "is a",
                     *       "is an"
                     *     ] */
                    "application/json": string[];
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getPropertyStatements: {
        parameters: {
            query?: {
                /**
                 * @description Single Property ID to filter Statements by.
                 * @example P1628
                 */
                property?: string;
            };
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The Statements of a Property */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "P1628": [
                     *         {
                     *           "id": "P694$B4C349A2-C504-4FC5-B7D5-8B781C719D71",
                     *           "rank": "normal",
                     *           "property": {
                     *             "id": "P1628",
                     *             "data_type": "url"
                     *           },
                     *           "value": {
                     *             "type": "value",
                     *             "content": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
                     *           },
                     *           "qualifiers": [],
                     *           "references": []
                     *         }
                     *       ]
                     *     } */
                    "application/json": {
                        [key: string]: (({
                            /** @description The globally unique identifier for this Statement */
                            readonly id?: string;
                            /**
                             * @description The rank of the Statement
                             * @default normal
                             * @enum {string}
                             */
                            rank: "deprecated" | "normal" | "preferred";
                        } & {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        } & {
                            /** @default [] */
                            qualifiers: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                            /** @default [] */
                            references: {
                                /** @description Hash of the Reference */
                                readonly hash?: string;
                                parts?: {
                                    property?: {
                                        /** @description The ID of the Property */
                                        id?: string;
                                        /** @description The data type of the Property */
                                        readonly data_type?: string | null;
                                    };
                                    value?: {
                                        /** @description The value, if type == "value", otherwise omitted */
                                        content?: unknown;
                                        /**
                                         * @description The value type
                                         * @enum {string}
                                         */
                                        type?: "value" | "somevalue" | "novalue";
                                    };
                                }[];
                            }[];
                        }) & ({
                            property: unknown;
                            value: unknown;
                        } & {
                            qualifiers: unknown;
                            references: unknown;
                        }))[];
                    };
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    addPropertyStatement: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
            };
            cookie?: never;
        };
        /** @description Payload containing a Wikibase Statement object and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "statement": {
                 *         "property": {
                 *           "id": "P1628"
                 *         },
                 *         "value": {
                 *           "type": "value",
                 *           "content": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
                 *         }
                 *       },
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Example edit using the Wikibase REST API"
                 *     } */
                "application/json": {
                    statement: ({
                        /** @description The globally unique identifier for this Statement */
                        readonly id?: string;
                        /**
                         * @description The rank of the Statement
                         * @default normal
                         * @enum {string}
                         */
                        rank?: "deprecated" | "normal" | "preferred";
                    } & {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    } & {
                        /** @default [] */
                        qualifiers?: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                        /** @default [] */
                        references?: {
                            /** @description Hash of the Reference */
                            readonly hash?: string;
                            parts?: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                        }[];
                    }) & ({
                        property: unknown;
                        value: unknown;
                    } & {
                        qualifiers?: unknown;
                        references?: unknown;
                    });
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description The newly created Statement. Please note that the value of the `ETag` header field refers to the Property's revision ID. */
            201: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description The URI of the newly created Statement */
                    Location: string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "P694$B4C349A2-C504-4FC5-B7D5-8B781C719D71",
                     *       "rank": "normal",
                     *       "property": {
                     *         "id": "P1628",
                     *         "data_type": "url"
                     *       },
                     *       "value": {
                     *         "type": "value",
                     *         "content": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
                     *       },
                     *       "qualifiers": [],
                     *       "references": []
                     *     } */
                    "application/json": ({
                        /** @description The globally unique identifier for this Statement */
                        readonly id?: string;
                        /**
                         * @description The rank of the Statement
                         * @default normal
                         * @enum {string}
                         */
                        rank: "deprecated" | "normal" | "preferred";
                    } & {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    } & {
                        /** @default [] */
                        qualifiers: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                        /** @default [] */
                        references: {
                            /** @description Hash of the Reference */
                            readonly hash?: string;
                            parts?: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                        }[];
                    }) & ({
                        property: unknown;
                        value: unknown;
                    } & {
                        qualifiers: unknown;
                        references: unknown;
                    });
                };
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getPropertyStatement: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
                /**
                 * @description The ID of a Statement on a Property
                 * @example P694$B4C349A2-C504-4FC5-B7D5-8B781C719D71
                 */
                statement_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The requested Statement. Please note that the value of the `ETag` header field refers to the Property's revision ID. */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "P694$B4C349A2-C504-4FC5-B7D5-8B781C719D71",
                     *       "rank": "normal",
                     *       "property": {
                     *         "id": "P1628",
                     *         "data_type": "url"
                     *       },
                     *       "value": {
                     *         "type": "value",
                     *         "content": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
                     *       },
                     *       "qualifiers": [],
                     *       "references": []
                     *     } */
                    "application/json": ({
                        /** @description The globally unique identifier for this Statement */
                        readonly id?: string;
                        /**
                         * @description The rank of the Statement
                         * @default normal
                         * @enum {string}
                         */
                        rank: "deprecated" | "normal" | "preferred";
                    } & {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    } & {
                        /** @default [] */
                        qualifiers: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                        /** @default [] */
                        references: {
                            /** @description Hash of the Reference */
                            readonly hash?: string;
                            parts?: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                        }[];
                    }) & ({
                        property: unknown;
                        value: unknown;
                    } & {
                        qualifiers: unknown;
                        references: unknown;
                    });
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    replacePropertyStatement: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
                /**
                 * @description The ID of a Statement on a Property
                 * @example P694$B4C349A2-C504-4FC5-B7D5-8B781C719D71
                 */
                statement_id: string;
            };
            cookie?: never;
        };
        /** @description Payload containing a Wikibase Statement object and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "statement": {
                 *         "property": {
                 *           "id": "P1628"
                 *         },
                 *         "value": {
                 *           "type": "value",
                 *           "content": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
                 *         }
                 *       },
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Example edit using the Wikibase REST API"
                 *     } */
                "application/json": {
                    statement: ({
                        /** @description The globally unique identifier for this Statement */
                        readonly id?: string;
                        /**
                         * @description The rank of the Statement
                         * @default normal
                         * @enum {string}
                         */
                        rank?: "deprecated" | "normal" | "preferred";
                    } & {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    } & {
                        /** @default [] */
                        qualifiers?: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                        /** @default [] */
                        references?: {
                            /** @description Hash of the Reference */
                            readonly hash?: string;
                            parts?: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                        }[];
                    }) & ({
                        property: unknown;
                        value: unknown;
                    } & {
                        qualifiers?: unknown;
                        references?: unknown;
                    });
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description A Wikibase Statement. Please note that the value of the `ETag` header field refers to the Property's revision ID. */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "P694$B4C349A2-C504-4FC5-B7D5-8B781C719D71",
                     *       "rank": "normal",
                     *       "property": {
                     *         "id": "P1628",
                     *         "data_type": "url"
                     *       },
                     *       "value": {
                     *         "type": "value",
                     *         "content": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
                     *       },
                     *       "qualifiers": [],
                     *       "references": []
                     *     } */
                    "application/json": ({
                        /** @description The globally unique identifier for this Statement */
                        readonly id?: string;
                        /**
                         * @description The rank of the Statement
                         * @default normal
                         * @enum {string}
                         */
                        rank: "deprecated" | "normal" | "preferred";
                    } & {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    } & {
                        /** @default [] */
                        qualifiers: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                        /** @default [] */
                        references: {
                            /** @description Hash of the Reference */
                            readonly hash?: string;
                            parts?: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                        }[];
                    }) & ({
                        property: unknown;
                        value: unknown;
                    } & {
                        qualifiers: unknown;
                        references: unknown;
                    });
                };
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    deletePropertyStatement: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
                /**
                 * @description The ID of a Statement on a Property
                 * @example P694$B4C349A2-C504-4FC5-B7D5-8B781C719D71
                 */
                statement_id: string;
            };
            cookie?: never;
        };
        /** @description Edit payload containing edit metadata */
        requestBody?: {
            content: {
                /** @example {
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Example edit using the Wikibase REST API"
                 *     } */
                "application/json": {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description The requested Statement was deleted */
            200: {
                headers: {
                    /** @description Language code of the language in which response is provided */
                    "Content-Language": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example Statement deleted */
                    "application/json": string;
                };
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    patchPropertyStatement: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
            };
            path: {
                /**
                 * @description The ID of the required Property
                 * @example P694
                 */
                property_id: string;
                /**
                 * @description The ID of a Statement on a Property
                 * @example P694$B4C349A2-C504-4FC5-B7D5-8B781C719D71
                 */
                statement_id: string;
            };
            cookie?: never;
        };
        /** @description Payload containing a JSON Patch document to be applied to the Statement and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "replace",
                 *           "path": "/value/content",
                 *           "value": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Update value of the 'equivalent property' Statement"
                 *     } */
                "application/json-patch+json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "replace",
                 *           "path": "/value/content",
                 *           "value": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Update value of the 'equivalent property' Statement"
                 *     } */
                "application/json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description A Wikibase Statement. Please note that the value of the `ETag` header field refers to the Property's revision ID. */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "P694$B4C349A2-C504-4FC5-B7D5-8B781C719D71",
                     *       "rank": "normal",
                     *       "property": {
                     *         "id": "P1628",
                     *         "data_type": "url"
                     *       },
                     *       "value": {
                     *         "type": "value",
                     *         "content": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
                     *       },
                     *       "qualifiers": [],
                     *       "references": []
                     *     } */
                    "application/json": ({
                        /** @description The globally unique identifier for this Statement */
                        readonly id?: string;
                        /**
                         * @description The rank of the Statement
                         * @default normal
                         * @enum {string}
                         */
                        rank: "deprecated" | "normal" | "preferred";
                    } & {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    } & {
                        /** @default [] */
                        qualifiers: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                        /** @default [] */
                        references: {
                            /** @description Hash of the Reference */
                            readonly hash?: string;
                            parts?: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                        }[];
                    }) & ({
                        property: unknown;
                        value: unknown;
                    } & {
                        qualifiers: unknown;
                        references: unknown;
                    });
                };
            };
            /** @description The provided JSON Patch is invalid */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The provided JSON Patch cannot be applied */
            409: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Applying the provided JSON Patch results in an invalid Statement */
            422: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    getStatement: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Modified-Since"?: string;
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
                /**
                 * @description Make authenticated request using a provided bearer token
                 * @example Bearer mF_9.B5f-4.1JqM
                 */
                Authorization?: string;
            };
            path: {
                /**
                 * @description The ID of a Statement
                 * @example Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA
                 */
                statement_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The requested Statement. Please note that the value of the `ETag` header field refers to the subject's revision ID. */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA",
                     *       "rank": "normal",
                     *       "property": {
                     *         "id": "P17",
                     *         "data_type": "string"
                     *       },
                     *       "value": {
                     *         "type": "value",
                     *         "content": "Senior Team Supervisor"
                     *       },
                     *       "qualifiers": [
                     *         {
                     *           "property": {
                     *             "id": "P706",
                     *             "data_type": "time"
                     *           },
                     *           "value": {
                     *             "type": "value",
                     *             "content": {
                     *               "time": "+2023-06-13T00:00:00Z",
                     *               "precision": 11,
                     *               "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                     *             }
                     *           }
                     *         }
                     *       ],
                     *       "references": [
                     *         {
                     *           "hash": "7ccd777f870b71a4c5056c7fd2a83a22cc39be6d",
                     *           "parts": [
                     *             {
                     *               "property": {
                     *                 "id": "P709",
                     *                 "data_type": "url"
                     *               },
                     *               "value": {
                     *                 "type": "value",
                     *                 "content": "https://news.example.org"
                     *               }
                     *             }
                     *           ]
                     *         }
                     *       ]
                     *     } */
                    "application/json": ({
                        /** @description The globally unique identifier for this Statement */
                        readonly id?: string;
                        /**
                         * @description The rank of the Statement
                         * @default normal
                         * @enum {string}
                         */
                        rank: "deprecated" | "normal" | "preferred";
                    } & {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    } & {
                        /** @default [] */
                        qualifiers: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                        /** @default [] */
                        references: {
                            /** @description Hash of the Reference */
                            readonly hash?: string;
                            parts?: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                        }[];
                    }) & ({
                        property: unknown;
                        value: unknown;
                    } & {
                        qualifiers: unknown;
                        references: unknown;
                    });
                };
            };
            /** @description The specified resource has not been modified since last provided revision number or date */
            304: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    replaceStatement: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
            };
            path: {
                /**
                 * @description The ID of a Statement
                 * @example Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA
                 */
                statement_id: string;
            };
            cookie?: never;
        };
        /** @description Payload containing a Wikibase Statement object and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "statement": {
                 *         "property": {
                 *           "id": "P17"
                 *         },
                 *         "value": {
                 *           "type": "value",
                 *           "content": "Senior Team Supervisor"
                 *         },
                 *         "qualifiers": [
                 *           {
                 *             "property": {
                 *               "id": "P706"
                 *             },
                 *             "value": {
                 *               "type": "value",
                 *               "content": {
                 *                 "time": "+2023-06-13T00:00:00Z",
                 *                 "precision": 11,
                 *                 "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                 *               }
                 *             }
                 *           }
                 *         ],
                 *         "references": [
                 *           {
                 *             "parts": [
                 *               {
                 *                 "property": {
                 *                   "id": "P709"
                 *                 },
                 *                 "value": {
                 *                   "type": "value",
                 *                   "content": "https://news.example.org"
                 *                 }
                 *               }
                 *             ]
                 *           }
                 *         ]
                 *       },
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Example edit using the Wikibase REST API"
                 *     } */
                "application/json": {
                    statement: ({
                        /** @description The globally unique identifier for this Statement */
                        readonly id?: string;
                        /**
                         * @description The rank of the Statement
                         * @default normal
                         * @enum {string}
                         */
                        rank?: "deprecated" | "normal" | "preferred";
                    } & {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    } & {
                        /** @default [] */
                        qualifiers?: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                        /** @default [] */
                        references?: {
                            /** @description Hash of the Reference */
                            readonly hash?: string;
                            parts?: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                        }[];
                    }) & ({
                        property: unknown;
                        value: unknown;
                    } & {
                        qualifiers?: unknown;
                        references?: unknown;
                    });
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description A Wikibase Statement. Please note that the value of the ETag header field refers to the subject's revision ID. */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA",
                     *       "rank": "normal",
                     *       "property": {
                     *         "id": "P17",
                     *         "data_type": "string"
                     *       },
                     *       "value": {
                     *         "type": "value",
                     *         "content": "Senior Team Supervisor"
                     *       },
                     *       "qualifiers": [
                     *         {
                     *           "property": {
                     *             "id": "P706",
                     *             "data_type": "time"
                     *           },
                     *           "value": {
                     *             "type": "value",
                     *             "content": {
                     *               "time": "+2023-06-13T00:00:00Z",
                     *               "precision": 11,
                     *               "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                     *             }
                     *           }
                     *         }
                     *       ],
                     *       "references": [
                     *         {
                     *           "hash": "7ccd777f870b71a4c5056c7fd2a83a22cc39be6d",
                     *           "parts": [
                     *             {
                     *               "property": {
                     *                 "id": "P709",
                     *                 "data_type": "url"
                     *               },
                     *               "value": {
                     *                 "type": "value",
                     *                 "content": "https://news.example.org"
                     *               }
                     *             }
                     *           ]
                     *         }
                     *       ]
                     *     } */
                    "application/json": ({
                        /** @description The globally unique identifier for this Statement */
                        readonly id?: string;
                        /**
                         * @description The rank of the Statement
                         * @default normal
                         * @enum {string}
                         */
                        rank: "deprecated" | "normal" | "preferred";
                    } & {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    } & {
                        /** @default [] */
                        qualifiers: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                        /** @default [] */
                        references: {
                            /** @description Hash of the Reference */
                            readonly hash?: string;
                            parts?: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                        }[];
                    }) & ({
                        property: unknown;
                        value: unknown;
                    } & {
                        qualifiers: unknown;
                        references: unknown;
                    });
                };
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    deleteStatement: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
            };
            path: {
                /**
                 * @description The ID of a Statement
                 * @example Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA
                 */
                statement_id: string;
            };
            cookie?: never;
        };
        /** @description Edit payload containing edit metadata */
        requestBody?: {
            content: {
                /** @example {
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Example edit using the Wikibase REST API"
                 *     } */
                "application/json": {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description The requested Statement was deleted */
            200: {
                headers: {
                    /** @description Language code of the language in which response is provided */
                    "Content-Language": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example Statement deleted */
                    "application/json": string;
                };
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    patchStatement: {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has been modified since the specified entity revision numbers
                 * @example [
                 *       "\"1276705620\""
                 *     ]
                 */
                "If-None-Match"?: string[];
                /**
                 * @description Conditionally perform the request only if the resource has not been modified after the specified date
                 * @example Sat, 06 Jun 2020 16:38:47 GMT
                 */
                "If-Unmodified-Since"?: string;
            };
            path: {
                /**
                 * @description The ID of a Statement
                 * @example Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA
                 */
                statement_id: string;
            };
            cookie?: never;
        };
        /** @description Payload containing a JSON Patch document to be applied to the Statement and edit metadata */
        requestBody: {
            content: {
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "add",
                 *           "path": "/references/-",
                 *           "value": {
                 *             "parts": [
                 *               {
                 *                 "property": {
                 *                   "id": "P709"
                 *                 },
                 *                 "value": {
                 *                   "type": "value",
                 *                   "content": "https://news.example.org"
                 *                 }
                 *               }
                 *             ]
                 *           }
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Add reference to Statement"
                 *     } */
                "application/json-patch+json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
                /** @example {
                 *       "patch": [
                 *         {
                 *           "op": "add",
                 *           "path": "/references/-",
                 *           "value": {
                 *             "parts": [
                 *               {
                 *                 "property": {
                 *                   "id": "P709"
                 *                 },
                 *                 "value": {
                 *                   "type": "value",
                 *                   "content": "https://news.example.org"
                 *                 }
                 *               }
                 *             ]
                 *           }
                 *         }
                 *       ],
                 *       "tags": [],
                 *       "bot": false,
                 *       "comment": "Add reference to Statement"
                 *     } */
                "application/json": {
                    /** @description A JSON Patch document as defined by RFC 6902 */
                    patch: {
                        /**
                         * @description The operation to perform
                         * @enum {string}
                         */
                        op: "add" | "copy" | "move" | "remove" | "replace" | "test";
                        /** @description A JSON Pointer */
                        path: string;
                        /** @description A JSON Pointer */
                        from?: string;
                        /** @description The value to be used within the operation */
                        value?: unknown;
                    }[];
                } & {
                    /** @default [] */
                    tags?: string[];
                    /** @default false */
                    bot?: boolean;
                    comment?: string;
                };
            };
        };
        responses: {
            /** @description A Wikibase Statement. Please note that the value of the `ETag` header field refers to the subject's revision ID. */
            200: {
                headers: {
                    /** @description Last entity revision number */
                    ETag: string;
                    /** @description Last modified date */
                    "Last-Modified": string;
                    /** @description Optional username of the user making the request */
                    "X-Authenticated-User"?: string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "Q24$9966A1CA-F3F5-4B1D-A534-7CD5953169DA",
                     *       "rank": "normal",
                     *       "property": {
                     *         "id": "P17",
                     *         "data_type": "string"
                     *       },
                     *       "value": {
                     *         "type": "value",
                     *         "content": "Senior Team Supervisor"
                     *       },
                     *       "qualifiers": [
                     *         {
                     *           "property": {
                     *             "id": "P706",
                     *             "data_type": "time"
                     *           },
                     *           "value": {
                     *             "type": "value",
                     *             "content": {
                     *               "time": "+2023-06-13T00:00:00Z",
                     *               "precision": 11,
                     *               "calendarmodel": "http://www.wikidata.org/entity/Q1985727"
                     *             }
                     *           }
                     *         }
                     *       ],
                     *       "references": [
                     *         {
                     *           "hash": "7ccd777f870b71a4c5056c7fd2a83a22cc39be6d",
                     *           "parts": [
                     *             {
                     *               "property": {
                     *                 "id": "P709",
                     *                 "data_type": "url"
                     *               },
                     *               "value": {
                     *                 "type": "value",
                     *                 "content": "https://news.example.org"
                     *               }
                     *             }
                     *           ]
                     *         }
                     *       ]
                     *     } */
                    "application/json": ({
                        /** @description The globally unique identifier for this Statement */
                        readonly id?: string;
                        /**
                         * @description The rank of the Statement
                         * @default normal
                         * @enum {string}
                         */
                        rank: "deprecated" | "normal" | "preferred";
                    } & {
                        property?: {
                            /** @description The ID of the Property */
                            id?: string;
                            /** @description The data type of the Property */
                            readonly data_type?: string | null;
                        };
                        value?: {
                            /** @description The value, if type == "value", otherwise omitted */
                            content?: unknown;
                            /**
                             * @description The value type
                             * @enum {string}
                             */
                            type?: "value" | "somevalue" | "novalue";
                        };
                    } & {
                        /** @default [] */
                        qualifiers: {
                            property?: {
                                /** @description The ID of the Property */
                                id?: string;
                                /** @description The data type of the Property */
                                readonly data_type?: string | null;
                            };
                            value?: {
                                /** @description The value, if type == "value", otherwise omitted */
                                content?: unknown;
                                /**
                                 * @description The value type
                                 * @enum {string}
                                 */
                                type?: "value" | "somevalue" | "novalue";
                            };
                        }[];
                        /** @default [] */
                        references: {
                            /** @description Hash of the Reference */
                            readonly hash?: string;
                            parts?: {
                                property?: {
                                    /** @description The ID of the Property */
                                    id?: string;
                                    /** @description The data type of the Property */
                                    readonly data_type?: string | null;
                                };
                                value?: {
                                    /** @description The value, if type == "value", otherwise omitted */
                                    content?: unknown;
                                    /**
                                     * @description The value type
                                     * @enum {string}
                                     */
                                    type?: "value" | "somevalue" | "novalue";
                                };
                            }[];
                        }[];
                    }) & ({
                        property: unknown;
                        value: unknown;
                    } & {
                        qualifiers: unknown;
                        references: unknown;
                    });
                };
            };
            /** @description The provided JSON Patch request is invalid */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The access to resource was denied */
            403: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The specified resource was not found */
            404: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The provided JSON Patch cannot be applied */
            409: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description The condition defined by a conditional request header is not fulfilled */
            412: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Applying the provided JSON Patch results in an invalid Statement */
            422: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description Too many requests */
            429: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
            /** @description An unexpected error has occurred */
            500: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "code": "unexpected-error",
                     *       "message": "Unexpected Error"
                     *     } */
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    simpleItemSearch: {
        parameters: {
            query: {
                /**
                 * @description The term to search labels by
                 * @example potato
                 */
                q: string;
                /**
                 * @description The language to search labels in
                 * @example en
                 */
                language: string;
                /**
                 * @description The number of items to show in the results
                 * @example 20
                 */
                limit?: number;
                /**
                 * @description The index to start showing results from
                 * @example 4
                 */
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A list of search results */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "results": [
                     *         {
                     *           "id": "Q123",
                     *           "display-label": {
                     *             "language": "en",
                     *             "value": "potato"
                     *           },
                     *           "description": {
                     *             "language": "en",
                     *             "value": "staple food"
                     *           },
                     *           "match": {
                     *             "type": "label",
                     *             "language": "en",
                     *             "text": "potato"
                     *           }
                     *         },
                     *         {
                     *           "id": "Q234",
                     *           "display-label": {
                     *             "language": "en",
                     *             "value": "potato"
                     *           },
                     *           "description": {
                     *             "language": "en",
                     *             "value": "species of plant"
                     *           },
                     *           "match": {
                     *             "type": "label",
                     *             "language": "en",
                     *             "text": "potato"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": {
                        results: {
                            id: string;
                            "display-label": {
                                language: string;
                                value: string;
                            } | null;
                            description: {
                                language: string;
                                value: string;
                            } | null;
                            match: {
                                type: string;
                                language: string;
                                text: string;
                            };
                        }[];
                    };
                };
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
    simplePropertySearch: {
        parameters: {
            query: {
                /**
                 * @description The term to search labels by
                 * @example taxon
                 */
                q: string;
                /**
                 * @description The language to search labels in
                 * @example en
                 */
                language: string;
                /**
                 * @description The number of items to show in the results
                 * @example 20
                 */
                limit?: number;
                /**
                 * @description The index to start showing results from
                 * @example 4
                 */
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A list of search results */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "results": [
                     *         {
                     *           "id": "P123",
                     *           "display-label": {
                     *             "language": "en",
                     *             "value": "taxon name"
                     *           },
                     *           "description": {
                     *             "language": "en",
                     *             "value": "scientific name of a taxon"
                     *           },
                     *           "match": {
                     *             "type": "label",
                     *             "language": "en",
                     *             "text": "taxon"
                     *           }
                     *         },
                     *         {
                     *           "id": "P234",
                     *           "display-label": {
                     *             "language": "en",
                     *             "value": "taxon rank"
                     *           },
                     *           "description": {
                     *             "language": "en",
                     *             "value": "level in a taxonomic hierarchy"
                     *           },
                     *           "match": {
                     *             "type": "label",
                     *             "language": "en",
                     *             "text": "taxon"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": {
                        results: {
                            id: string;
                            "display-label": {
                                language: string;
                                value: string;
                            } | null;
                            description: {
                                language: string;
                                value: string;
                            } | null;
                            match: {
                                type: string;
                                language: string;
                                text: string;
                            };
                        }[];
                    };
                };
            };
            /** @description The request cannot be processed */
            400: {
                headers: {
                    /** @description Language code of the language in which error message is provided */
                    "Content-Language": string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        code: string;
                        message: string;
                        context?: Record<string, never>;
                    };
                };
            };
        };
    };
}
