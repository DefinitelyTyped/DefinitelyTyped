// Type definitions for filter-css 1.0
// Project: https://github.com/bezoerb/filter-css#readme
// Definitions by: cherryblossom <https://github.com/cherryblossom000>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

import { AtRule, Comment, Rule } from 'css';

export = api;

declare function api(inputStylesheet: string, ignorePattern: api.Pattern | api.Pattern[], options?: api.Options): string;

declare namespace api {
    type Context = 'type' | 'media' | 'selector' | 'declarationProperty' | 'declarationValue';

    /**
     * @param context The current matching context.
     * @param value The current value.
     * @param node The current AST node generated by [`css`]{@link https://github.com/reworkcss/css} being processed.
     * @returns Whether the element should be discarded.
     */
    type PatternFunction = (context: Context, value: string | undefined, node: Rule | Comment | AtRule) => boolean;

    type Pattern = string | RegExp | PatternFunction;

    interface Options {
        /**
         * Whether to match CSS selectors.
         * @default true
         */
        matchSelectors?: boolean;

        /**
         * Whether to match [AST Node types]{@link https://github.com/reworkcss/css#types} like `font-face`.
         * @default true
         */
        matchTypes?: boolean;

        /**
         * Whether to match CSS properties like `background-image`.
         * @default true
         */
        matchDeclarationProperties?: boolean;

        /**
         * Whether to match CSS values like `url(...)`.
         * @default true
         */
        matchDeclarationValues?: boolean;

        /**
         * Whether to match media queries like `min-device-pixel-ratio: 2`.
         * @default true
         */
        matchMedia?: boolean;
    }
}
