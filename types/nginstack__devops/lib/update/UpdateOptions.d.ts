export = UpdateOptions;
declare function UpdateOptions(updateType?: DBKey | number): void;
declare class UpdateOptions {
    constructor(updateType?: DBKey | number);
    updateType: number;
    private logger_;
    targetDBName: string;
    targetServer: string;
    targetUserName: string;
    targetPassword: string;
    targetAuthToken: string;
    sourceDBName: string;
    sourceServer: string;
    sourceUserName: string;
    sourcePassword: string;
    sourceAuthToken: string;
    disableEngineRestart: boolean;
    ignoreOtherEngineServers: boolean;
    disableDatabaseSchemaUpdate: boolean;
    onlineIndexCreation: boolean | null;
    onlineIndexDrop: boolean | null;
    messageComplement: string;
    recipients: string;
    emailSubject: string;
    trackingId: string;
    validate(): void;
    private tryLoginByAuthToken_;
    private authorize_;
    private formatReferrer_;
    private newDatabase_;
    newTargetConnection(): Connection;
    getTargetConnection(): Connection;
    private targetConnection_;
    newTargetDatabase(): Database;
    getTargetDatabase(): Database;
    private targetDatabase_;
    newSourceConnection(): Connection;
    getSourceConnection(): Connection;
    private sourceConnection_;
    newSourceDatabase(): Database;
    getSourceDatabase(): Database;
    private sourceDatabase_;
    toJSON(): any;
}
import DBKey = require('@nginstack/engine/lib/dbkey/DBKey.js');
import Connection = require('@nginstack/engine/lib/connection/Connection.js');
import Database = require('@nginstack/engine/lib/database/Database.js');
