/* This is stub file for gapi.client.webmasters definition tests */
/* IMPORTANT. 
 * This file was automatically generated by https://github.com/Bolisov/google-api-typings-generator. Please do not edit it manually.
 * In case of any problems please post issue to https://github.com/Bolisov/google-api-typings-generator    
 **/

gapi.load('client', () => { 
    // now we can use gapi.client
    
    gapi.client.load('webmasters', 'v3', () => {
        // now we can use gapi.client.webmasters
   
        // don't forget to authenticate your client before sending any request to resources:     
        // declare client_id registered in Google Developers Console
        const client_id = '<<PUT YOUR CLIENT ID HERE>>';
        const scope = [     
                // View and manage Search Console data for your verified sites
                'https://www.googleapis.com/auth/webmasters',
            
                // View Search Console data for your verified sites
                'https://www.googleapis.com/auth/webmasters.readonly',
            ];
        const immediate = true;

        gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
            if (authResult && !authResult.error) {
                /* handle succesfull authorization */
                run();
            } else {
                /* handle authorization error */
            }
        }); 
    });

    async function run() {  
        
        // Query your data with filters and parameters that you define. Returns zero or more rows grouped by the row keys that you define. You must define a date range of one or more days.
        // 
        // When date is one of the group by values, any days without data are omitted from the result list. If you need to know which days have data, issue a broad date range query grouped by date for any metric, and see which day rows are returned.
        await gapi.client.searchanalytics.query({ siteUrl: "siteUrl",  }); 
        
        // Deletes a sitemap from this site.
        await gapi.client.sitemaps.delete({ feedpath: "feedpath", siteUrl: "siteUrl",  }); 
        
        // Retrieves information about a specific sitemap.
        await gapi.client.sitemaps.get({ feedpath: "feedpath", siteUrl: "siteUrl",  }); 
        
        // Lists the sitemaps-entries submitted for this site, or included in the sitemap index file (if sitemapIndex is specified in the request).
        await gapi.client.sitemaps.list({ siteUrl: "siteUrl",  }); 
        
        // Submits a sitemap for a site.
        await gapi.client.sitemaps.submit({ feedpath: "feedpath", siteUrl: "siteUrl",  }); 
        
        // Adds a site to the set of the user's sites in Search Console.
        await gapi.client.sites.add({ siteUrl: "siteUrl",  }); 
        
        // Removes a site from the set of the user's Search Console sites.
        await gapi.client.sites.delete({ siteUrl: "siteUrl",  }); 
        
        // Retrieves information about specific site.
        await gapi.client.sites.get({ siteUrl: "siteUrl",  }); 
        
        // Lists the user's Search Console sites.
        await gapi.client.sites.list({  }); 
        
        // Retrieves a time series of the number of URL crawl errors per error category and platform.
        await gapi.client.urlcrawlerrorscounts.query({ siteUrl: "siteUrl",  }); 
        
        // Retrieves details about crawl errors for a site's sample URL.
        await gapi.client.urlcrawlerrorssamples.get({ category: "category", platform: "platform", siteUrl: "siteUrl", url: "url",  }); 
        
        // Lists a site's sample URLs for the specified crawl error category and platform.
        await gapi.client.urlcrawlerrorssamples.list({ category: "category", platform: "platform", siteUrl: "siteUrl",  }); 
        
        // Marks the provided site's sample URL as fixed, and removes it from the samples list.
        await gapi.client.urlcrawlerrorssamples.markAsFixed({ category: "category", platform: "platform", siteUrl: "siteUrl", url: "url",  });
    }
});
