/* This is stub file for gapi.client.vault definition tests */
/* IMPORTANT. 
 * This file was automatically generated by https://github.com/Bolisov/google-api-typings-generator. Please do not edit it manually.
 * In case of any problems please post issue to https://github.com/Bolisov/google-api-typings-generator    
 **/

gapi.load('client', () => { 
    // now we can use gapi.client
    
    gapi.client.load('vault', 'v1', () => {
        // now we can use gapi.client.vault
  
        run();

    });

    async function run() {  
        
        // Undeletes the specified matter. Returns matter with updated state.
        await gapi.client.matters.undelete({ matterId: "matterId",  }); 
        
        // Closes the specified matter. Returns matter with updated state.
        await gapi.client.matters.close({ matterId: "matterId",  }); 
        
        // Gets the specified matter.
        await gapi.client.matters.get({ matterId: "matterId",  }); 
        
        // Updates the specified matter.
        // This updates only the name and description of the matter, identified by
        // matter id. Changes to any other fields are ignored.
        // Returns the default view of the matter.
        await gapi.client.matters.update({ matterId: "matterId",  }); 
        
        // Deletes the specified matter. Returns matter with updated state.
        await gapi.client.matters.delete({ matterId: "matterId",  }); 
        
        // Adds an account as a matter collaborator.
        await gapi.client.matters.addPermissions({ matterId: "matterId",  }); 
        
        // Lists matters the user has access to.
        await gapi.client.matters.list({  }); 
        
        // Creates a new matter. Returns created matter with default view.
        await gapi.client.matters.create({  }); 
        
        // Removes an account as a matter collaborator.
        await gapi.client.matters.removePermissions({ matterId: "matterId",  }); 
        
        // Reopens the specified matter. Returns matter with updated state.
        await gapi.client.matters.reopen({ matterId: "matterId",  });
    }
});
