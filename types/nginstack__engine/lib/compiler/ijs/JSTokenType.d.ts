export = JSTokenType;
declare function JSTokenType(): void;
type JSTokenType = string;
declare namespace JSTokenType {
    const NONE: string;
    const STRING: string;
    const NUMBER: string;
    const IDENTIFIER: string;
    const LINE_BREAK: string;
    const CONSTANT: string;
    const THIS: string;
    const NULL_LITERAL: string;
    const BOOLEAN_LITERAL: string;
    const COMMAND: string;
    const COMMAND_INCLUDE: string;
    const COMMAND_IMPORT: string;
    const COMMAND_FUNCTION: string;
    const COMMAND_VAR: string;
    const COMMAND_WITH: string;
    const COMMAND_IF: string;
    const COMMAND_ELSE: string;
    const COMMAND_WHILE: string;
    const COMMAND_FOR: string;
    const COMMAND_RETURN: string;
    const COMMAND_TRY: string;
    const COMMAND_CATCH: string;
    const COMMAND_FINALLY: string;
    const COMMAND_THROW: string;
    const COMMAND_DO: string;
    const COMMAND_BREAK: string;
    const COMMAND_CONTINUE: string;
    const COMMAND_SWITCH: string;
    const COMMAND_DEBUGGER: string;
    const COMMAND_END: string;
    const OPERATOR: string;
    const OPERATOR_ASSIGN: string;
    const OPERATOR_COMPOUND_ASSIGN: string;
    const OPERATOR_OPEN_ARRAY: string;
    const OPERATOR_CLOSE_ARRAY: string;
    const OPERATOR_INCREMENT: string;
    const OPERATOR_DECREMENT: string;
    const OPERATOR_POINT: string;
    const OPERATOR_OPEN_PARENTHESIS: string;
    const OPERATOR_CLOSE_PARENTHESIS: string;
    const OPERATOR_COMMA: string;
    const OPERATOR_AND: string;
    const OPERATOR_OR: string;
    const OPERATOR_IN: string;
    const OPERATOR_BITWISE_OR: string;
    const OPERATOR_BITWISE_XOR: string;
    const OPERATOR_BITWISE_AND: string;
    const OPERATOR_EQUALITY: string;
    const OPERATOR_RELATIONAL: string;
    const OPERATOR_BITWISE_SHIFT: string;
    const OPERATOR_ADDITIVE: string;
    const OPERATOR_MULTIPLICATIVE: string;
    const OPERATOR_UNARY: string;
    const OPERATOR_QUESTION_MARK: string;
    const OPERATOR_COLON: string;
    const OPERATOR_NEW: string;
    const OPERATOR_DELETE: string;
    const OPERATOR_END: string;
    const PUNCTUATOR: string;
    const PUNCTUATOR_SEMICOLON: string;
    const PUNCTUATOR_OPEN_BRACKET: string;
    const PUNCTUATOR_CLOSE_BRACKET: string;
    const PUNCTUATOR_END: string;
    const FUTURE_KEYWORD: string;
}
