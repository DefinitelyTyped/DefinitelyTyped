export = JSTokenType;
declare function JSTokenType(): void;
type JSTokenType = string;
declare namespace JSTokenType {
    let NONE: string;
    let STRING: string;
    let NUMBER: string;
    let IDENTIFIER: string;
    let LINE_BREAK: string;
    let CONSTANT: string;
    let THIS: string;
    let NULL_LITERAL: string;
    let BOOLEAN_LITERAL: string;
    let COMMAND: string;
    let COMMAND_INCLUDE: string;
    let COMMAND_IMPORT: string;
    let COMMAND_FUNCTION: string;
    let COMMAND_VAR: string;
    let COMMAND_WITH: string;
    let COMMAND_IF: string;
    let COMMAND_ELSE: string;
    let COMMAND_WHILE: string;
    let COMMAND_FOR: string;
    let COMMAND_RETURN: string;
    let COMMAND_TRY: string;
    let COMMAND_CATCH: string;
    let COMMAND_FINALLY: string;
    let COMMAND_THROW: string;
    let COMMAND_DO: string;
    let COMMAND_BREAK: string;
    let COMMAND_CONTINUE: string;
    let COMMAND_SWITCH: string;
    let COMMAND_DEBUGGER: string;
    let COMMAND_END: string;
    let OPERATOR: string;
    let OPERATOR_ASSIGN: string;
    let OPERATOR_COMPOUND_ASSIGN: string;
    let OPERATOR_OPEN_ARRAY: string;
    let OPERATOR_CLOSE_ARRAY: string;
    let OPERATOR_INCREMENT: string;
    let OPERATOR_DECREMENT: string;
    let OPERATOR_POINT: string;
    let OPERATOR_OPEN_PARENTHESIS: string;
    let OPERATOR_CLOSE_PARENTHESIS: string;
    let OPERATOR_COMMA: string;
    let OPERATOR_AND: string;
    let OPERATOR_OR: string;
    let OPERATOR_IN: string;
    let OPERATOR_BITWISE_OR: string;
    let OPERATOR_BITWISE_XOR: string;
    let OPERATOR_BITWISE_AND: string;
    let OPERATOR_EQUALITY: string;
    let OPERATOR_RELATIONAL: string;
    let OPERATOR_BITWISE_SHIFT: string;
    let OPERATOR_ADDITIVE: string;
    let OPERATOR_MULTIPLICATIVE: string;
    let OPERATOR_UNARY: string;
    let OPERATOR_QUESTION_MARK: string;
    let OPERATOR_COLON: string;
    let OPERATOR_NEW: string;
    let OPERATOR_DELETE: string;
    let OPERATOR_END: string;
    let PUNCTUATOR: string;
    let PUNCTUATOR_SEMICOLON: string;
    let PUNCTUATOR_OPEN_BRACKET: string;
    let PUNCTUATOR_CLOSE_BRACKET: string;
    let PUNCTUATOR_END: string;
    let FUTURE_KEYWORD: string;
}
