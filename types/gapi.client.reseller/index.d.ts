// Type definitions for non-npm package Google Enterprise Apps Reseller API v1 1.0
// Project: https://developers.google.com/google-apps/reseller/
// Definitions by: Bolisov Alexey <https://github.com/Bolisov>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.3

// IMPORTANT
// This file was generated by https://github.com/Bolisov/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Bolisov/google-api-typings-generator
// Generated from: https://www.googleapis.com/discovery/v1/apis/reseller/v1/rest

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Enterprise Apps Reseller API v1 */
    function load(name: "reseller", version: "v1"): PromiseLike<void>;
    function load(name: "reseller", version: "v1", callback: () => any): void;

    const customers: reseller.CustomersResource;

    const resellernotify: reseller.ResellernotifyResource;

    const subscriptions: reseller.SubscriptionsResource;

    namespace reseller {
        interface Address {
            /** A customer's physical address. An address can be composed of one to three lines. The addressline2 and addressLine3 are optional. */
            addressLine1?: string;
            /** Line 2 of the address. */
            addressLine2?: string;
            /** Line 3 of the address. */
            addressLine3?: string;
            /** The customer contact's name. This is required. */
            contactName?: string;
            /**
             * For countryCode information, see the ISO 3166 country code elements. Verify that country is approved for resale of Google products. This property is
             * required when creating a new customer.
             */
            countryCode?: string;
            /** Identifies the resource as a customer address. Value: customers#address */
            kind?: string;
            /** An example of a locality value is the city of San Francisco. */
            locality?: string;
            /** The company or company division name. This is required. */
            organizationName?: string;
            /** A postalCode example is a postal zip code such as 94043. This property is required when creating a new customer. */
            postalCode?: string;
            /** An example of a region value is CA for the state of California. */
            region?: string;
        }
        interface ChangePlanRequest {
            /**
             * Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in changePlan request in order to receive
             * discounted rate. This property is optional. If a deal code has already been added to a subscription, this property may be left empty and the existing
             * discounted rate will still apply (if not empty, only provide the deal code that is already present on the subscription). If a deal code has never been
             * added to a subscription and this property is left blank, regular pricing will apply.
             */
            dealCode?: string;
            /** Identifies the resource as a subscription change plan request. Value: subscriptions#changePlanRequest */
            kind?: string;
            /**
             * The planName property is required. This is the name of the subscription's payment plan. For more information about the Google payment plans, see API
             * concepts.
             *
             * Possible values are:
             * - ANNUAL_MONTHLY_PAY - The annual commitment plan with monthly payments
             * - ANNUAL_YEARLY_PAY - The annual commitment plan with yearly payments
             * - FLEXIBLE - The flexible plan
             * - TRIAL - The 30-day free trial plan
             */
            planName?: string;
            /**
             * This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a purchaseOrderId value
             * is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters.
             */
            purchaseOrderId?: string;
            /** This is a required property. The seats property is the number of user seat licenses. */
            seats?: Seats;
        }
        interface Customer {
            /**
             * Like the "Customer email" in the reseller tools, this email is the secondary contact used if something happens to the customer's service such as
             * service outage or a security issue. This property is required when creating a new customer and should not use the same domain as customerDomain.
             */
            alternateEmail?: string;
            /**
             * The customer's primary domain name string. customerDomain is required when creating a new customer. Do not include the www prefix in the domain when
             * adding a customer.
             */
            customerDomain?: string;
            /** Whether the customer's primary domain has been verified. */
            customerDomainVerified?: boolean;
            /**
             * This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary
             * domain or the unique identifier generated by Google.
             */
            customerId?: string;
            /** Identifies the resource as a customer. Value: reseller#customer */
            kind?: string;
            /**
             * Customer contact phone number. This can be continuous numbers, with spaces, etc. But it must be a real phone number and not, for example, "123". See
             * phone  local format conventions.
             */
            phoneNumber?: string;
            /** A customer's address information. Each field has a limit of 255 charcters. */
            postalAddress?: Address;
            /**
             * URL to customer's Admin console dashboard. The read-only URL is generated by the API service. This is used if your client application requires the
             * customer to complete a task in the Admin console.
             */
            resourceUiUrl?: string;
        }
        interface RenewalSettings {
            /** Identifies the resource as a subscription renewal setting. Value: subscriptions#renewalSettings */
            kind?: string;
            /**
             * Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center. When renewing a
             * subscription, the renewalType is a required property.
             */
            renewalType?: string;
        }
        interface ResellernotifyGetwatchdetailsResponse {
            /** List of registered service accounts. */
            serviceAccountEmailAddresses?: string[];
            /** Topic name of the PubSub */
            topicName?: string;
        }
        interface ResellernotifyResource {
            /** Topic name of the PubSub */
            topicName?: string;
        }
        interface Seats {
            /** Identifies the resource as a subscription change plan request. Value: subscriptions#seats */
            kind?: string;
            /**
             * Read-only field containing the current number of licensed seats for FLEXIBLE Google-Apps subscriptions and secondary subscriptions such as Google-Vault
             * and Drive-storage.
             */
            licensedNumberOfSeats?: number;
            /**
             * The maximumNumberOfSeats property is the maximum number of licenses that the customer can purchase. This property applies to plans other than the
             * annual commitment plan. How a user's licenses are managed depends on the subscription's payment plan:
             * - annual commitment plan (with monthly or yearly payments) — For this plan, a reseller is invoiced on the number of user licenses in the numberOfSeats
             * property. The maximumNumberOfSeats property is a read-only property in the API's response.
             * - flexible plan — For this plan, a reseller is invoiced on the actual number of users which is capped by the maximumNumberOfSeats. This is the maximum
             * number of user licenses a customer has for user license provisioning. This quantity can be increased up to the maximum limit defined in the reseller's
             * contract. And the minimum quantity is the current number of users in the customer account.
             * - 30-day free trial plan — A subscription in a 30-day free trial is restricted to maximum 10 seats.
             */
            maximumNumberOfSeats?: number;
            /**
             * The numberOfSeats property holds the customer's number of user licenses. How a user's licenses are managed depends on the subscription's plan:
             * - annual commitment plan (with monthly or yearly pay) — For this plan, a reseller is invoiced on the number of user licenses in the numberOfSeats
             * property. This is the maximum number of user licenses that a reseller's customer can create. The reseller can add more licenses, but once set, the
             * numberOfSeats can not be reduced until renewal. The reseller is invoiced based on the numberOfSeats value regardless of how many of these user licenses
             * are provisioned users.
             * - flexible plan — For this plan, a reseller is invoiced on the actual number of users which is capped by the maximumNumberOfSeats. The numberOfSeats
             * property is not used in the request or response for flexible plan customers.
             * - 30-day free trial plan — The numberOfSeats property is not used in the request or response for an account in a 30-day trial.
             */
            numberOfSeats?: number;
        }
        interface Subscription {
            /** Read-only field that returns the current billing method for a subscription. */
            billingMethod?: string;
            /** The creationTime property is the date when subscription was created. It is in milliseconds using the Epoch format. See an example Epoch converter. */
            creationTime?: string;
            /** Primary domain name of the customer */
            customerDomain?: string;
            /**
             * This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary
             * domain or the unique identifier generated by Google.
             */
            customerId?: string;
            /**
             * Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in insert requests in order to receive
             * discounted rate. This property is optional, regular pricing applies if left empty.
             */
            dealCode?: string;
            /** Identifies the resource as a Subscription. Value: reseller#subscription */
            kind?: string;
            /**
             * The plan property is required. In this version of the API, the G Suite plans are the flexible plan, annual commitment plan, and the 30-day free trial
             * plan. For more information about the API"s payment plans, see the API concepts.
             */
            plan?: {
                /** In this version of the API, annual commitment plan's interval is one year. */
                commitmentInterval?: {
                    /** An annual commitment plan's interval's endTime in milliseconds using the UNIX Epoch format. See an example Epoch converter. */
                    endTime?: string;
                    /** An annual commitment plan's interval's startTime in milliseconds using UNIX Epoch format. See an example Epoch converter. */
                    startTime?: string;
                };
                /**
                 * The isCommitmentPlan property's boolean value identifies the plan as an annual commitment plan:
                 * - true — The subscription's plan is an annual commitment plan.
                 * - false — The plan is not an annual commitment plan.
                 */
                isCommitmentPlan?: boolean;
                /**
                 * The planName property is required. This is the name of the subscription's plan. For more information about the Google payment plans, see the API
                 * concepts.
                 *
                 * Possible values are:
                 * - ANNUAL_MONTHLY_PAY — The annual commitment plan with monthly payments
                 * - ANNUAL_YEARLY_PAY — The annual commitment plan with yearly payments
                 * - FLEXIBLE — The flexible plan
                 * - TRIAL — The 30-day free trial plan. A subscription in trial will be suspended after the 30th free day if no payment plan is assigned. Calling
                 * changePlan will assign a payment plan to a trial but will not activate the plan. A trial will automatically begin its assigned payment plan after its
                 * 30th free day or immediately after calling startPaidService.
                 */
                planName?: string;
            };
            /**
             * This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a purchaseOrderId value
             * is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters.
             */
            purchaseOrderId?: string;
            /** Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center. */
            renewalSettings?: RenewalSettings;
            /**
             * URL to customer's Subscriptions page in the Admin console. The read-only URL is generated by the API service. This is used if your client application
             * requires the customer to complete a task using the Subscriptions page in the Admin console.
             */
            resourceUiUrl?: string;
            /** This is a required property. The number and limit of user seat licenses in the plan. */
            seats?: Seats;
            /**
             * A required property. The skuId is a unique system identifier for a product's SKU assigned to a customer in the subscription. For products and SKUs
             * available in this version of the API, see  Product and SKU IDs.
             */
            skuId?: string;
            /**
             * Read-only external display name for a product's SKU assigned to a customer in the subscription. SKU names are subject to change at Google's discretion.
             * For products and SKUs available in this version of the API, see  Product and SKU IDs.
             */
            skuName?: string;
            /** This is an optional property. */
            status?: string;
            /**
             * The subscriptionId is the subscription identifier and is unique for each customer. This is a required property. Since a subscriptionId changes when a
             * subscription is updated, we recommend not using this ID as a key for persistent data. Use the subscriptionId as described in retrieve all reseller
             * subscriptions.
             */
            subscriptionId?: string;
            /**
             * Read-only field containing an enumerable of all the current suspension reasons for a subscription. It is possible for a subscription to have many
             * concurrent, overlapping suspension reasons. A subscription's STATUS is SUSPENDED until all pending suspensions are removed.
             *
             * Possible options include:
             * - PENDING_TOS_ACCEPTANCE - The customer has not logged in and accepted the G Suite Resold Terms of Services.
             * - RENEWAL_WITH_TYPE_CANCEL - The customer's commitment ended and their service was cancelled at the end of their term.
             * - RESELLER_INITIATED - A manual suspension invoked by a Reseller.
             * - TRIAL_ENDED - The customer's trial expired without a plan selected.
             * - OTHER - The customer is suspended for an internal Google reason (e.g. abuse or otherwise).
             */
            suspensionReasons?: string[];
            /** Read-only transfer related information for the subscription. For more information, see retrieve transferable subscriptions for a customer. */
            transferInfo?: {
                /**
                 * When inserting a subscription, this is the minimum number of seats listed in the transfer order for this product. For example, if the customer has 20
                 * users, the reseller cannot place a transfer order of 15 seats. The minimum is 20 seats.
                 */
                minimumTransferableSeats?: number;
                /** The time when transfer token or intent to transfer will expire. The time is in milliseconds using UNIX Epoch format. */
                transferabilityExpirationTime?: string;
            };
            /** The G Suite annual commitment and flexible payment plans can be in a 30-day free trial. For more information, see the API concepts. */
            trialSettings?: {
                /**
                 * Determines if a subscription's plan is in a 30-day free trial or not:
                 * - true — The plan is in trial.
                 * - false — The plan is not in trial.
                 */
                isInTrial?: boolean;
                /** Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example Epoch converter. */
                trialEndTime?: string;
            };
        }
        interface Subscriptions {
            /** Identifies the resource as a collection of subscriptions. Value: reseller#subscriptions */
            kind?: string;
            /** The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results. */
            nextPageToken?: string;
            /** The subscriptions in this page of results. */
            subscriptions?: Subscription[];
        }
        interface CustomersResource {
            /** Get a customer account. */
            get(request: {
                /** Data format for the response. */
                alt?: string;
                /**
                 * Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a
                 * key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
                 * Overrides userIp if both are provided.
                 */
                quotaUser?: string;
                /** IP address of the site where the request originates. Use this if you want to enforce per-user limits. */
                userIp?: string;
            }): Request<Customer>;
            /** Order a new customer's account. */
            insert(request: {
                /** Data format for the response. */
                alt?: string;
                /**
                 * The customerAuthToken query string is required when creating a resold account that transfers a direct customer's subscription or transfers another
                 * reseller customer's subscription to your reseller management. This is a hexadecimal authentication token needed to complete the subscription transfer.
                 * For more information, see the administrator help center.
                 */
                customerAuthToken?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
                 * Overrides userIp if both are provided.
                 */
                quotaUser?: string;
                /** IP address of the site where the request originates. Use this if you want to enforce per-user limits. */
                userIp?: string;
            }): Request<Customer>;
            /** Update a customer account's settings. This method supports patch semantics. */
            patch(request: {
                /** Data format for the response. */
                alt?: string;
                /**
                 * Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a
                 * key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
                 * Overrides userIp if both are provided.
                 */
                quotaUser?: string;
                /** IP address of the site where the request originates. Use this if you want to enforce per-user limits. */
                userIp?: string;
            }): Request<Customer>;
            /** Update a customer account's settings. */
            update(request: {
                /** Data format for the response. */
                alt?: string;
                /**
                 * Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a
                 * key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
                 * Overrides userIp if both are provided.
                 */
                quotaUser?: string;
                /** IP address of the site where the request originates. Use this if you want to enforce per-user limits. */
                userIp?: string;
            }): Request<Customer>;
        }
        interface ResellernotifyResource {
            /** Returns all the details of the watch corresponding to the reseller. */
            getwatchdetails(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
                 * Overrides userIp if both are provided.
                 */
                quotaUser?: string;
                /** IP address of the site where the request originates. Use this if you want to enforce per-user limits. */
                userIp?: string;
            }): Request<ResellernotifyGetwatchdetailsResponse>;
            /** Registers a Reseller for receiving notifications. */
            register(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
                 * Overrides userIp if both are provided.
                 */
                quotaUser?: string;
                /** The service account which will own the created Cloud-PubSub topic. */
                serviceAccountEmailAddress?: string;
                /** IP address of the site where the request originates. Use this if you want to enforce per-user limits. */
                userIp?: string;
            }): Request<ResellernotifyResource>;
            /** Unregisters a Reseller for receiving notifications. */
            unregister(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
                 * Overrides userIp if both are provided.
                 */
                quotaUser?: string;
                /** The service account which owns the Cloud-PubSub topic. */
                serviceAccountEmailAddress?: string;
                /** IP address of the site where the request originates. Use this if you want to enforce per-user limits. */
                userIp?: string;
            }): Request<ResellernotifyResource>;
        }
        interface SubscriptionsResource {
            /** Activates a subscription previously suspended by the reseller */
            activate(request: {
                /** Data format for the response. */
                alt?: string;
                /**
                 * Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a
                 * key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
                 * Overrides userIp if both are provided.
                 */
                quotaUser?: string;
                /**
                 * This is a required property. The subscriptionId is the subscription identifier and is unique for each customer. Since a subscriptionId changes when a
                 * subscription is updated, we recommend to not use this ID as a key for persistent data. And the subscriptionId can be found using the retrieve all
                 * reseller subscriptions method.
                 */
                subscriptionId: string;
                /** IP address of the site where the request originates. Use this if you want to enforce per-user limits. */
                userIp?: string;
            }): Request<Subscription>;
            /**
             * Update a subscription plan. Use this method to update a plan for a 30-day trial or a flexible plan subscription to an annual commitment plan with
             * monthly or yearly payments.
             */
            changePlan(request: {
                /** Data format for the response. */
                alt?: string;
                /**
                 * Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a
                 * key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
                 * Overrides userIp if both are provided.
                 */
                quotaUser?: string;
                /**
                 * This is a required property. The subscriptionId is the subscription identifier and is unique for each customer. Since a subscriptionId changes when a
                 * subscription is updated, we recommend to not use this ID as a key for persistent data. And the subscriptionId can be found using the retrieve all
                 * reseller subscriptions method.
                 */
                subscriptionId: string;
                /** IP address of the site where the request originates. Use this if you want to enforce per-user limits. */
                userIp?: string;
            }): Request<Subscription>;
            /** Update a user license's renewal settings. This is applicable for accounts with annual commitment plans only. */
            changeRenewalSettings(request: {
                /** Data format for the response. */
                alt?: string;
                /**
                 * Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a
                 * key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
                 * Overrides userIp if both are provided.
                 */
                quotaUser?: string;
                /**
                 * This is a required property. The subscriptionId is the subscription identifier and is unique for each customer. Since a subscriptionId changes when a
                 * subscription is updated, we recommend to not use this ID as a key for persistent data. And the subscriptionId can be found using the retrieve all
                 * reseller subscriptions method.
                 */
                subscriptionId: string;
                /** IP address of the site where the request originates. Use this if you want to enforce per-user limits. */
                userIp?: string;
            }): Request<Subscription>;
            /** Update a subscription's user license settings. */
            changeSeats(request: {
                /** Data format for the response. */
                alt?: string;
                /**
                 * Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a
                 * key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
                 * Overrides userIp if both are provided.
                 */
                quotaUser?: string;
                /**
                 * This is a required property. The subscriptionId is the subscription identifier and is unique for each customer. Since a subscriptionId changes when a
                 * subscription is updated, we recommend to not use this ID as a key for persistent data. And the subscriptionId can be found using the retrieve all
                 * reseller subscriptions method.
                 */
                subscriptionId: string;
                /** IP address of the site where the request originates. Use this if you want to enforce per-user limits. */
                userIp?: string;
            }): Request<Subscription>;
            /** Cancel, suspend or transfer a subscription to direct. */
            delete(request: {
                /** Data format for the response. */
                alt?: string;
                /**
                 * Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a
                 * key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
                 */
                customerId: string;
                /** The deletionType query string enables the cancellation, downgrade, or suspension of a subscription. */
                deletionType: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
                 * Overrides userIp if both are provided.
                 */
                quotaUser?: string;
                /**
                 * This is a required property. The subscriptionId is the subscription identifier and is unique for each customer. Since a subscriptionId changes when a
                 * subscription is updated, we recommend to not use this ID as a key for persistent data. And the subscriptionId can be found using the retrieve all
                 * reseller subscriptions method.
                 */
                subscriptionId: string;
                /** IP address of the site where the request originates. Use this if you want to enforce per-user limits. */
                userIp?: string;
            }): Request<void>;
            /** Get a specific subscription. */
            get(request: {
                /** Data format for the response. */
                alt?: string;
                /**
                 * Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a
                 * key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
                 * Overrides userIp if both are provided.
                 */
                quotaUser?: string;
                /**
                 * This is a required property. The subscriptionId is the subscription identifier and is unique for each customer. Since a subscriptionId changes when a
                 * subscription is updated, we recommend to not use this ID as a key for persistent data. And the subscriptionId can be found using the retrieve all
                 * reseller subscriptions method.
                 */
                subscriptionId: string;
                /** IP address of the site where the request originates. Use this if you want to enforce per-user limits. */
                userIp?: string;
            }): Request<Subscription>;
            /** Create or transfer a subscription. */
            insert(request: {
                /** Data format for the response. */
                alt?: string;
                /**
                 * The customerAuthToken query string is required when creating a resold account that transfers a direct customer's subscription or transfers another
                 * reseller customer's subscription to your reseller management. This is a hexadecimal authentication token needed to complete the subscription transfer.
                 * For more information, see the administrator help center.
                 */
                customerAuthToken?: string;
                /**
                 * Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a
                 * key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
                 * Overrides userIp if both are provided.
                 */
                quotaUser?: string;
                /** IP address of the site where the request originates. Use this if you want to enforce per-user limits. */
                userIp?: string;
            }): Request<Subscription>;
            /**
             * List of subscriptions managed by the reseller. The list can be all subscriptions, all of a customer's subscriptions, or all of a customer's
             * transferable subscriptions.
             */
            list(request: {
                /** Data format for the response. */
                alt?: string;
                /**
                 * The customerAuthToken query string is required when creating a resold account that transfers a direct customer's subscription or transfers another
                 * reseller customer's subscription to your reseller management. This is a hexadecimal authentication token needed to complete the subscription transfer.
                 * For more information, see the administrator help center.
                 */
                customerAuthToken?: string;
                /**
                 * Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a
                 * key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
                 */
                customerId?: string;
                /**
                 * When retrieving all of your subscriptions and filtering for specific customers, you can enter a prefix for a customer name. Using an example customer
                 * group that includes exam.com, example20.com and example.com:
                 * - exa -- Returns all customer names that start with 'exa' which could include exam.com, example20.com, and example.com. A name prefix is similar to
                 * using a regular expression's asterisk, exa&#42;.
                 * - example -- Returns example20.com and example.com.
                 */
                customerNamePrefix?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * When retrieving a large list, the maxResults is the maximum number of results per page. The nextPageToken value takes you to the next page. The default
                 * is 20.
                 */
                maxResults?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Token to specify next page in the list */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
                 * Overrides userIp if both are provided.
                 */
                quotaUser?: string;
                /** IP address of the site where the request originates. Use this if you want to enforce per-user limits. */
                userIp?: string;
            }): Request<Subscriptions>;
            /** Immediately move a 30-day free trial subscription to a paid service subscription. */
            startPaidService(request: {
                /** Data format for the response. */
                alt?: string;
                /**
                 * Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a
                 * key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
                 * Overrides userIp if both are provided.
                 */
                quotaUser?: string;
                /**
                 * This is a required property. The subscriptionId is the subscription identifier and is unique for each customer. Since a subscriptionId changes when a
                 * subscription is updated, we recommend to not use this ID as a key for persistent data. And the subscriptionId can be found using the retrieve all
                 * reseller subscriptions method.
                 */
                subscriptionId: string;
                /** IP address of the site where the request originates. Use this if you want to enforce per-user limits. */
                userIp?: string;
            }): Request<Subscription>;
            /** Suspends an active subscription. */
            suspend(request: {
                /** Data format for the response. */
                alt?: string;
                /**
                 * Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a
                 * key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
                 * Overrides userIp if both are provided.
                 */
                quotaUser?: string;
                /**
                 * This is a required property. The subscriptionId is the subscription identifier and is unique for each customer. Since a subscriptionId changes when a
                 * subscription is updated, we recommend to not use this ID as a key for persistent data. And the subscriptionId can be found using the retrieve all
                 * reseller subscriptions method.
                 */
                subscriptionId: string;
                /** IP address of the site where the request originates. Use this if you want to enforce per-user limits. */
                userIp?: string;
            }): Request<Subscription>;
        }
    }
}
