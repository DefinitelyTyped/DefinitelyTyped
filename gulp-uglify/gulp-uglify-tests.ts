/// <reference path="gulp-uglify.d.ts" />
var uglify : IGulpUglify;

uglify()
uglify({ mangle: true })
uglify({ preserveComments: true })
uglify({ warnings: true })
uglify({ fromString: true })
uglify({ output: { indent_start: 0 } })
uglify({ output: { indent_level: 0 } })
uglify({ output: { quote_keys: true } })
uglify({ output: { space_colon: true } })
uglify({ output: { ascii_only: true } })
uglify({ output: { inline_script: true } })
uglify({ output: { width: 0 } })
uglify({ output: { max_line_len: 0 } })
uglify({ output: { ie_proof: true } })
uglify({ output: { beautify: true } })
uglify({ output: { source_map: true } })
uglify({ output: { bracketize: true } })
uglify({ output: { comments: true } })
uglify({ output: { semicolons: true } })
uglify({ compressor: { sequences: true } })
uglify({ compressor: { properties: true } })
uglify({ compressor: { dead_code: true } })
uglify({ compressor: { drop_debugger: true } })
uglify({ compressor: { unsafe: true } })
uglify({ compressor: { conditionals: true } })
uglify({ compressor: { comparisons: true } })
uglify({ compressor: { evaluate: true } })
uglify({ compressor: { booleans: true } })
uglify({ compressor: { loops: true } })
uglify({ compressor: { unused: true } })
uglify({ compressor: { hoist_funs: true } })
uglify({ compressor: { hoist_vars: true } })
uglify({ compressor: { if_return: true } })
uglify({ compressor: { join_vars: true } })
uglify({ compressor: { cascade: true } })
uglify({ compressor: { side_effects: true } })
uglify({ compressor: { warnings: true } })
uglify({ compressor: { global_defs: {} } })
