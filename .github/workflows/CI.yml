name: CI
# TODO(jakebailey): removeme
on:
  push:
    branches:
      - pnpm-workspaces-working

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      # forbid symlinks
      - name: 'Pre-run validation'
        run: |
          symlinks="$(find . -type l)"
          if [[ -n "$symlinks" ]]; then
            printf "Aborting: symlinks found:\n%s" "$symlinks"; exit 1
          fi

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: latest
          run_install: false

      - name: Get pnpm cache info
        id: pnpm-cache
        shell: bash
        run: |
          echo "store=$(pnpm store path)" >> $GITHUB_OUTPUT
          echo "date=$(/bin/date -u "+%Y-%m-%d")" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.store }}
          key: ${{ runner.os }}-pnpm-store-cache-${{ steps.pnpm-cache.outputs.date }}

      - run: pnpm install
      - run: pnpm ls

      # Run tests
      - run: pnpm run test-all

      - name: 'Run Danger'
        env:
          # See https://github.com/danger/danger-js/issues/1042
          DANGER_GITHUB_API_BASE_URL: 'https://api.github.com'

        # Danger failing (for example through rate-limiting) shouldn't fail the build
        run: |
          # Exposing this token is safe because the user of it has no other public repositories
          # and has no permission to modify this repository. See #62638 for the discussion.
          TOKEN='ghp_i5wtj1l2AbpFv3OU96w6R'
          TOKEN+='On3bHOkcV2AmVY6'
          DANGER_GITHUB_API_TOKEN=$TOKEN pnpm exec danger ci || $( exit 0 )

  compile_all:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        index: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
        numJobs: [16]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      # forbid symlinks
      - name: 'Pre-run validation'
        run: |
          symlinks="$(find . -type l)"
          if [[ -n "$symlinks" ]]; then
            printf "Aborting: symlinks found:\n%s" "$symlinks"; exit 1
          fi

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: latest
          run_install: false

      - name: Get pnpm cache info
        id: pnpm-cache
        shell: bash
        run: |
          echo "store=$(pnpm store path)" >> $GITHUB_OUTPUT
          echo "date=$(/bin/date -u "+%Y-%m-%d")" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.store }}
          key: ${{ runner.os }}-pnpm-store-cache-${{ steps.pnpm-cache.outputs.date }}

      - run: pnpm install
      - run: pnpm ls

      - run: |
          for i in types/**/tsconfig.json; do echo $i; done \
            | grep -v node_modules \
            | awk '(NR-1) % ${{ matrix.numJobs }} == ${{ matrix.index }}' \
            | xargs -I{} sh -c 'echo "Compiling {}"; exec pnpm tsc -p {}'
