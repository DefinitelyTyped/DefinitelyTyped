declare var React: ReactStatic;

interface ReactStatic {
	DOM: ReactDOM;
	initializeTouchEvents(shouldUseTouch: boolean): void;
	createClass(specification: ReactSpecification): (props: Object) => ReactComponent;
	renderComponent(component: ReactComponent, container: HTMLElement, callback?: () => void): ReactComponent;
	unmountComponentAtNode(container: HTMLElement): boolean;
	renderComponentToString(component: ReactComponent, callback?: (text: string) => void): string;
}

interface ReactDOM {
	a(attributes?: Object, content?: any): ReactComponent;
	abbr(attributes?: Object, content?: any): ReactComponent;
	address(attributes?: Object, content?: any): ReactComponent;
	area(attributes?: Object, content?: any): ReactComponent;
	article(attributes?: Object, content?: any): ReactComponent;
	aside(attributes?: Object, content?: any): ReactComponent;
	audio(attributes?: Object, content?: any): ReactComponent;
	b(attributes?: Object, content?: any): ReactComponent;
	base(attributes?: Object, content?: any): ReactComponent;
	bdi(attributes?: Object, content?: any): ReactComponent;
	bdo(attributes?: Object, content?: any): ReactComponent;
	big(attributes?: Object, content?: any): ReactComponent;
	blockquote(attributes?: Object, content?: any): ReactComponent;
	body(attributes?: Object, content?: any): ReactComponent;
	br(attributes?: Object, content?: any): ReactComponent;
	button(attributes?: Object, content?: any): ReactComponent;
	canvas(attributes?: Object, content?: any): ReactComponent;
	caption(attributes?: Object, content?: any): ReactComponent;
	cite(attributes?: Object, content?: any): ReactComponent;
	code(attributes?: Object, content?: any): ReactComponent;
	col(attributes?: Object, content?: any): ReactComponent;
	colgroup(attributes?: Object, content?: any): ReactComponent;
	data(attributes?: Object, content?: any): ReactComponent;
	datalist(attributes?: Object, content?: any): ReactComponent;
	dd(attributes?: Object, content?: any): ReactComponent;
	del(attributes?: Object, content?: any): ReactComponent;
	details(attributes?: Object, content?: any): ReactComponent;
	dfn(attributes?: Object, content?: any): ReactComponent;
	div(attributes?: Object, content?: any): ReactComponent;
	dl(attributes?: Object, content?: any): ReactComponent;
	dt(attributes?: Object, content?: any): ReactComponent;
	em(attributes?: Object, content?: any): ReactComponent;
	embed(attributes?: Object, content?: any): ReactComponent;
	fieldset(attributes?: Object, content?: any): ReactComponent;
	figcaption(attributes?: Object, content?: any): ReactComponent;
	figure(attributes?: Object, content?: any): ReactComponent;
	footer(attributes?: Object, content?: any): ReactComponent;
	form(attributes?: Object, content?: any): ReactComponent;
	h1(attributes?: Object, content?: any): ReactComponent;
	h2(attributes?: Object, content?: any): ReactComponent;
	h3(attributes?: Object, content?: any): ReactComponent;
	h4(attributes?: Object, content?: any): ReactComponent;
	h5(attributes?: Object, content?: any): ReactComponent;
	h6(attributes?: Object, content?: any): ReactComponent;
	head(attributes?: Object, content?: any): ReactComponent;
	header(attributes?: Object, content?: any): ReactComponent;
	hr(attributes?: Object, content?: any): ReactComponent;
	html(attributes?: Object, content?: any): ReactComponent;
	i(attributes?: Object, content?: any): ReactComponent;
	iframe(attributes?: Object, content?: any): ReactComponent;
	img(attributes?: Object, content?: any): ReactComponent;
	input(attributes?: Object, content?: any): ReactComponent;
	ins(attributes?: Object, content?: any): ReactComponent;
	kbd(attributes?: Object, content?: any): ReactComponent;
	keygen(attributes?: Object, content?: any): ReactComponent;
	label(attributes?: Object, content?: any): ReactComponent;
	legend(attributes?: Object, content?: any): ReactComponent;
	li(attributes?: Object, content?: any): ReactComponent;
	link(attributes?: Object, content?: any): ReactComponent;
	main(attributes?: Object, content?: any): ReactComponent;
	map(attributes?: Object, content?: any): ReactComponent;
	mark(attributes?: Object, content?: any): ReactComponent;
	menu(attributes?: Object, content?: any): ReactComponent;
	menuitem(attributes?: Object, content?: any): ReactComponent;
	meta(attributes?: Object, content?: any): ReactComponent;
	meter(attributes?: Object, content?: any): ReactComponent;
	nav(attributes?: Object, content?: any): ReactComponent;
	noscript(attributes?: Object, content?: any): ReactComponent;
	object(attributes?: Object, content?: any): ReactComponent;
	ol(attributes?: Object, content?: any): ReactComponent;
	optgroup(attributes?: Object, content?: any): ReactComponent;
	option(attributes?: Object, content?: any): ReactComponent;
	output(attributes?: Object, content?: any): ReactComponent;
	p(attributes?: Object, content?: any): ReactComponent;
	param(attributes?: Object, content?: any): ReactComponent;
	pre(attributes?: Object, content?: any): ReactComponent;
	progress(attributes?: Object, content?: any): ReactComponent;
	q(attributes?: Object, content?: any): ReactComponent;
	rp(attributes?: Object, content?: any): ReactComponent;
	rt(attributes?: Object, content?: any): ReactComponent;
	ruby(attributes?: Object, content?: any): ReactComponent;
	s(attributes?: Object, content?: any): ReactComponent;
	samp(attributes?: Object, content?: any): ReactComponent;
	script(attributes?: Object, content?: any): ReactComponent;
	section(attributes?: Object, content?: any): ReactComponent;
	select(attributes?: Object, content?: any): ReactComponent;
	small(attributes?: Object, content?: any): ReactComponent;
	source(attributes?: Object, content?: any): ReactComponent;
	span(attributes?: Object, content?: any): ReactComponent;
	strong(attributes?: Object, content?: any): ReactComponent;
	style(attributes?: Object, content?: any): ReactComponent;
	sub(attributes?: Object, content?: any): ReactComponent;
	summary(attributes?: Object, content?: any): ReactComponent;
	sup(attributes?: Object, content?: any): ReactComponent;
	table(attributes?: Object, content?: any): ReactComponent;
	tbody(attributes?: Object, content?: any): ReactComponent;
	td(attributes?: Object, content?: any): ReactComponent;
	textarea(attributes?: Object, content?: any): ReactComponent;
	tfoot(attributes?: Object, content?: any): ReactComponent;
	th(attributes?: Object, content?: any): ReactComponent;
	thead(attributes?: Object, content?: any): ReactComponent;
	time(attributes?: Object, content?: any): ReactComponent;
	title(attributes?: Object, content?: any): ReactComponent;
	tr(attributes?: Object, content?: any): ReactComponent;
	track(attributes?: Object, content?: any): ReactComponent;
	u(attributes?: Object, content?: any): ReactComponent;
	ul(attributes?: Object, content?: any): ReactComponent;
	var(attributes?: Object, content?: any): ReactComponent;
	video(attributes?: Object, content?: any): ReactComponent;
	wbr(attributes?: Object, content?: any): ReactComponent;
	circle(attributes?: Object, content?: any): ReactComponent;
	g(attributes?: Object, content?: any): ReactComponent;
	line(attributes?: Object, content?: any): ReactComponent;
	path(attributes?: Object, content?: any): ReactComponent;
	polygon(attributes?: Object, content?: any): ReactComponent;
	polyline(attributes?: Object, content?: any): ReactComponent;
	rect(attributes?: Object, content?: any): ReactComponent;
	svg(attributes?: Object, content?: any): ReactComponent;
	text(attributes?: Object, content?: any): ReactComponent;
}

interface ReactSpecification {
	render(): ReactComponent;
	getInitialState?(): Object;
	getDefaultProps?(): Object;
	propTypes?: Object;
	mixins?: Object[];
	displayName?: string;
	componentWillMount?(): void;
	componentDidMount?(rootNode: HTMLElement): void;
	componentWillReceiveProps?(nextProps: Object): void;
	shouldComponentUpdate?(nextProps: Object, nextState: Object): boolean;
	componentWillUpdate?(nextProps: Object, nextState: Object): void;
	componentDidUpdate?(prevProps: Object, prevState: Object, rootNode: HTMLElement): void;
	componentWillUnmount?(): void;
}

interface ReactComponent {
	getDOMNode(): HTMLElement;
	setProps(nextProps: Object): void;
	replaceProps(nextProps: Object): void;
	transferPropsTo(targetComponent: ReactComponent): ReactComponent;
	setState(nextState: Object, callback?: () => void): void;
	replaceState(nextState: Object, callback?: () => void): void;
	forceUpdate(callback?: () => void): void;
}
